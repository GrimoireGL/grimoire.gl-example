(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	module.exports = __webpack_require__(298);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {"use strict";
	
	__webpack_require__(2);
	
	__webpack_require__(293);
	
	__webpack_require__(295);
	
	if (global._babelPolyfill) {
	  throw new Error("only one instance of babel-polyfill is allowed");
	}
	global._babelPolyfill = true;
	
	var DEFINE_PROPERTY = "defineProperty";
	function define(O, key, value) {
	  O[key] || Object[DEFINE_PROPERTY](O, key, {
	    writable: true,
	    configurable: true,
	    value: value
	  });
	}
	
	define(String.prototype, "padLeft", "".padStart);
	define(String.prototype, "padRight", "".padEnd);
	
	"pop,reverse,shift,keys,values,entries,indexOf,every,some,forEach,map,filter,find,findIndex,includes,join,slice,concat,push,splice,unshift,sort,lastIndexOf,reduce,reduceRight,copyWithin,fill".split(",").forEach(function (key) {
	  [][key] && define(Array, key, Function.call.bind([][key]));
	});
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(3);
	__webpack_require__(52);
	__webpack_require__(53);
	__webpack_require__(54);
	__webpack_require__(55);
	__webpack_require__(57);
	__webpack_require__(60);
	__webpack_require__(61);
	__webpack_require__(62);
	__webpack_require__(63);
	__webpack_require__(64);
	__webpack_require__(65);
	__webpack_require__(66);
	__webpack_require__(67);
	__webpack_require__(68);
	__webpack_require__(70);
	__webpack_require__(72);
	__webpack_require__(74);
	__webpack_require__(76);
	__webpack_require__(79);
	__webpack_require__(80);
	__webpack_require__(81);
	__webpack_require__(85);
	__webpack_require__(87);
	__webpack_require__(89);
	__webpack_require__(92);
	__webpack_require__(93);
	__webpack_require__(94);
	__webpack_require__(95);
	__webpack_require__(97);
	__webpack_require__(98);
	__webpack_require__(99);
	__webpack_require__(100);
	__webpack_require__(101);
	__webpack_require__(102);
	__webpack_require__(103);
	__webpack_require__(105);
	__webpack_require__(106);
	__webpack_require__(107);
	__webpack_require__(109);
	__webpack_require__(110);
	__webpack_require__(111);
	__webpack_require__(113);
	__webpack_require__(114);
	__webpack_require__(115);
	__webpack_require__(116);
	__webpack_require__(117);
	__webpack_require__(118);
	__webpack_require__(119);
	__webpack_require__(120);
	__webpack_require__(121);
	__webpack_require__(122);
	__webpack_require__(123);
	__webpack_require__(124);
	__webpack_require__(125);
	__webpack_require__(126);
	__webpack_require__(131);
	__webpack_require__(132);
	__webpack_require__(136);
	__webpack_require__(137);
	__webpack_require__(138);
	__webpack_require__(139);
	__webpack_require__(141);
	__webpack_require__(142);
	__webpack_require__(143);
	__webpack_require__(144);
	__webpack_require__(145);
	__webpack_require__(146);
	__webpack_require__(147);
	__webpack_require__(148);
	__webpack_require__(149);
	__webpack_require__(150);
	__webpack_require__(151);
	__webpack_require__(152);
	__webpack_require__(153);
	__webpack_require__(154);
	__webpack_require__(155);
	__webpack_require__(156);
	__webpack_require__(157);
	__webpack_require__(159);
	__webpack_require__(160);
	__webpack_require__(166);
	__webpack_require__(167);
	__webpack_require__(169);
	__webpack_require__(170);
	__webpack_require__(171);
	__webpack_require__(175);
	__webpack_require__(176);
	__webpack_require__(177);
	__webpack_require__(178);
	__webpack_require__(179);
	__webpack_require__(181);
	__webpack_require__(182);
	__webpack_require__(183);
	__webpack_require__(184);
	__webpack_require__(187);
	__webpack_require__(189);
	__webpack_require__(190);
	__webpack_require__(191);
	__webpack_require__(193);
	__webpack_require__(195);
	__webpack_require__(197);
	__webpack_require__(198);
	__webpack_require__(199);
	__webpack_require__(201);
	__webpack_require__(202);
	__webpack_require__(203);
	__webpack_require__(204);
	__webpack_require__(211);
	__webpack_require__(214);
	__webpack_require__(215);
	__webpack_require__(217);
	__webpack_require__(218);
	__webpack_require__(221);
	__webpack_require__(222);
	__webpack_require__(224);
	__webpack_require__(225);
	__webpack_require__(226);
	__webpack_require__(227);
	__webpack_require__(228);
	__webpack_require__(229);
	__webpack_require__(230);
	__webpack_require__(231);
	__webpack_require__(232);
	__webpack_require__(233);
	__webpack_require__(234);
	__webpack_require__(235);
	__webpack_require__(236);
	__webpack_require__(237);
	__webpack_require__(238);
	__webpack_require__(239);
	__webpack_require__(240);
	__webpack_require__(241);
	__webpack_require__(242);
	__webpack_require__(244);
	__webpack_require__(245);
	__webpack_require__(246);
	__webpack_require__(247);
	__webpack_require__(248);
	__webpack_require__(249);
	__webpack_require__(251);
	__webpack_require__(252);
	__webpack_require__(253);
	__webpack_require__(254);
	__webpack_require__(255);
	__webpack_require__(256);
	__webpack_require__(257);
	__webpack_require__(258);
	__webpack_require__(260);
	__webpack_require__(261);
	__webpack_require__(263);
	__webpack_require__(264);
	__webpack_require__(265);
	__webpack_require__(266);
	__webpack_require__(269);
	__webpack_require__(270);
	__webpack_require__(271);
	__webpack_require__(272);
	__webpack_require__(273);
	__webpack_require__(274);
	__webpack_require__(275);
	__webpack_require__(276);
	__webpack_require__(278);
	__webpack_require__(279);
	__webpack_require__(280);
	__webpack_require__(281);
	__webpack_require__(282);
	__webpack_require__(283);
	__webpack_require__(284);
	__webpack_require__(285);
	__webpack_require__(286);
	__webpack_require__(287);
	__webpack_require__(288);
	__webpack_require__(291);
	__webpack_require__(292);
	module.exports = __webpack_require__(9);

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global         = __webpack_require__(4)
	  , has            = __webpack_require__(5)
	  , DESCRIPTORS    = __webpack_require__(6)
	  , $export        = __webpack_require__(8)
	  , redefine       = __webpack_require__(18)
	  , META           = __webpack_require__(22).KEY
	  , $fails         = __webpack_require__(7)
	  , shared         = __webpack_require__(23)
	  , setToStringTag = __webpack_require__(24)
	  , uid            = __webpack_require__(19)
	  , wks            = __webpack_require__(25)
	  , wksExt         = __webpack_require__(26)
	  , wksDefine      = __webpack_require__(27)
	  , keyOf          = __webpack_require__(29)
	  , enumKeys       = __webpack_require__(42)
	  , isArray        = __webpack_require__(45)
	  , anObject       = __webpack_require__(12)
	  , toIObject      = __webpack_require__(32)
	  , toPrimitive    = __webpack_require__(16)
	  , createDesc     = __webpack_require__(17)
	  , _create        = __webpack_require__(46)
	  , gOPNExt        = __webpack_require__(49)
	  , $GOPD          = __webpack_require__(51)
	  , $DP            = __webpack_require__(11)
	  , $keys          = __webpack_require__(30)
	  , gOPD           = $GOPD.f
	  , dP             = $DP.f
	  , gOPN           = gOPNExt.f
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , PROTOTYPE      = 'prototype'
	  , HIDDEN         = wks('_hidden')
	  , TO_PRIMITIVE   = wks('toPrimitive')
	  , isEnum         = {}.propertyIsEnumerable
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , OPSymbols      = shared('op-symbols')
	  , ObjectProto    = Object[PROTOTYPE]
	  , USE_NATIVE     = typeof $Symbol == 'function'
	  , QObject        = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
	
	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(dP({}, 'a', {
	    get: function(){ return dP(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  dP(it, key, D);
	  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
	} : dP;
	
	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};
	
	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};
	
	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if(has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = toIObject(it);
	  key = toPrimitive(key, true);
	  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto
	    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};
	
	// 19.4.1.1 Symbol([description])
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto)$set.call(OPSymbols, value);
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
	    return this._k;
	  });
	
	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f   = $defineProperty;
	  __webpack_require__(50).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(44).f  = $propertyIsEnumerable;
	  __webpack_require__(43).f = $getOwnPropertySymbols;
	
	  if(DESCRIPTORS && !__webpack_require__(28)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }
	
	  wksExt.f = function(name){
	    return wrap(wks(name));
	  }
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});
	
	for(var symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);
	
	for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);
	
	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});
	
	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});
	
	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});
	
	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(10)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 4 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 5 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(7)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 7 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(4)
	  , core      = __webpack_require__(9)
	  , hide      = __webpack_require__(10)
	  , redefine  = __webpack_require__(18)
	  , ctx       = __webpack_require__(20)
	  , PROTOTYPE = 'prototype';
	
	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE]
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE] || (exports[PROTOTYPE] = {})
	    , key, own, out, exp;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    // export native or passed
	    out = (own ? target : source)[key];
	    // bind timers to global for call from export context
	    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // extend global
	    if(target)redefine(target, key, out, type & $export.U);
	    // export
	    if(exports[key] != out)hide(exports, key, exp);
	    if(IS_PROTO && expProto[key] != out)expProto[key] = out;
	  }
	};
	global.core = core;
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 9 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(11)
	  , createDesc = __webpack_require__(17);
	module.exports = __webpack_require__(6) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(12)
	  , IE8_DOM_DEFINE = __webpack_require__(14)
	  , toPrimitive    = __webpack_require__(16)
	  , dP             = Object.defineProperty;
	
	exports.f = __webpack_require__(6) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(13);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 13 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(6) && !__webpack_require__(7)(function(){
	  return Object.defineProperty(__webpack_require__(15)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(13)
	  , document = __webpack_require__(4).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(13);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 17 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(4)
	  , hide      = __webpack_require__(10)
	  , has       = __webpack_require__(5)
	  , SRC       = __webpack_require__(19)('src')
	  , TO_STRING = 'toString'
	  , $toString = Function[TO_STRING]
	  , TPL       = ('' + $toString).split(TO_STRING);
	
	__webpack_require__(9).inspectSource = function(it){
	  return $toString.call(it);
	};
	
	(module.exports = function(O, key, val, safe){
	  var isFunction = typeof val == 'function';
	  if(isFunction)has(val, 'name') || hide(val, 'name', key);
	  if(O[key] === val)return;
	  if(isFunction)has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
	  if(O === global){
	    O[key] = val;
	  } else {
	    if(!safe){
	      delete O[key];
	      hide(O, key, val);
	    } else {
	      if(O[key])O[key] = val;
	      else hide(O, key, val);
	    }
	  }
	// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
	})(Function.prototype, TO_STRING, function toString(){
	  return typeof this == 'function' && this[SRC] || $toString.call(this);
	});

/***/ },
/* 19 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(21);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 21 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(19)('meta')
	  , isObject = __webpack_require__(13)
	  , has      = __webpack_require__(5)
	  , setDesc  = __webpack_require__(11).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(7)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(4)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(11).f
	  , has = __webpack_require__(5)
	  , TAG = __webpack_require__(25)('toStringTag');
	
	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(23)('wks')
	  , uid        = __webpack_require__(19)
	  , Symbol     = __webpack_require__(4).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';
	
	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};
	
	$exports.store = store;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(25);

/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	var global         = __webpack_require__(4)
	  , core           = __webpack_require__(9)
	  , LIBRARY        = __webpack_require__(28)
	  , wksExt         = __webpack_require__(26)
	  , defineProperty = __webpack_require__(11).f;
	module.exports = function(name){
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
	};

/***/ },
/* 28 */
/***/ function(module, exports) {

	module.exports = false;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(30)
	  , toIObject = __webpack_require__(32);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(31)
	  , enumBugKeys = __webpack_require__(41);
	
	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	var has          = __webpack_require__(5)
	  , toIObject    = __webpack_require__(32)
	  , arrayIndexOf = __webpack_require__(36)(false)
	  , IE_PROTO     = __webpack_require__(40)('IE_PROTO');
	
	module.exports = function(object, names){
	  var O      = toIObject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while(names.length > i)if(has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(33)
	  , defined = __webpack_require__(35);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(34);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 34 */
/***/ function(module, exports) {

	var toString = {}.toString;
	
	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 35 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(32)
	  , toLength  = __webpack_require__(37)
	  , toIndex   = __webpack_require__(39);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(38)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 38 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(38)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(23)('keys')
	  , uid    = __webpack_require__(19);
	module.exports = function(key){
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 41 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(30)
	  , gOPS    = __webpack_require__(43)
	  , pIE     = __webpack_require__(44);
	module.exports = function(it){
	  var result     = getKeys(it)
	    , getSymbols = gOPS.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = pIE.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

/***/ },
/* 43 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 44 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(34);
	module.exports = Array.isArray || function isArray(arg){
	  return cof(arg) == 'Array';
	};

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject    = __webpack_require__(12)
	  , dPs         = __webpack_require__(47)
	  , enumBugKeys = __webpack_require__(41)
	  , IE_PROTO    = __webpack_require__(40)('IE_PROTO')
	  , Empty       = function(){ /* empty */ }
	  , PROTOTYPE   = 'prototype';
	
	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(15)('iframe')
	    , i      = enumBugKeys.length
	    , lt     = '<'
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(48).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};
	
	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	var dP       = __webpack_require__(11)
	  , anObject = __webpack_require__(12)
	  , getKeys  = __webpack_require__(30);
	
	module.exports = __webpack_require__(6) ? Object.defineProperties : function defineProperties(O, Properties){
	  anObject(O);
	  var keys   = getKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(4).document && document.documentElement;

/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(32)
	  , gOPN      = __webpack_require__(50).f
	  , toString  = {}.toString;
	
	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];
	
	var getWindowNames = function(it){
	  try {
	    return gOPN(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};
	
	module.exports.f = function getOwnPropertyNames(it){
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys      = __webpack_require__(31)
	  , hiddenKeys = __webpack_require__(41).concat('length', 'prototype');
	
	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(44)
	  , createDesc     = __webpack_require__(17)
	  , toIObject      = __webpack_require__(32)
	  , toPrimitive    = __webpack_require__(16)
	  , has            = __webpack_require__(5)
	  , IE8_DOM_DEFINE = __webpack_require__(14)
	  , gOPD           = Object.getOwnPropertyDescriptor;
	
	exports.f = __webpack_require__(6) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){ /* empty */ }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8)
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', {create: __webpack_require__(46)});

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8);
	// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
	$export($export.S + $export.F * !__webpack_require__(6), 'Object', {defineProperty: __webpack_require__(11).f});

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8);
	// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
	$export($export.S + $export.F * !__webpack_require__(6), 'Object', {defineProperties: __webpack_require__(47)});

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	var toIObject                 = __webpack_require__(32)
	  , $getOwnPropertyDescriptor = __webpack_require__(51).f;
	
	__webpack_require__(56)('getOwnPropertyDescriptor', function(){
	  return function getOwnPropertyDescriptor(it, key){
	    return $getOwnPropertyDescriptor(toIObject(it), key);
	  };
	});

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	// most Object methods by ES6 should accept primitives
	var $export = __webpack_require__(8)
	  , core    = __webpack_require__(9)
	  , fails   = __webpack_require__(7);
	module.exports = function(KEY, exec){
	  var fn  = (core.Object || {})[KEY] || Object[KEY]
	    , exp = {};
	  exp[KEY] = exec(fn);
	  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);
	};

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 Object.getPrototypeOf(O)
	var toObject        = __webpack_require__(58)
	  , $getPrototypeOf = __webpack_require__(59);
	
	__webpack_require__(56)('getPrototypeOf', function(){
	  return function getPrototypeOf(it){
	    return $getPrototypeOf(toObject(it));
	  };
	});

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(35);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has         = __webpack_require__(5)
	  , toObject    = __webpack_require__(58)
	  , IE_PROTO    = __webpack_require__(40)('IE_PROTO')
	  , ObjectProto = Object.prototype;
	
	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 Object.keys(O)
	var toObject = __webpack_require__(58)
	  , $keys    = __webpack_require__(30);
	
	__webpack_require__(56)('keys', function(){
	  return function keys(it){
	    return $keys(toObject(it));
	  };
	});

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 Object.getOwnPropertyNames(O)
	__webpack_require__(56)('getOwnPropertyNames', function(){
	  return __webpack_require__(49).f;
	});

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.5 Object.freeze(O)
	var isObject = __webpack_require__(13)
	  , meta     = __webpack_require__(22).onFreeze;
	
	__webpack_require__(56)('freeze', function($freeze){
	  return function freeze(it){
	    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
	  };
	});

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.17 Object.seal(O)
	var isObject = __webpack_require__(13)
	  , meta     = __webpack_require__(22).onFreeze;
	
	__webpack_require__(56)('seal', function($seal){
	  return function seal(it){
	    return $seal && isObject(it) ? $seal(meta(it)) : it;
	  };
	});

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.15 Object.preventExtensions(O)
	var isObject = __webpack_require__(13)
	  , meta     = __webpack_require__(22).onFreeze;
	
	__webpack_require__(56)('preventExtensions', function($preventExtensions){
	  return function preventExtensions(it){
	    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
	  };
	});

/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.12 Object.isFrozen(O)
	var isObject = __webpack_require__(13);
	
	__webpack_require__(56)('isFrozen', function($isFrozen){
	  return function isFrozen(it){
	    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
	  };
	});

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.13 Object.isSealed(O)
	var isObject = __webpack_require__(13);
	
	__webpack_require__(56)('isSealed', function($isSealed){
	  return function isSealed(it){
	    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
	  };
	});

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.11 Object.isExtensible(O)
	var isObject = __webpack_require__(13);
	
	__webpack_require__(56)('isExtensible', function($isExtensible){
	  return function isExtensible(it){
	    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
	  };
	});

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(8);
	
	$export($export.S + $export.F, 'Object', {assign: __webpack_require__(69)});

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys  = __webpack_require__(30)
	  , gOPS     = __webpack_require__(43)
	  , pIE      = __webpack_require__(44)
	  , toObject = __webpack_require__(58)
	  , IObject  = __webpack_require__(33)
	  , $assign  = Object.assign;
	
	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(7)(function(){
	  var A = {}
	    , B = {}
	    , S = Symbol()
	    , K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function(k){ B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
	  var T     = toObject(target)
	    , aLen  = arguments.length
	    , index = 1
	    , getSymbols = gOPS.f
	    , isEnum     = pIE.f;
	  while(aLen > index){
	    var S      = IObject(arguments[index++])
	      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
	      , length = keys.length
	      , j      = 0
	      , key;
	    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
	  } return T;
	} : $assign;

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.10 Object.is(value1, value2)
	var $export = __webpack_require__(8);
	$export($export.S, 'Object', {is: __webpack_require__(71)});

/***/ },
/* 71 */
/***/ function(module, exports) {

	// 7.2.9 SameValue(x, y)
	module.exports = Object.is || function is(x, y){
	  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
	};

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(8);
	$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(73).set});

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(13)
	  , anObject = __webpack_require__(12);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(20)(Function.call, __webpack_require__(51).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.3.6 Object.prototype.toString()
	var classof = __webpack_require__(75)
	  , test    = {};
	test[__webpack_require__(25)('toStringTag')] = 'z';
	if(test + '' != '[object z]'){
	  __webpack_require__(18)(Object.prototype, 'toString', function toString(){
	    return '[object ' + classof(this) + ']';
	  }, true);
	}

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(34)
	  , TAG = __webpack_require__(25)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';
	
	// fallback for IE11 Script Access Denied error
	var tryGet = function(it, key){
	  try {
	    return it[key];
	  } catch(e){ /* empty */ }
	};
	
	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
	var $export = __webpack_require__(8);
	
	$export($export.P, 'Function', {bind: __webpack_require__(77)});

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var aFunction  = __webpack_require__(21)
	  , isObject   = __webpack_require__(13)
	  , invoke     = __webpack_require__(78)
	  , arraySlice = [].slice
	  , factories  = {};
	
	var construct = function(F, len, args){
	  if(!(len in factories)){
	    for(var n = [], i = 0; i < len; i++)n[i] = 'a[' + i + ']';
	    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
	  } return factories[len](F, args);
	};
	
	module.exports = Function.bind || function bind(that /*, args... */){
	  var fn       = aFunction(this)
	    , partArgs = arraySlice.call(arguments, 1);
	  var bound = function(/* args... */){
	    var args = partArgs.concat(arraySlice.call(arguments));
	    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
	  };
	  if(isObject(fn.prototype))bound.prototype = fn.prototype;
	  return bound;
	};

/***/ },
/* 78 */
/***/ function(module, exports) {

	// fast apply, http://jsperf.lnkit.com/fast-apply/5
	module.exports = function(fn, args, that){
	  var un = that === undefined;
	  switch(args.length){
	    case 0: return un ? fn()
	                      : fn.call(that);
	    case 1: return un ? fn(args[0])
	                      : fn.call(that, args[0]);
	    case 2: return un ? fn(args[0], args[1])
	                      : fn.call(that, args[0], args[1]);
	    case 3: return un ? fn(args[0], args[1], args[2])
	                      : fn.call(that, args[0], args[1], args[2]);
	    case 4: return un ? fn(args[0], args[1], args[2], args[3])
	                      : fn.call(that, args[0], args[1], args[2], args[3]);
	  } return              fn.apply(that, args);
	};

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(11).f
	  , createDesc = __webpack_require__(17)
	  , has        = __webpack_require__(5)
	  , FProto     = Function.prototype
	  , nameRE     = /^\s*function ([^ (]*)/
	  , NAME       = 'name';
	
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	
	// 19.2.4.2 name
	NAME in FProto || __webpack_require__(6) && dP(FProto, NAME, {
	  configurable: true,
	  get: function(){
	    try {
	      var that = this
	        , name = ('' + that).match(nameRE)[1];
	      has(that, NAME) || !isExtensible(that) || dP(that, NAME, createDesc(5, name));
	      return name;
	    } catch(e){
	      return '';
	    }
	  }
	});

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var isObject       = __webpack_require__(13)
	  , getPrototypeOf = __webpack_require__(59)
	  , HAS_INSTANCE   = __webpack_require__(25)('hasInstance')
	  , FunctionProto  = Function.prototype;
	// 19.2.3.6 Function.prototype[@@hasInstance](V)
	if(!(HAS_INSTANCE in FunctionProto))__webpack_require__(11).f(FunctionProto, HAS_INSTANCE, {value: function(O){
	  if(typeof this != 'function' || !isObject(O))return false;
	  if(!isObject(this.prototype))return O instanceof this;
	  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
	  while(O = getPrototypeOf(O))if(this.prototype === O)return true;
	  return false;
	}});

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(8)
	  , $parseInt = __webpack_require__(82);
	// 18.2.5 parseInt(string, radix)
	$export($export.G + $export.F * (parseInt != $parseInt), {parseInt: $parseInt});

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	var $parseInt = __webpack_require__(4).parseInt
	  , $trim     = __webpack_require__(83).trim
	  , ws        = __webpack_require__(84)
	  , hex       = /^[\-+]?0[xX]/;
	
	module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix){
	  var string = $trim(String(str), 3);
	  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
	} : $parseInt;

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8)
	  , defined = __webpack_require__(35)
	  , fails   = __webpack_require__(7)
	  , spaces  = __webpack_require__(84)
	  , space   = '[' + spaces + ']'
	  , non     = '\u200b\u0085'
	  , ltrim   = RegExp('^' + space + space + '*')
	  , rtrim   = RegExp(space + space + '*$');
	
	var exporter = function(KEY, exec, ALIAS){
	  var exp   = {};
	  var FORCE = fails(function(){
	    return !!spaces[KEY]() || non[KEY]() != non;
	  });
	  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
	  if(ALIAS)exp[ALIAS] = fn;
	  $export($export.P + $export.F * FORCE, 'String', exp);
	};
	
	// 1 -> String#trimLeft
	// 2 -> String#trimRight
	// 3 -> String#trim
	var trim = exporter.trim = function(string, TYPE){
	  string = String(defined(string));
	  if(TYPE & 1)string = string.replace(ltrim, '');
	  if(TYPE & 2)string = string.replace(rtrim, '');
	  return string;
	};
	
	module.exports = exporter;

/***/ },
/* 84 */
/***/ function(module, exports) {

	module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
	  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	var $export     = __webpack_require__(8)
	  , $parseFloat = __webpack_require__(86);
	// 18.2.4 parseFloat(string)
	$export($export.G + $export.F * (parseFloat != $parseFloat), {parseFloat: $parseFloat});

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	var $parseFloat = __webpack_require__(4).parseFloat
	  , $trim       = __webpack_require__(83).trim;
	
	module.exports = 1 / $parseFloat(__webpack_require__(84) + '-0') !== -Infinity ? function parseFloat(str){
	  var string = $trim(String(str), 3)
	    , result = $parseFloat(string);
	  return result === 0 && string.charAt(0) == '-' ? -0 : result;
	} : $parseFloat;

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global            = __webpack_require__(4)
	  , has               = __webpack_require__(5)
	  , cof               = __webpack_require__(34)
	  , inheritIfRequired = __webpack_require__(88)
	  , toPrimitive       = __webpack_require__(16)
	  , fails             = __webpack_require__(7)
	  , gOPN              = __webpack_require__(50).f
	  , gOPD              = __webpack_require__(51).f
	  , dP                = __webpack_require__(11).f
	  , $trim             = __webpack_require__(83).trim
	  , NUMBER            = 'Number'
	  , $Number           = global[NUMBER]
	  , Base              = $Number
	  , proto             = $Number.prototype
	  // Opera ~12 has broken Object#toString
	  , BROKEN_COF        = cof(__webpack_require__(46)(proto)) == NUMBER
	  , TRIM              = 'trim' in String.prototype;
	
	// 7.1.3 ToNumber(argument)
	var toNumber = function(argument){
	  var it = toPrimitive(argument, false);
	  if(typeof it == 'string' && it.length > 2){
	    it = TRIM ? it.trim() : $trim(it, 3);
	    var first = it.charCodeAt(0)
	      , third, radix, maxCode;
	    if(first === 43 || first === 45){
	      third = it.charCodeAt(2);
	      if(third === 88 || third === 120)return NaN; // Number('+0x1') should be NaN, old V8 fix
	    } else if(first === 48){
	      switch(it.charCodeAt(1)){
	        case 66 : case 98  : radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
	        case 79 : case 111 : radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
	        default : return +it;
	      }
	      for(var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++){
	        code = digits.charCodeAt(i);
	        // parseInt parses a string to a first unavailable symbol
	        // but ToNumber should return NaN if a string contains unavailable symbols
	        if(code < 48 || code > maxCode)return NaN;
	      } return parseInt(digits, radix);
	    }
	  } return +it;
	};
	
	if(!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')){
	  $Number = function Number(value){
	    var it = arguments.length < 1 ? 0 : value
	      , that = this;
	    return that instanceof $Number
	      // check on 1..constructor(foo) case
	      && (BROKEN_COF ? fails(function(){ proto.valueOf.call(that); }) : cof(that) != NUMBER)
	        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
	  };
	  for(var keys = __webpack_require__(6) ? gOPN(Base) : (
	    // ES3:
	    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
	    // ES6 (in case, if modules with ES6 Number statics required before):
	    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
	    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
	  ).split(','), j = 0, key; keys.length > j; j++){
	    if(has(Base, key = keys[j]) && !has($Number, key)){
	      dP($Number, key, gOPD(Base, key));
	    }
	  }
	  $Number.prototype = proto;
	  proto.constructor = $Number;
	  __webpack_require__(18)(global, NUMBER, $Number);
	}

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	var isObject       = __webpack_require__(13)
	  , setPrototypeOf = __webpack_require__(73).set;
	module.exports = function(that, target, C){
	  var P, S = target.constructor;
	  if(S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf){
	    setPrototypeOf(that, P);
	  } return that;
	};

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(8)
	  , toInteger    = __webpack_require__(38)
	  , aNumberValue = __webpack_require__(90)
	  , repeat       = __webpack_require__(91)
	  , $toFixed     = 1..toFixed
	  , floor        = Math.floor
	  , data         = [0, 0, 0, 0, 0, 0]
	  , ERROR        = 'Number.toFixed: incorrect invocation!'
	  , ZERO         = '0';
	
	var multiply = function(n, c){
	  var i  = -1
	    , c2 = c;
	  while(++i < 6){
	    c2 += n * data[i];
	    data[i] = c2 % 1e7;
	    c2 = floor(c2 / 1e7);
	  }
	};
	var divide = function(n){
	  var i = 6
	    , c = 0;
	  while(--i >= 0){
	    c += data[i];
	    data[i] = floor(c / n);
	    c = (c % n) * 1e7;
	  }
	};
	var numToString = function(){
	  var i = 6
	    , s = '';
	  while(--i >= 0){
	    if(s !== '' || i === 0 || data[i] !== 0){
	      var t = String(data[i]);
	      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
	    }
	  } return s;
	};
	var pow = function(x, n, acc){
	  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
	};
	var log = function(x){
	  var n  = 0
	    , x2 = x;
	  while(x2 >= 4096){
	    n += 12;
	    x2 /= 4096;
	  }
	  while(x2 >= 2){
	    n  += 1;
	    x2 /= 2;
	  } return n;
	};
	
	$export($export.P + $export.F * (!!$toFixed && (
	  0.00008.toFixed(3) !== '0.000' ||
	  0.9.toFixed(0) !== '1' ||
	  1.255.toFixed(2) !== '1.25' ||
	  1000000000000000128..toFixed(0) !== '1000000000000000128'
	) || !__webpack_require__(7)(function(){
	  // V8 ~ Android 4.3-
	  $toFixed.call({});
	})), 'Number', {
	  toFixed: function toFixed(fractionDigits){
	    var x = aNumberValue(this, ERROR)
	      , f = toInteger(fractionDigits)
	      , s = ''
	      , m = ZERO
	      , e, z, j, k;
	    if(f < 0 || f > 20)throw RangeError(ERROR);
	    if(x != x)return 'NaN';
	    if(x <= -1e21 || x >= 1e21)return String(x);
	    if(x < 0){
	      s = '-';
	      x = -x;
	    }
	    if(x > 1e-21){
	      e = log(x * pow(2, 69, 1)) - 69;
	      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
	      z *= 0x10000000000000;
	      e = 52 - e;
	      if(e > 0){
	        multiply(0, z);
	        j = f;
	        while(j >= 7){
	          multiply(1e7, 0);
	          j -= 7;
	        }
	        multiply(pow(10, j, 1), 0);
	        j = e - 1;
	        while(j >= 23){
	          divide(1 << 23);
	          j -= 23;
	        }
	        divide(1 << j);
	        multiply(1, 1);
	        divide(2);
	        m = numToString();
	      } else {
	        multiply(0, z);
	        multiply(1 << -e, 0);
	        m = numToString() + repeat.call(ZERO, f);
	      }
	    }
	    if(f > 0){
	      k = m.length;
	      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
	    } else {
	      m = s + m;
	    } return m;
	  }
	});

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	var cof = __webpack_require__(34);
	module.exports = function(it, msg){
	  if(typeof it != 'number' && cof(it) != 'Number')throw TypeError(msg);
	  return +it;
	};

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var toInteger = __webpack_require__(38)
	  , defined   = __webpack_require__(35);
	
	module.exports = function repeat(count){
	  var str = String(defined(this))
	    , res = ''
	    , n   = toInteger(count);
	  if(n < 0 || n == Infinity)throw RangeError("Count can't be negative");
	  for(;n > 0; (n >>>= 1) && (str += str))if(n & 1)res += str;
	  return res;
	};

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(8)
	  , $fails       = __webpack_require__(7)
	  , aNumberValue = __webpack_require__(90)
	  , $toPrecision = 1..toPrecision;
	
	$export($export.P + $export.F * ($fails(function(){
	  // IE7-
	  return $toPrecision.call(1, undefined) !== '1';
	}) || !$fails(function(){
	  // V8 ~ Android 4.3-
	  $toPrecision.call({});
	})), 'Number', {
	  toPrecision: function toPrecision(precision){
	    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
	    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision); 
	  }
	});

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.1 Number.EPSILON
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.2 Number.isFinite(number)
	var $export   = __webpack_require__(8)
	  , _isFinite = __webpack_require__(4).isFinite;
	
	$export($export.S, 'Number', {
	  isFinite: function isFinite(it){
	    return typeof it == 'number' && _isFinite(it);
	  }
	});

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Number', {isInteger: __webpack_require__(96)});

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.3 Number.isInteger(number)
	var isObject = __webpack_require__(13)
	  , floor    = Math.floor;
	module.exports = function isInteger(it){
	  return !isObject(it) && isFinite(it) && floor(it) === it;
	};

/***/ },
/* 97 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.4 Number.isNaN(number)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Number', {
	  isNaN: function isNaN(number){
	    return number != number;
	  }
	});

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.5 Number.isSafeInteger(number)
	var $export   = __webpack_require__(8)
	  , isInteger = __webpack_require__(96)
	  , abs       = Math.abs;
	
	$export($export.S, 'Number', {
	  isSafeInteger: function isSafeInteger(number){
	    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
	  }
	});

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.6 Number.MAX_SAFE_INTEGER
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	// 20.1.2.10 Number.MIN_SAFE_INTEGER
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	var $export     = __webpack_require__(8)
	  , $parseFloat = __webpack_require__(86);
	// 20.1.2.12 Number.parseFloat(string)
	$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {parseFloat: $parseFloat});

/***/ },
/* 102 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(8)
	  , $parseInt = __webpack_require__(82);
	// 20.1.2.13 Number.parseInt(string, radix)
	$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {parseInt: $parseInt});

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.3 Math.acosh(x)
	var $export = __webpack_require__(8)
	  , log1p   = __webpack_require__(104)
	  , sqrt    = Math.sqrt
	  , $acosh  = Math.acosh;
	
	$export($export.S + $export.F * !($acosh
	  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
	  && Math.floor($acosh(Number.MAX_VALUE)) == 710
	  // Tor Browser bug: Math.acosh(Infinity) -> NaN 
	  && $acosh(Infinity) == Infinity
	), 'Math', {
	  acosh: function acosh(x){
	    return (x = +x) < 1 ? NaN : x > 94906265.62425156
	      ? Math.log(x) + Math.LN2
	      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
	  }
	});

/***/ },
/* 104 */
/***/ function(module, exports) {

	// 20.2.2.20 Math.log1p(x)
	module.exports = Math.log1p || function log1p(x){
	  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
	};

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.5 Math.asinh(x)
	var $export = __webpack_require__(8)
	  , $asinh  = Math.asinh;
	
	function asinh(x){
	  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
	}
	
	// Tor Browser bug: Math.asinh(0) -> -0 
	$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.7 Math.atanh(x)
	var $export = __webpack_require__(8)
	  , $atanh  = Math.atanh;
	
	// Tor Browser bug: Math.atanh(-0) -> 0 
	$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
	  atanh: function atanh(x){
	    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
	  }
	});

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.9 Math.cbrt(x)
	var $export = __webpack_require__(8)
	  , sign    = __webpack_require__(108);
	
	$export($export.S, 'Math', {
	  cbrt: function cbrt(x){
	    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
	  }
	});

/***/ },
/* 108 */
/***/ function(module, exports) {

	// 20.2.2.28 Math.sign(x)
	module.exports = Math.sign || function sign(x){
	  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
	};

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.11 Math.clz32(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  clz32: function clz32(x){
	    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
	  }
	});

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.12 Math.cosh(x)
	var $export = __webpack_require__(8)
	  , exp     = Math.exp;
	
	$export($export.S, 'Math', {
	  cosh: function cosh(x){
	    return (exp(x = +x) + exp(-x)) / 2;
	  }
	});

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.14 Math.expm1(x)
	var $export = __webpack_require__(8)
	  , $expm1  = __webpack_require__(112);
	
	$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});

/***/ },
/* 112 */
/***/ function(module, exports) {

	// 20.2.2.14 Math.expm1(x)
	var $expm1 = Math.expm1;
	module.exports = (!$expm1
	  // Old FF bug
	  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
	  // Tor Browser bug
	  || $expm1(-2e-17) != -2e-17
	) ? function expm1(x){
	  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
	} : $expm1;

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.16 Math.fround(x)
	var $export   = __webpack_require__(8)
	  , sign      = __webpack_require__(108)
	  , pow       = Math.pow
	  , EPSILON   = pow(2, -52)
	  , EPSILON32 = pow(2, -23)
	  , MAX32     = pow(2, 127) * (2 - EPSILON32)
	  , MIN32     = pow(2, -126);
	
	var roundTiesToEven = function(n){
	  return n + 1 / EPSILON - 1 / EPSILON;
	};
	
	
	$export($export.S, 'Math', {
	  fround: function fround(x){
	    var $abs  = Math.abs(x)
	      , $sign = sign(x)
	      , a, result;
	    if($abs < MIN32)return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
	    a = (1 + EPSILON32 / EPSILON) * $abs;
	    result = a - (a - $abs);
	    if(result > MAX32 || result != result)return $sign * Infinity;
	    return $sign * result;
	  }
	});

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
	var $export = __webpack_require__(8)
	  , abs     = Math.abs;
	
	$export($export.S, 'Math', {
	  hypot: function hypot(value1, value2){ // eslint-disable-line no-unused-vars
	    var sum  = 0
	      , i    = 0
	      , aLen = arguments.length
	      , larg = 0
	      , arg, div;
	    while(i < aLen){
	      arg = abs(arguments[i++]);
	      if(larg < arg){
	        div  = larg / arg;
	        sum  = sum * div * div + 1;
	        larg = arg;
	      } else if(arg > 0){
	        div  = arg / larg;
	        sum += div * div;
	      } else sum += arg;
	    }
	    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
	  }
	});

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.18 Math.imul(x, y)
	var $export = __webpack_require__(8)
	  , $imul   = Math.imul;
	
	// some WebKit versions fails with big numbers, some has wrong arity
	$export($export.S + $export.F * __webpack_require__(7)(function(){
	  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
	}), 'Math', {
	  imul: function imul(x, y){
	    var UINT16 = 0xffff
	      , xn = +x
	      , yn = +y
	      , xl = UINT16 & xn
	      , yl = UINT16 & yn;
	    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
	  }
	});

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.21 Math.log10(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  log10: function log10(x){
	    return Math.log(x) / Math.LN10;
	  }
	});

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.20 Math.log1p(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {log1p: __webpack_require__(104)});

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.22 Math.log2(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  log2: function log2(x){
	    return Math.log(x) / Math.LN2;
	  }
	});

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.28 Math.sign(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {sign: __webpack_require__(108)});

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.30 Math.sinh(x)
	var $export = __webpack_require__(8)
	  , expm1   = __webpack_require__(112)
	  , exp     = Math.exp;
	
	// V8 near Chromium 38 has a problem with very small numbers
	$export($export.S + $export.F * __webpack_require__(7)(function(){
	  return !Math.sinh(-2e-17) != -2e-17;
	}), 'Math', {
	  sinh: function sinh(x){
	    return Math.abs(x = +x) < 1
	      ? (expm1(x) - expm1(-x)) / 2
	      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
	  }
	});

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.33 Math.tanh(x)
	var $export = __webpack_require__(8)
	  , expm1   = __webpack_require__(112)
	  , exp     = Math.exp;
	
	$export($export.S, 'Math', {
	  tanh: function tanh(x){
	    var a = expm1(x = +x)
	      , b = expm1(-x);
	    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
	  }
	});

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	// 20.2.2.34 Math.trunc(x)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  trunc: function trunc(it){
	    return (it > 0 ? Math.floor : Math.ceil)(it);
	  }
	});

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	var $export        = __webpack_require__(8)
	  , toIndex        = __webpack_require__(39)
	  , fromCharCode   = String.fromCharCode
	  , $fromCodePoint = String.fromCodePoint;
	
	// length should be 1, old FF problem
	$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
	  // 21.1.2.2 String.fromCodePoint(...codePoints)
	  fromCodePoint: function fromCodePoint(x){ // eslint-disable-line no-unused-vars
	    var res  = []
	      , aLen = arguments.length
	      , i    = 0
	      , code;
	    while(aLen > i){
	      code = +arguments[i++];
	      if(toIndex(code, 0x10ffff) !== code)throw RangeError(code + ' is not a valid code point');
	      res.push(code < 0x10000
	        ? fromCharCode(code)
	        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
	      );
	    } return res.join('');
	  }
	});

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	var $export   = __webpack_require__(8)
	  , toIObject = __webpack_require__(32)
	  , toLength  = __webpack_require__(37);
	
	$export($export.S, 'String', {
	  // 21.1.2.4 String.raw(callSite, ...substitutions)
	  raw: function raw(callSite){
	    var tpl  = toIObject(callSite.raw)
	      , len  = toLength(tpl.length)
	      , aLen = arguments.length
	      , res  = []
	      , i    = 0;
	    while(len > i){
	      res.push(String(tpl[i++]));
	      if(i < aLen)res.push(String(arguments[i]));
	    } return res.join('');
	  }
	});

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.1.3.25 String.prototype.trim()
	__webpack_require__(83)('trim', function($trim){
	  return function trim(){
	    return $trim(this, 3);
	  };
	});

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(127)(true);
	
	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(128)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(38)
	  , defined   = __webpack_require__(35);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 128 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(28)
	  , $export        = __webpack_require__(8)
	  , redefine       = __webpack_require__(18)
	  , hide           = __webpack_require__(10)
	  , has            = __webpack_require__(5)
	  , Iterators      = __webpack_require__(129)
	  , $iterCreate    = __webpack_require__(130)
	  , setToStringTag = __webpack_require__(24)
	  , getPrototypeOf = __webpack_require__(59)
	  , ITERATOR       = __webpack_require__(25)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';
	
	var returnThis = function(){ return this; };
	
	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  // Fix native
	  if($anyNative){
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 129 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var create         = __webpack_require__(46)
	  , descriptor     = __webpack_require__(17)
	  , setToStringTag = __webpack_require__(24)
	  , IteratorPrototype = {};
	
	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(10)(IteratorPrototype, __webpack_require__(25)('iterator'), function(){ return this; });
	
	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $at     = __webpack_require__(127)(false);
	$export($export.P, 'String', {
	  // 21.1.3.3 String.prototype.codePointAt(pos)
	  codePointAt: function codePointAt(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])
	'use strict';
	var $export   = __webpack_require__(8)
	  , toLength  = __webpack_require__(37)
	  , context   = __webpack_require__(133)
	  , ENDS_WITH = 'endsWith'
	  , $endsWith = ''[ENDS_WITH];
	
	$export($export.P + $export.F * __webpack_require__(135)(ENDS_WITH), 'String', {
	  endsWith: function endsWith(searchString /*, endPosition = @length */){
	    var that = context(this, searchString, ENDS_WITH)
	      , endPosition = arguments.length > 1 ? arguments[1] : undefined
	      , len    = toLength(that.length)
	      , end    = endPosition === undefined ? len : Math.min(toLength(endPosition), len)
	      , search = String(searchString);
	    return $endsWith
	      ? $endsWith.call(that, search, end)
	      : that.slice(end - search.length, end) === search;
	  }
	});

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	// helper for String#{startsWith, endsWith, includes}
	var isRegExp = __webpack_require__(134)
	  , defined  = __webpack_require__(35);
	
	module.exports = function(that, searchString, NAME){
	  if(isRegExp(searchString))throw TypeError('String#' + NAME + " doesn't accept regex!");
	  return String(defined(that));
	};

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.8 IsRegExp(argument)
	var isObject = __webpack_require__(13)
	  , cof      = __webpack_require__(34)
	  , MATCH    = __webpack_require__(25)('match');
	module.exports = function(it){
	  var isRegExp;
	  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
	};

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	var MATCH = __webpack_require__(25)('match');
	module.exports = function(KEY){
	  var re = /./;
	  try {
	    '/./'[KEY](re);
	  } catch(e){
	    try {
	      re[MATCH] = false;
	      return !'/./'[KEY](re);
	    } catch(f){ /* empty */ }
	  } return true;
	};

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.7 String.prototype.includes(searchString, position = 0)
	'use strict';
	var $export  = __webpack_require__(8)
	  , context  = __webpack_require__(133)
	  , INCLUDES = 'includes';
	
	$export($export.P + $export.F * __webpack_require__(135)(INCLUDES), 'String', {
	  includes: function includes(searchString /*, position = 0 */){
	    return !!~context(this, searchString, INCLUDES)
	      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8);
	
	$export($export.P, 'String', {
	  // 21.1.3.13 String.prototype.repeat(count)
	  repeat: __webpack_require__(91)
	});

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	// 21.1.3.18 String.prototype.startsWith(searchString [, position ])
	'use strict';
	var $export     = __webpack_require__(8)
	  , toLength    = __webpack_require__(37)
	  , context     = __webpack_require__(133)
	  , STARTS_WITH = 'startsWith'
	  , $startsWith = ''[STARTS_WITH];
	
	$export($export.P + $export.F * __webpack_require__(135)(STARTS_WITH), 'String', {
	  startsWith: function startsWith(searchString /*, position = 0 */){
	    var that   = context(this, searchString, STARTS_WITH)
	      , index  = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length))
	      , search = String(searchString);
	    return $startsWith
	      ? $startsWith.call(that, search, index)
	      : that.slice(index, index + search.length) === search;
	  }
	});

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.2 String.prototype.anchor(name)
	__webpack_require__(140)('anchor', function(createHTML){
	  return function anchor(name){
	    return createHTML(this, 'a', 'name', name);
	  }
	});

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8)
	  , fails   = __webpack_require__(7)
	  , defined = __webpack_require__(35)
	  , quot    = /"/g;
	// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
	var createHTML = function(string, tag, attribute, value) {
	  var S  = String(defined(string))
	    , p1 = '<' + tag;
	  if(attribute !== '')p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
	  return p1 + '>' + S + '</' + tag + '>';
	};
	module.exports = function(NAME, exec){
	  var O = {};
	  O[NAME] = exec(createHTML);
	  $export($export.P + $export.F * fails(function(){
	    var test = ''[NAME]('"');
	    return test !== test.toLowerCase() || test.split('"').length > 3;
	  }), 'String', O);
	};

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.3 String.prototype.big()
	__webpack_require__(140)('big', function(createHTML){
	  return function big(){
	    return createHTML(this, 'big', '', '');
	  }
	});

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.4 String.prototype.blink()
	__webpack_require__(140)('blink', function(createHTML){
	  return function blink(){
	    return createHTML(this, 'blink', '', '');
	  }
	});

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.5 String.prototype.bold()
	__webpack_require__(140)('bold', function(createHTML){
	  return function bold(){
	    return createHTML(this, 'b', '', '');
	  }
	});

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.6 String.prototype.fixed()
	__webpack_require__(140)('fixed', function(createHTML){
	  return function fixed(){
	    return createHTML(this, 'tt', '', '');
	  }
	});

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.7 String.prototype.fontcolor(color)
	__webpack_require__(140)('fontcolor', function(createHTML){
	  return function fontcolor(color){
	    return createHTML(this, 'font', 'color', color);
	  }
	});

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.8 String.prototype.fontsize(size)
	__webpack_require__(140)('fontsize', function(createHTML){
	  return function fontsize(size){
	    return createHTML(this, 'font', 'size', size);
	  }
	});

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.9 String.prototype.italics()
	__webpack_require__(140)('italics', function(createHTML){
	  return function italics(){
	    return createHTML(this, 'i', '', '');
	  }
	});

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.10 String.prototype.link(url)
	__webpack_require__(140)('link', function(createHTML){
	  return function link(url){
	    return createHTML(this, 'a', 'href', url);
	  }
	});

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.11 String.prototype.small()
	__webpack_require__(140)('small', function(createHTML){
	  return function small(){
	    return createHTML(this, 'small', '', '');
	  }
	});

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.12 String.prototype.strike()
	__webpack_require__(140)('strike', function(createHTML){
	  return function strike(){
	    return createHTML(this, 'strike', '', '');
	  }
	});

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.13 String.prototype.sub()
	__webpack_require__(140)('sub', function(createHTML){
	  return function sub(){
	    return createHTML(this, 'sub', '', '');
	  }
	});

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// B.2.3.14 String.prototype.sup()
	__webpack_require__(140)('sup', function(createHTML){
	  return function sup(){
	    return createHTML(this, 'sup', '', '');
	  }
	});

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	// 20.3.3.1 / 15.9.4.4 Date.now()
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Date', {now: function(){ return new Date().getTime(); }});

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export     = __webpack_require__(8)
	  , toObject    = __webpack_require__(58)
	  , toPrimitive = __webpack_require__(16);
	
	$export($export.P + $export.F * __webpack_require__(7)(function(){
	  return new Date(NaN).toJSON() !== null || Date.prototype.toJSON.call({toISOString: function(){ return 1; }}) !== 1;
	}), 'Date', {
	  toJSON: function toJSON(key){
	    var O  = toObject(this)
	      , pv = toPrimitive(O);
	    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
	  }
	});

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
	var $export = __webpack_require__(8)
	  , fails   = __webpack_require__(7)
	  , getTime = Date.prototype.getTime;
	
	var lz = function(num){
	  return num > 9 ? num : '0' + num;
	};
	
	// PhantomJS / old WebKit has a broken implementations
	$export($export.P + $export.F * (fails(function(){
	  return new Date(-5e13 - 1).toISOString() != '0385-07-25T07:06:39.999Z';
	}) || !fails(function(){
	  new Date(NaN).toISOString();
	})), 'Date', {
	  toISOString: function toISOString(){
	    if(!isFinite(getTime.call(this)))throw RangeError('Invalid time value');
	    var d = this
	      , y = d.getUTCFullYear()
	      , m = d.getUTCMilliseconds()
	      , s = y < 0 ? '-' : y > 9999 ? '+' : '';
	    return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
	      '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
	      'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
	      ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
	  }
	});

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	var DateProto    = Date.prototype
	  , INVALID_DATE = 'Invalid Date'
	  , TO_STRING    = 'toString'
	  , $toString    = DateProto[TO_STRING]
	  , getTime      = DateProto.getTime;
	if(new Date(NaN) + '' != INVALID_DATE){
	  __webpack_require__(18)(DateProto, TO_STRING, function toString(){
	    var value = getTime.call(this);
	    return value === value ? $toString.call(this) : INVALID_DATE;
	  });
	}

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	var TO_PRIMITIVE = __webpack_require__(25)('toPrimitive')
	  , proto        = Date.prototype;
	
	if(!(TO_PRIMITIVE in proto))__webpack_require__(10)(proto, TO_PRIMITIVE, __webpack_require__(158));

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var anObject    = __webpack_require__(12)
	  , toPrimitive = __webpack_require__(16)
	  , NUMBER      = 'number';
	
	module.exports = function(hint){
	  if(hint !== 'string' && hint !== NUMBER && hint !== 'default')throw TypeError('Incorrect hint');
	  return toPrimitive(anObject(this), hint != NUMBER);
	};

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Array', {isArray: __webpack_require__(45)});

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ctx            = __webpack_require__(20)
	  , $export        = __webpack_require__(8)
	  , toObject       = __webpack_require__(58)
	  , call           = __webpack_require__(161)
	  , isArrayIter    = __webpack_require__(162)
	  , toLength       = __webpack_require__(37)
	  , createProperty = __webpack_require__(163)
	  , getIterFn      = __webpack_require__(164);
	
	$export($export.S + $export.F * !__webpack_require__(165)(function(iter){ Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
	    var O       = toObject(arrayLike)
	      , C       = typeof this == 'function' ? this : Array
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , index   = 0
	      , iterFn  = getIterFn(O)
	      , length, result, step, iterator;
	    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
	      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for(result = new C(length); length > index; index++){
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(12);
	module.exports = function(iterator, fn, value, entries){
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch(e){
	    var ret = iterator['return'];
	    if(ret !== undefined)anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators  = __webpack_require__(129)
	  , ITERATOR   = __webpack_require__(25)('iterator')
	  , ArrayProto = Array.prototype;
	
	module.exports = function(it){
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(11)
	  , createDesc      = __webpack_require__(17);
	
	module.exports = function(object, index, value){
	  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(75)
	  , ITERATOR  = __webpack_require__(25)('iterator')
	  , Iterators = __webpack_require__(129);
	module.exports = __webpack_require__(9).getIteratorMethod = function(it){
	  if(it != undefined)return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	var ITERATOR     = __webpack_require__(25)('iterator')
	  , SAFE_CLOSING = false;
	
	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function(){ SAFE_CLOSING = true; };
	  Array.from(riter, function(){ throw 2; });
	} catch(e){ /* empty */ }
	
	module.exports = function(exec, skipClosing){
	  if(!skipClosing && !SAFE_CLOSING)return false;
	  var safe = false;
	  try {
	    var arr  = [7]
	      , iter = arr[ITERATOR]();
	    iter.next = function(){ return {done: safe = true}; };
	    arr[ITERATOR] = function(){ return iter; };
	    exec(arr);
	  } catch(e){ /* empty */ }
	  return safe;
	};

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export        = __webpack_require__(8)
	  , createProperty = __webpack_require__(163);
	
	// WebKit Array.of isn't generic
	$export($export.S + $export.F * __webpack_require__(7)(function(){
	  function F(){}
	  return !(Array.of.call(F) instanceof F);
	}), 'Array', {
	  // 22.1.2.3 Array.of( ...items)
	  of: function of(/* ...args */){
	    var index  = 0
	      , aLen   = arguments.length
	      , result = new (typeof this == 'function' ? this : Array)(aLen);
	    while(aLen > index)createProperty(result, index, arguments[index++]);
	    result.length = aLen;
	    return result;
	  }
	});

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.13 Array.prototype.join(separator)
	var $export   = __webpack_require__(8)
	  , toIObject = __webpack_require__(32)
	  , arrayJoin = [].join;
	
	// fallback for not array-like strings
	$export($export.P + $export.F * (__webpack_require__(33) != Object || !__webpack_require__(168)(arrayJoin)), 'Array', {
	  join: function join(separator){
	    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
	  }
	});

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	var fails = __webpack_require__(7);
	
	module.exports = function(method, arg){
	  return !!method && fails(function(){
	    arg ? method.call(null, function(){}, 1) : method.call(null);
	  });
	};

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export    = __webpack_require__(8)
	  , html       = __webpack_require__(48)
	  , cof        = __webpack_require__(34)
	  , toIndex    = __webpack_require__(39)
	  , toLength   = __webpack_require__(37)
	  , arraySlice = [].slice;
	
	// fallback for not array-like ES3 strings and DOM objects
	$export($export.P + $export.F * __webpack_require__(7)(function(){
	  if(html)arraySlice.call(html);
	}), 'Array', {
	  slice: function slice(begin, end){
	    var len   = toLength(this.length)
	      , klass = cof(this);
	    end = end === undefined ? len : end;
	    if(klass == 'Array')return arraySlice.call(this, begin, end);
	    var start  = toIndex(begin, len)
	      , upTo   = toIndex(end, len)
	      , size   = toLength(upTo - start)
	      , cloned = Array(size)
	      , i      = 0;
	    for(; i < size; i++)cloned[i] = klass == 'String'
	      ? this.charAt(start + i)
	      : this[start + i];
	    return cloned;
	  }
	});

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export   = __webpack_require__(8)
	  , aFunction = __webpack_require__(21)
	  , toObject  = __webpack_require__(58)
	  , fails     = __webpack_require__(7)
	  , $sort     = [].sort
	  , test      = [1, 2, 3];
	
	$export($export.P + $export.F * (fails(function(){
	  // IE8-
	  test.sort(undefined);
	}) || !fails(function(){
	  // V8 bug
	  test.sort(null);
	  // Old WebKit
	}) || !__webpack_require__(168)($sort)), 'Array', {
	  // 22.1.3.25 Array.prototype.sort(comparefn)
	  sort: function sort(comparefn){
	    return comparefn === undefined
	      ? $sort.call(toObject(this))
	      : $sort.call(toObject(this), aFunction(comparefn));
	  }
	});

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export  = __webpack_require__(8)
	  , $forEach = __webpack_require__(172)(0)
	  , STRICT   = __webpack_require__(168)([].forEach, true);
	
	$export($export.P + $export.F * !STRICT, 'Array', {
	  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
	  forEach: function forEach(callbackfn /* , thisArg */){
	    return $forEach(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	// 0 -> Array#forEach
	// 1 -> Array#map
	// 2 -> Array#filter
	// 3 -> Array#some
	// 4 -> Array#every
	// 5 -> Array#find
	// 6 -> Array#findIndex
	var ctx      = __webpack_require__(20)
	  , IObject  = __webpack_require__(33)
	  , toObject = __webpack_require__(58)
	  , toLength = __webpack_require__(37)
	  , asc      = __webpack_require__(173);
	module.exports = function(TYPE, $create){
	  var IS_MAP        = TYPE == 1
	    , IS_FILTER     = TYPE == 2
	    , IS_SOME       = TYPE == 3
	    , IS_EVERY      = TYPE == 4
	    , IS_FIND_INDEX = TYPE == 6
	    , NO_HOLES      = TYPE == 5 || IS_FIND_INDEX
	    , create        = $create || asc;
	  return function($this, callbackfn, that){
	    var O      = toObject($this)
	      , self   = IObject(O)
	      , f      = ctx(callbackfn, that, 3)
	      , length = toLength(self.length)
	      , index  = 0
	      , result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined
	      , val, res;
	    for(;length > index; index++)if(NO_HOLES || index in self){
	      val = self[index];
	      res = f(val, index, O);
	      if(TYPE){
	        if(IS_MAP)result[index] = res;            // map
	        else if(res)switch(TYPE){
	          case 3: return true;                    // some
	          case 5: return val;                     // find
	          case 6: return index;                   // findIndex
	          case 2: result.push(val);               // filter
	        } else if(IS_EVERY)return false;          // every
	      }
	    }
	    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
	  };
	};

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
	var speciesConstructor = __webpack_require__(174);
	
	module.exports = function(original, length){
	  return new (speciesConstructor(original))(length);
	};

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(13)
	  , isArray  = __webpack_require__(45)
	  , SPECIES  = __webpack_require__(25)('species');
	
	module.exports = function(original){
	  var C;
	  if(isArray(original)){
	    C = original.constructor;
	    // cross-realm fallback
	    if(typeof C == 'function' && (C === Array || isArray(C.prototype)))C = undefined;
	    if(isObject(C)){
	      C = C[SPECIES];
	      if(C === null)C = undefined;
	    }
	  } return C === undefined ? Array : C;
	};

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $map    = __webpack_require__(172)(1);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].map, true), 'Array', {
	  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
	  map: function map(callbackfn /* , thisArg */){
	    return $map(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $filter = __webpack_require__(172)(2);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].filter, true), 'Array', {
	  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
	  filter: function filter(callbackfn /* , thisArg */){
	    return $filter(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $some   = __webpack_require__(172)(3);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].some, true), 'Array', {
	  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
	  some: function some(callbackfn /* , thisArg */){
	    return $some(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $every  = __webpack_require__(172)(4);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].every, true), 'Array', {
	  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
	  every: function every(callbackfn /* , thisArg */){
	    return $every(this, callbackfn, arguments[1]);
	  }
	});

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $reduce = __webpack_require__(180);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].reduce, true), 'Array', {
	  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
	  reduce: function reduce(callbackfn /* , initialValue */){
	    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
	  }
	});

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	var aFunction = __webpack_require__(21)
	  , toObject  = __webpack_require__(58)
	  , IObject   = __webpack_require__(33)
	  , toLength  = __webpack_require__(37);
	
	module.exports = function(that, callbackfn, aLen, memo, isRight){
	  aFunction(callbackfn);
	  var O      = toObject(that)
	    , self   = IObject(O)
	    , length = toLength(O.length)
	    , index  = isRight ? length - 1 : 0
	    , i      = isRight ? -1 : 1;
	  if(aLen < 2)for(;;){
	    if(index in self){
	      memo = self[index];
	      index += i;
	      break;
	    }
	    index += i;
	    if(isRight ? index < 0 : length <= index){
	      throw TypeError('Reduce of empty array with no initial value');
	    }
	  }
	  for(;isRight ? index >= 0 : length > index; index += i)if(index in self){
	    memo = callbackfn(memo, self[index], index, O);
	  }
	  return memo;
	};

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export = __webpack_require__(8)
	  , $reduce = __webpack_require__(180);
	
	$export($export.P + $export.F * !__webpack_require__(168)([].reduceRight, true), 'Array', {
	  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
	  reduceRight: function reduceRight(callbackfn /* , initialValue */){
	    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
	  }
	});

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export       = __webpack_require__(8)
	  , $indexOf      = __webpack_require__(36)(false)
	  , $native       = [].indexOf
	  , NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;
	
	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(168)($native)), 'Array', {
	  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
	  indexOf: function indexOf(searchElement /*, fromIndex = 0 */){
	    return NEGATIVE_ZERO
	      // convert -0 to +0
	      ? $native.apply(this, arguments) || 0
	      : $indexOf(this, searchElement, arguments[1]);
	  }
	});

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export       = __webpack_require__(8)
	  , toIObject     = __webpack_require__(32)
	  , toInteger     = __webpack_require__(38)
	  , toLength      = __webpack_require__(37)
	  , $native       = [].lastIndexOf
	  , NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;
	
	$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(168)($native)), 'Array', {
	  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
	  lastIndexOf: function lastIndexOf(searchElement /*, fromIndex = @[*-1] */){
	    // convert -0 to +0
	    if(NEGATIVE_ZERO)return $native.apply(this, arguments) || 0;
	    var O      = toIObject(this)
	      , length = toLength(O.length)
	      , index  = length - 1;
	    if(arguments.length > 1)index = Math.min(index, toInteger(arguments[1]));
	    if(index < 0)index = length + index;
	    for(;index >= 0; index--)if(index in O)if(O[index] === searchElement)return index || 0;
	    return -1;
	  }
	});

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	var $export = __webpack_require__(8);
	
	$export($export.P, 'Array', {copyWithin: __webpack_require__(185)});
	
	__webpack_require__(186)('copyWithin');

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
	'use strict';
	var toObject = __webpack_require__(58)
	  , toIndex  = __webpack_require__(39)
	  , toLength = __webpack_require__(37);
	
	module.exports = [].copyWithin || function copyWithin(target/*= 0*/, start/*= 0, end = @length*/){
	  var O     = toObject(this)
	    , len   = toLength(O.length)
	    , to    = toIndex(target, len)
	    , from  = toIndex(start, len)
	    , end   = arguments.length > 2 ? arguments[2] : undefined
	    , count = Math.min((end === undefined ? len : toIndex(end, len)) - from, len - to)
	    , inc   = 1;
	  if(from < to && to < from + count){
	    inc  = -1;
	    from += count - 1;
	    to   += count - 1;
	  }
	  while(count-- > 0){
	    if(from in O)O[to] = O[from];
	    else delete O[to];
	    to   += inc;
	    from += inc;
	  } return O;
	};

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.31 Array.prototype[@@unscopables]
	var UNSCOPABLES = __webpack_require__(25)('unscopables')
	  , ArrayProto  = Array.prototype;
	if(ArrayProto[UNSCOPABLES] == undefined)__webpack_require__(10)(ArrayProto, UNSCOPABLES, {});
	module.exports = function(key){
	  ArrayProto[UNSCOPABLES][key] = true;
	};

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	var $export = __webpack_require__(8);
	
	$export($export.P, 'Array', {fill: __webpack_require__(188)});
	
	__webpack_require__(186)('fill');

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
	'use strict';
	var toObject = __webpack_require__(58)
	  , toIndex  = __webpack_require__(39)
	  , toLength = __webpack_require__(37);
	module.exports = function fill(value /*, start = 0, end = @length */){
	  var O      = toObject(this)
	    , length = toLength(O.length)
	    , aLen   = arguments.length
	    , index  = toIndex(aLen > 1 ? arguments[1] : undefined, length)
	    , end    = aLen > 2 ? arguments[2] : undefined
	    , endPos = end === undefined ? length : toIndex(end, length);
	  while(endPos > index)O[index++] = value;
	  return O;
	};

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
	var $export = __webpack_require__(8)
	  , $find   = __webpack_require__(172)(5)
	  , KEY     = 'find'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  find: function find(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(186)(KEY);

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
	var $export = __webpack_require__(8)
	  , $find   = __webpack_require__(172)(6)
	  , KEY     = 'findIndex'
	  , forced  = true;
	// Shouldn't skip holes
	if(KEY in [])Array(1)[KEY](function(){ forced = false; });
	$export($export.P + $export.F * forced, 'Array', {
	  findIndex: function findIndex(callbackfn/*, that = undefined */){
	    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	__webpack_require__(186)(KEY);

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(192)('Array');

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global      = __webpack_require__(4)
	  , dP          = __webpack_require__(11)
	  , DESCRIPTORS = __webpack_require__(6)
	  , SPECIES     = __webpack_require__(25)('species');
	
	module.exports = function(KEY){
	  var C = global[KEY];
	  if(DESCRIPTORS && C && !C[SPECIES])dP.f(C, SPECIES, {
	    configurable: true,
	    get: function(){ return this; }
	  });
	};

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(186)
	  , step             = __webpack_require__(194)
	  , Iterators        = __webpack_require__(129)
	  , toIObject        = __webpack_require__(32);
	
	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(128)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');
	
	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;
	
	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 194 */
/***/ function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	var global            = __webpack_require__(4)
	  , inheritIfRequired = __webpack_require__(88)
	  , dP                = __webpack_require__(11).f
	  , gOPN              = __webpack_require__(50).f
	  , isRegExp          = __webpack_require__(134)
	  , $flags            = __webpack_require__(196)
	  , $RegExp           = global.RegExp
	  , Base              = $RegExp
	  , proto             = $RegExp.prototype
	  , re1               = /a/g
	  , re2               = /a/g
	  // "new" creates a new object, old webkit buggy here
	  , CORRECT_NEW       = new $RegExp(re1) !== re1;
	
	if(__webpack_require__(6) && (!CORRECT_NEW || __webpack_require__(7)(function(){
	  re2[__webpack_require__(25)('match')] = false;
	  // RegExp constructor can alter flags and IsRegExp works correct with @@match
	  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
	}))){
	  $RegExp = function RegExp(p, f){
	    var tiRE = this instanceof $RegExp
	      , piRE = isRegExp(p)
	      , fiU  = f === undefined;
	    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
	      : inheritIfRequired(CORRECT_NEW
	        ? new Base(piRE && !fiU ? p.source : p, f)
	        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
	      , tiRE ? this : proto, $RegExp);
	  };
	  var proxy = function(key){
	    key in $RegExp || dP($RegExp, key, {
	      configurable: true,
	      get: function(){ return Base[key]; },
	      set: function(it){ Base[key] = it; }
	    });
	  };
	  for(var keys = gOPN(Base), i = 0; keys.length > i; )proxy(keys[i++]);
	  proto.constructor = $RegExp;
	  $RegExp.prototype = proto;
	  __webpack_require__(18)(global, 'RegExp', $RegExp);
	}
	
	__webpack_require__(192)('RegExp');

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 21.2.5.3 get RegExp.prototype.flags
	var anObject = __webpack_require__(12);
	module.exports = function(){
	  var that   = anObject(this)
	    , result = '';
	  if(that.global)     result += 'g';
	  if(that.ignoreCase) result += 'i';
	  if(that.multiline)  result += 'm';
	  if(that.unicode)    result += 'u';
	  if(that.sticky)     result += 'y';
	  return result;
	};

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	__webpack_require__(198);
	var anObject    = __webpack_require__(12)
	  , $flags      = __webpack_require__(196)
	  , DESCRIPTORS = __webpack_require__(6)
	  , TO_STRING   = 'toString'
	  , $toString   = /./[TO_STRING];
	
	var define = function(fn){
	  __webpack_require__(18)(RegExp.prototype, TO_STRING, fn, true);
	};
	
	// 21.2.5.14 RegExp.prototype.toString()
	if(__webpack_require__(7)(function(){ return $toString.call({source: 'a', flags: 'b'}) != '/a/b'; })){
	  define(function toString(){
	    var R = anObject(this);
	    return '/'.concat(R.source, '/',
	      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
	  });
	// FF44- RegExp#toString has a wrong name
	} else if($toString.name != TO_STRING){
	  define(function toString(){
	    return $toString.call(this);
	  });
	}

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	// 21.2.5.3 get RegExp.prototype.flags()
	if(__webpack_require__(6) && /./g.flags != 'g')__webpack_require__(11).f(RegExp.prototype, 'flags', {
	  configurable: true,
	  get: __webpack_require__(196)
	});

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	// @@match logic
	__webpack_require__(200)('match', 1, function(defined, MATCH, $match){
	  // 21.1.3.11 String.prototype.match(regexp)
	  return [function match(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[MATCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
	  }, $match];
	});

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var hide     = __webpack_require__(10)
	  , redefine = __webpack_require__(18)
	  , fails    = __webpack_require__(7)
	  , defined  = __webpack_require__(35)
	  , wks      = __webpack_require__(25);
	
	module.exports = function(KEY, length, exec){
	  var SYMBOL   = wks(KEY)
	    , fns      = exec(defined, SYMBOL, ''[KEY])
	    , strfn    = fns[0]
	    , rxfn     = fns[1];
	  if(fails(function(){
	    var O = {};
	    O[SYMBOL] = function(){ return 7; };
	    return ''[KEY](O) != 7;
	  })){
	    redefine(String.prototype, KEY, strfn);
	    hide(RegExp.prototype, SYMBOL, length == 2
	      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
	      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
	      ? function(string, arg){ return rxfn.call(string, this, arg); }
	      // 21.2.5.6 RegExp.prototype[@@match](string)
	      // 21.2.5.9 RegExp.prototype[@@search](string)
	      : function(string){ return rxfn.call(string, this); }
	    );
	  }
	};

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	// @@replace logic
	__webpack_require__(200)('replace', 2, function(defined, REPLACE, $replace){
	  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
	  return [function replace(searchValue, replaceValue){
	    'use strict';
	    var O  = defined(this)
	      , fn = searchValue == undefined ? undefined : searchValue[REPLACE];
	    return fn !== undefined
	      ? fn.call(searchValue, O, replaceValue)
	      : $replace.call(String(O), searchValue, replaceValue);
	  }, $replace];
	});

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	// @@search logic
	__webpack_require__(200)('search', 1, function(defined, SEARCH, $search){
	  // 21.1.3.15 String.prototype.search(regexp)
	  return [function search(regexp){
	    'use strict';
	    var O  = defined(this)
	      , fn = regexp == undefined ? undefined : regexp[SEARCH];
	    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
	  }, $search];
	});

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	// @@split logic
	__webpack_require__(200)('split', 2, function(defined, SPLIT, $split){
	  'use strict';
	  var isRegExp   = __webpack_require__(134)
	    , _split     = $split
	    , $push      = [].push
	    , $SPLIT     = 'split'
	    , LENGTH     = 'length'
	    , LAST_INDEX = 'lastIndex';
	  if(
	    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
	    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
	    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
	    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
	    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
	    ''[$SPLIT](/.?/)[LENGTH]
	  ){
	    var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
	    // based on es5-shim implementation, need to rework it
	    $split = function(separator, limit){
	      var string = String(this);
	      if(separator === undefined && limit === 0)return [];
	      // If `separator` is not a regex, use native split
	      if(!isRegExp(separator))return _split.call(string, separator, limit);
	      var output = [];
	      var flags = (separator.ignoreCase ? 'i' : '') +
	                  (separator.multiline ? 'm' : '') +
	                  (separator.unicode ? 'u' : '') +
	                  (separator.sticky ? 'y' : '');
	      var lastLastIndex = 0;
	      var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
	      // Make `global` and avoid `lastIndex` issues by working with a copy
	      var separatorCopy = new RegExp(separator.source, flags + 'g');
	      var separator2, match, lastIndex, lastLength, i;
	      // Doesn't need flags gy, but they don't hurt
	      if(!NPCG)separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
	      while(match = separatorCopy.exec(string)){
	        // `separatorCopy.lastIndex` is not reliable cross-browser
	        lastIndex = match.index + match[0][LENGTH];
	        if(lastIndex > lastLastIndex){
	          output.push(string.slice(lastLastIndex, match.index));
	          // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
	          if(!NPCG && match[LENGTH] > 1)match[0].replace(separator2, function(){
	            for(i = 1; i < arguments[LENGTH] - 2; i++)if(arguments[i] === undefined)match[i] = undefined;
	          });
	          if(match[LENGTH] > 1 && match.index < string[LENGTH])$push.apply(output, match.slice(1));
	          lastLength = match[0][LENGTH];
	          lastLastIndex = lastIndex;
	          if(output[LENGTH] >= splitLimit)break;
	        }
	        if(separatorCopy[LAST_INDEX] === match.index)separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
	      }
	      if(lastLastIndex === string[LENGTH]){
	        if(lastLength || !separatorCopy.test(''))output.push('');
	      } else output.push(string.slice(lastLastIndex));
	      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
	    };
	  // Chakra, V8
	  } else if('0'[$SPLIT](undefined, 0)[LENGTH]){
	    $split = function(separator, limit){
	      return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
	    };
	  }
	  // 21.1.3.17 String.prototype.split(separator, limit)
	  return [function split(separator, limit){
	    var O  = defined(this)
	      , fn = separator == undefined ? undefined : separator[SPLIT];
	    return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
	  }, $split];
	});

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY            = __webpack_require__(28)
	  , global             = __webpack_require__(4)
	  , ctx                = __webpack_require__(20)
	  , classof            = __webpack_require__(75)
	  , $export            = __webpack_require__(8)
	  , isObject           = __webpack_require__(13)
	  , aFunction          = __webpack_require__(21)
	  , anInstance         = __webpack_require__(205)
	  , forOf              = __webpack_require__(206)
	  , speciesConstructor = __webpack_require__(207)
	  , task               = __webpack_require__(208).set
	  , microtask          = __webpack_require__(209)()
	  , PROMISE            = 'Promise'
	  , TypeError          = global.TypeError
	  , process            = global.process
	  , $Promise           = global[PROMISE]
	  , process            = global.process
	  , isNode             = classof(process) == 'process'
	  , empty              = function(){ /* empty */ }
	  , Internal, GenericPromiseCapability, Wrapper;
	
	var USE_NATIVE = !!function(){
	  try {
	    // correct subclassing with @@species support
	    var promise     = $Promise.resolve(1)
	      , FakePromise = (promise.constructor = {})[__webpack_require__(25)('species')] = function(exec){ exec(empty, empty); };
	    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
	    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;
	  } catch(e){ /* empty */ }
	}();
	
	// helpers
	var sameConstructor = function(a, b){
	  // with library wrapper special case
	  return a === b || a === $Promise && b === Wrapper;
	};
	var isThenable = function(it){
	  var then;
	  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
	};
	var newPromiseCapability = function(C){
	  return sameConstructor($Promise, C)
	    ? new PromiseCapability(C)
	    : new GenericPromiseCapability(C);
	};
	var PromiseCapability = GenericPromiseCapability = function(C){
	  var resolve, reject;
	  this.promise = new C(function($$resolve, $$reject){
	    if(resolve !== undefined || reject !== undefined)throw TypeError('Bad Promise constructor');
	    resolve = $$resolve;
	    reject  = $$reject;
	  });
	  this.resolve = aFunction(resolve);
	  this.reject  = aFunction(reject);
	};
	var perform = function(exec){
	  try {
	    exec();
	  } catch(e){
	    return {error: e};
	  }
	};
	var notify = function(promise, isReject){
	  if(promise._n)return;
	  promise._n = true;
	  var chain = promise._c;
	  microtask(function(){
	    var value = promise._v
	      , ok    = promise._s == 1
	      , i     = 0;
	    var run = function(reaction){
	      var handler = ok ? reaction.ok : reaction.fail
	        , resolve = reaction.resolve
	        , reject  = reaction.reject
	        , domain  = reaction.domain
	        , result, then;
	      try {
	        if(handler){
	          if(!ok){
	            if(promise._h == 2)onHandleUnhandled(promise);
	            promise._h = 1;
	          }
	          if(handler === true)result = value;
	          else {
	            if(domain)domain.enter();
	            result = handler(value);
	            if(domain)domain.exit();
	          }
	          if(result === reaction.promise){
	            reject(TypeError('Promise-chain cycle'));
	          } else if(then = isThenable(result)){
	            then.call(result, resolve, reject);
	          } else resolve(result);
	        } else reject(value);
	      } catch(e){
	        reject(e);
	      }
	    };
	    while(chain.length > i)run(chain[i++]); // variable length - can't use forEach
	    promise._c = [];
	    promise._n = false;
	    if(isReject && !promise._h)onUnhandled(promise);
	  });
	};
	var onUnhandled = function(promise){
	  task.call(global, function(){
	    var value = promise._v
	      , abrupt, handler, console;
	    if(isUnhandled(promise)){
	      abrupt = perform(function(){
	        if(isNode){
	          process.emit('unhandledRejection', value, promise);
	        } else if(handler = global.onunhandledrejection){
	          handler({promise: promise, reason: value});
	        } else if((console = global.console) && console.error){
	          console.error('Unhandled promise rejection', value);
	        }
	      });
	      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
	      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
	    } promise._a = undefined;
	    if(abrupt)throw abrupt.error;
	  });
	};
	var isUnhandled = function(promise){
	  if(promise._h == 1)return false;
	  var chain = promise._a || promise._c
	    , i     = 0
	    , reaction;
	  while(chain.length > i){
	    reaction = chain[i++];
	    if(reaction.fail || !isUnhandled(reaction.promise))return false;
	  } return true;
	};
	var onHandleUnhandled = function(promise){
	  task.call(global, function(){
	    var handler;
	    if(isNode){
	      process.emit('rejectionHandled', promise);
	    } else if(handler = global.onrejectionhandled){
	      handler({promise: promise, reason: promise._v});
	    }
	  });
	};
	var $reject = function(value){
	  var promise = this;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  promise._v = value;
	  promise._s = 2;
	  if(!promise._a)promise._a = promise._c.slice();
	  notify(promise, true);
	};
	var $resolve = function(value){
	  var promise = this
	    , then;
	  if(promise._d)return;
	  promise._d = true;
	  promise = promise._w || promise; // unwrap
	  try {
	    if(promise === value)throw TypeError("Promise can't be resolved itself");
	    if(then = isThenable(value)){
	      microtask(function(){
	        var wrapper = {_w: promise, _d: false}; // wrap
	        try {
	          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
	        } catch(e){
	          $reject.call(wrapper, e);
	        }
	      });
	    } else {
	      promise._v = value;
	      promise._s = 1;
	      notify(promise, false);
	    }
	  } catch(e){
	    $reject.call({_w: promise, _d: false}, e); // wrap
	  }
	};
	
	// constructor polyfill
	if(!USE_NATIVE){
	  // 25.4.3.1 Promise(executor)
	  $Promise = function Promise(executor){
	    anInstance(this, $Promise, PROMISE, '_h');
	    aFunction(executor);
	    Internal.call(this);
	    try {
	      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
	    } catch(err){
	      $reject.call(this, err);
	    }
	  };
	  Internal = function Promise(executor){
	    this._c = [];             // <- awaiting reactions
	    this._a = undefined;      // <- checked in isUnhandled reactions
	    this._s = 0;              // <- state
	    this._d = false;          // <- done
	    this._v = undefined;      // <- value
	    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
	    this._n = false;          // <- notify
	  };
	  Internal.prototype = __webpack_require__(210)($Promise.prototype, {
	    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
	    then: function then(onFulfilled, onRejected){
	      var reaction    = newPromiseCapability(speciesConstructor(this, $Promise));
	      reaction.ok     = typeof onFulfilled == 'function' ? onFulfilled : true;
	      reaction.fail   = typeof onRejected == 'function' && onRejected;
	      reaction.domain = isNode ? process.domain : undefined;
	      this._c.push(reaction);
	      if(this._a)this._a.push(reaction);
	      if(this._s)notify(this, false);
	      return reaction.promise;
	    },
	    // 25.4.5.1 Promise.prototype.catch(onRejected)
	    'catch': function(onRejected){
	      return this.then(undefined, onRejected);
	    }
	  });
	  PromiseCapability = function(){
	    var promise  = new Internal;
	    this.promise = promise;
	    this.resolve = ctx($resolve, promise, 1);
	    this.reject  = ctx($reject, promise, 1);
	  };
	}
	
	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
	__webpack_require__(24)($Promise, PROMISE);
	__webpack_require__(192)(PROMISE);
	Wrapper = __webpack_require__(9)[PROMISE];
	
	// statics
	$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
	  // 25.4.4.5 Promise.reject(r)
	  reject: function reject(r){
	    var capability = newPromiseCapability(this)
	      , $$reject   = capability.reject;
	    $$reject(r);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
	  // 25.4.4.6 Promise.resolve(x)
	  resolve: function resolve(x){
	    // instanceof instead of internal slot check because we should fix it without replacement native Promise core
	    if(x instanceof $Promise && sameConstructor(x.constructor, this))return x;
	    var capability = newPromiseCapability(this)
	      , $$resolve  = capability.resolve;
	    $$resolve(x);
	    return capability.promise;
	  }
	});
	$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(165)(function(iter){
	  $Promise.all(iter)['catch'](empty);
	})), PROMISE, {
	  // 25.4.4.1 Promise.all(iterable)
	  all: function all(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , resolve    = capability.resolve
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      var values    = []
	        , index     = 0
	        , remaining = 1;
	      forOf(iterable, false, function(promise){
	        var $index        = index++
	          , alreadyCalled = false;
	        values.push(undefined);
	        remaining++;
	        C.resolve(promise).then(function(value){
	          if(alreadyCalled)return;
	          alreadyCalled  = true;
	          values[$index] = value;
	          --remaining || resolve(values);
	        }, reject);
	      });
	      --remaining || resolve(values);
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  },
	  // 25.4.4.4 Promise.race(iterable)
	  race: function race(iterable){
	    var C          = this
	      , capability = newPromiseCapability(C)
	      , reject     = capability.reject;
	    var abrupt = perform(function(){
	      forOf(iterable, false, function(promise){
	        C.resolve(promise).then(capability.resolve, reject);
	      });
	    });
	    if(abrupt)reject(abrupt.error);
	    return capability.promise;
	  }
	});

/***/ },
/* 205 */
/***/ function(module, exports) {

	module.exports = function(it, Constructor, name, forbiddenField){
	  if(!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)){
	    throw TypeError(name + ': incorrect invocation!');
	  } return it;
	};

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	var ctx         = __webpack_require__(20)
	  , call        = __webpack_require__(161)
	  , isArrayIter = __webpack_require__(162)
	  , anObject    = __webpack_require__(12)
	  , toLength    = __webpack_require__(37)
	  , getIterFn   = __webpack_require__(164)
	  , BREAK       = {}
	  , RETURN      = {};
	var exports = module.exports = function(iterable, entries, fn, that, ITERATOR){
	  var iterFn = ITERATOR ? function(){ return iterable; } : getIterFn(iterable)
	    , f      = ctx(fn, that, entries ? 2 : 1)
	    , index  = 0
	    , length, step, iterator, result;
	  if(typeof iterFn != 'function')throw TypeError(iterable + ' is not iterable!');
	  // fast case for arrays with default iterator
	  if(isArrayIter(iterFn))for(length = toLength(iterable.length); length > index; index++){
	    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
	    if(result === BREAK || result === RETURN)return result;
	  } else for(iterator = iterFn.call(iterable); !(step = iterator.next()).done; ){
	    result = call(iterator, f, step.value, entries);
	    if(result === BREAK || result === RETURN)return result;
	  }
	};
	exports.BREAK  = BREAK;
	exports.RETURN = RETURN;

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	// 7.3.20 SpeciesConstructor(O, defaultConstructor)
	var anObject  = __webpack_require__(12)
	  , aFunction = __webpack_require__(21)
	  , SPECIES   = __webpack_require__(25)('species');
	module.exports = function(O, D){
	  var C = anObject(O).constructor, S;
	  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
	};

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	var ctx                = __webpack_require__(20)
	  , invoke             = __webpack_require__(78)
	  , html               = __webpack_require__(48)
	  , cel                = __webpack_require__(15)
	  , global             = __webpack_require__(4)
	  , process            = global.process
	  , setTask            = global.setImmediate
	  , clearTask          = global.clearImmediate
	  , MessageChannel     = global.MessageChannel
	  , counter            = 0
	  , queue              = {}
	  , ONREADYSTATECHANGE = 'onreadystatechange'
	  , defer, channel, port;
	var run = function(){
	  var id = +this;
	  if(queue.hasOwnProperty(id)){
	    var fn = queue[id];
	    delete queue[id];
	    fn();
	  }
	};
	var listener = function(event){
	  run.call(event.data);
	};
	// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
	if(!setTask || !clearTask){
	  setTask = function setImmediate(fn){
	    var args = [], i = 1;
	    while(arguments.length > i)args.push(arguments[i++]);
	    queue[++counter] = function(){
	      invoke(typeof fn == 'function' ? fn : Function(fn), args);
	    };
	    defer(counter);
	    return counter;
	  };
	  clearTask = function clearImmediate(id){
	    delete queue[id];
	  };
	  // Node.js 0.8-
	  if(__webpack_require__(34)(process) == 'process'){
	    defer = function(id){
	      process.nextTick(ctx(run, id, 1));
	    };
	  // Browsers with MessageChannel, includes WebWorkers
	  } else if(MessageChannel){
	    channel = new MessageChannel;
	    port    = channel.port2;
	    channel.port1.onmessage = listener;
	    defer = ctx(port.postMessage, port, 1);
	  // Browsers with postMessage, skip WebWorkers
	  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
	  } else if(global.addEventListener && typeof postMessage == 'function' && !global.importScripts){
	    defer = function(id){
	      global.postMessage(id + '', '*');
	    };
	    global.addEventListener('message', listener, false);
	  // IE8-
	  } else if(ONREADYSTATECHANGE in cel('script')){
	    defer = function(id){
	      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function(){
	        html.removeChild(this);
	        run.call(id);
	      };
	    };
	  // Rest old browsers
	  } else {
	    defer = function(id){
	      setTimeout(ctx(run, id, 1), 0);
	    };
	  }
	}
	module.exports = {
	  set:   setTask,
	  clear: clearTask
	};

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(4)
	  , macrotask = __webpack_require__(208).set
	  , Observer  = global.MutationObserver || global.WebKitMutationObserver
	  , process   = global.process
	  , Promise   = global.Promise
	  , isNode    = __webpack_require__(34)(process) == 'process';
	
	module.exports = function(){
	  var head, last, notify;
	
	  var flush = function(){
	    var parent, fn;
	    if(isNode && (parent = process.domain))parent.exit();
	    while(head){
	      fn   = head.fn;
	      head = head.next;
	      try {
	        fn();
	      } catch(e){
	        if(head)notify();
	        else last = undefined;
	        throw e;
	      }
	    } last = undefined;
	    if(parent)parent.enter();
	  };
	
	  // Node.js
	  if(isNode){
	    notify = function(){
	      process.nextTick(flush);
	    };
	  // browsers with MutationObserver
	  } else if(Observer){
	    var toggle = true
	      , node   = document.createTextNode('');
	    new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
	    notify = function(){
	      node.data = toggle = !toggle;
	    };
	  // environments with maybe non-completely correct, but existent Promise
	  } else if(Promise && Promise.resolve){
	    var promise = Promise.resolve();
	    notify = function(){
	      promise.then(flush);
	    };
	  // for other environments - macrotask based on:
	  // - setImmediate
	  // - MessageChannel
	  // - window.postMessag
	  // - onreadystatechange
	  // - setTimeout
	  } else {
	    notify = function(){
	      // strange IE + webpack dev server bug - use .call(global)
	      macrotask.call(global, flush);
	    };
	  }
	
	  return function(fn){
	    var task = {fn: fn, next: undefined};
	    if(last)last.next = task;
	    if(!head){
	      head = task;
	      notify();
	    } last = task;
	  };
	};

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	var redefine = __webpack_require__(18);
	module.exports = function(target, src, safe){
	  for(var key in src)redefine(target, key, src[key], safe);
	  return target;
	};

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(212);
	
	// 23.1 Map Objects
	module.exports = __webpack_require__(213)('Map', function(get){
	  return function Map(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.1.3.6 Map.prototype.get(key)
	  get: function get(key){
	    var entry = strong.getEntry(this, key);
	    return entry && entry.v;
	  },
	  // 23.1.3.9 Map.prototype.set(key, value)
	  set: function set(key, value){
	    return strong.def(this, key === 0 ? 0 : key, value);
	  }
	}, strong, true);

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var dP          = __webpack_require__(11).f
	  , create      = __webpack_require__(46)
	  , redefineAll = __webpack_require__(210)
	  , ctx         = __webpack_require__(20)
	  , anInstance  = __webpack_require__(205)
	  , defined     = __webpack_require__(35)
	  , forOf       = __webpack_require__(206)
	  , $iterDefine = __webpack_require__(128)
	  , step        = __webpack_require__(194)
	  , setSpecies  = __webpack_require__(192)
	  , DESCRIPTORS = __webpack_require__(6)
	  , fastKey     = __webpack_require__(22).fastKey
	  , SIZE        = DESCRIPTORS ? '_s' : 'size';
	
	var getEntry = function(that, key){
	  // fast case
	  var index = fastKey(key), entry;
	  if(index !== 'F')return that._i[index];
	  // frozen object case
	  for(entry = that._f; entry; entry = entry.n){
	    if(entry.k == key)return entry;
	  }
	};
	
	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = create(null); // index
	      that._f = undefined;    // first entry
	      that._l = undefined;    // last entry
	      that[SIZE] = 0;         // size
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.1.3.1 Map.prototype.clear()
	      // 23.2.3.2 Set.prototype.clear()
	      clear: function clear(){
	        for(var that = this, data = that._i, entry = that._f; entry; entry = entry.n){
	          entry.r = true;
	          if(entry.p)entry.p = entry.p.n = undefined;
	          delete data[entry.i];
	        }
	        that._f = that._l = undefined;
	        that[SIZE] = 0;
	      },
	      // 23.1.3.3 Map.prototype.delete(key)
	      // 23.2.3.4 Set.prototype.delete(value)
	      'delete': function(key){
	        var that  = this
	          , entry = getEntry(that, key);
	        if(entry){
	          var next = entry.n
	            , prev = entry.p;
	          delete that._i[entry.i];
	          entry.r = true;
	          if(prev)prev.n = next;
	          if(next)next.p = prev;
	          if(that._f == entry)that._f = next;
	          if(that._l == entry)that._l = prev;
	          that[SIZE]--;
	        } return !!entry;
	      },
	      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
	      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
	      forEach: function forEach(callbackfn /*, that = undefined */){
	        anInstance(this, C, 'forEach');
	        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3)
	          , entry;
	        while(entry = entry ? entry.n : this._f){
	          f(entry.v, entry.k, this);
	          // revert to the last existing entry
	          while(entry && entry.r)entry = entry.p;
	        }
	      },
	      // 23.1.3.7 Map.prototype.has(key)
	      // 23.2.3.7 Set.prototype.has(value)
	      has: function has(key){
	        return !!getEntry(this, key);
	      }
	    });
	    if(DESCRIPTORS)dP(C.prototype, 'size', {
	      get: function(){
	        return defined(this[SIZE]);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var entry = getEntry(that, key)
	      , prev, index;
	    // change existing entry
	    if(entry){
	      entry.v = value;
	    // create new entry
	    } else {
	      that._l = entry = {
	        i: index = fastKey(key, true), // <- index
	        k: key,                        // <- key
	        v: value,                      // <- value
	        p: prev = that._l,             // <- previous entry
	        n: undefined,                  // <- next entry
	        r: false                       // <- removed
	      };
	      if(!that._f)that._f = entry;
	      if(prev)prev.n = entry;
	      that[SIZE]++;
	      // add to index
	      if(index !== 'F')that._i[index] = entry;
	    } return that;
	  },
	  getEntry: getEntry,
	  setStrong: function(C, NAME, IS_MAP){
	    // add .keys, .values, .entries, [@@iterator]
	    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
	    $iterDefine(C, NAME, function(iterated, kind){
	      this._t = iterated;  // target
	      this._k = kind;      // kind
	      this._l = undefined; // previous
	    }, function(){
	      var that  = this
	        , kind  = that._k
	        , entry = that._l;
	      // revert to the last existing entry
	      while(entry && entry.r)entry = entry.p;
	      // get next entry
	      if(!that._t || !(that._l = entry = entry ? entry.n : that._t._f)){
	        // or finish the iteration
	        that._t = undefined;
	        return step(1);
	      }
	      // return step by kind
	      if(kind == 'keys'  )return step(0, entry.k);
	      if(kind == 'values')return step(0, entry.v);
	      return step(0, [entry.k, entry.v]);
	    }, IS_MAP ? 'entries' : 'values' , !IS_MAP, true);
	
	    // add [@@species], 23.1.2.2, 23.2.2.2
	    setSpecies(NAME);
	  }
	};

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global            = __webpack_require__(4)
	  , $export           = __webpack_require__(8)
	  , redefine          = __webpack_require__(18)
	  , redefineAll       = __webpack_require__(210)
	  , meta              = __webpack_require__(22)
	  , forOf             = __webpack_require__(206)
	  , anInstance        = __webpack_require__(205)
	  , isObject          = __webpack_require__(13)
	  , fails             = __webpack_require__(7)
	  , $iterDetect       = __webpack_require__(165)
	  , setToStringTag    = __webpack_require__(24)
	  , inheritIfRequired = __webpack_require__(88);
	
	module.exports = function(NAME, wrapper, methods, common, IS_MAP, IS_WEAK){
	  var Base  = global[NAME]
	    , C     = Base
	    , ADDER = IS_MAP ? 'set' : 'add'
	    , proto = C && C.prototype
	    , O     = {};
	  var fixMethod = function(KEY){
	    var fn = proto[KEY];
	    redefine(proto, KEY,
	      KEY == 'delete' ? function(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'has' ? function has(a){
	        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'get' ? function get(a){
	        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
	      } : KEY == 'add' ? function add(a){ fn.call(this, a === 0 ? 0 : a); return this; }
	        : function set(a, b){ fn.call(this, a === 0 ? 0 : a, b); return this; }
	    );
	  };
	  if(typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function(){
	    new C().entries().next();
	  }))){
	    // create collection constructor
	    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
	    redefineAll(C.prototype, methods);
	    meta.NEED = true;
	  } else {
	    var instance             = new C
	      // early implementations not supports chaining
	      , HASNT_CHAINING       = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance
	      // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
	      , THROWS_ON_PRIMITIVES = fails(function(){ instance.has(1); })
	      // most early implementations doesn't supports iterables, most modern - not close it correctly
	      , ACCEPT_ITERABLES     = $iterDetect(function(iter){ new C(iter); }) // eslint-disable-line no-new
	      // for early implementations -0 and +0 not the same
	      , BUGGY_ZERO = !IS_WEAK && fails(function(){
	        // V8 ~ Chromium 42- fails only with 5+ elements
	        var $instance = new C()
	          , index     = 5;
	        while(index--)$instance[ADDER](index, index);
	        return !$instance.has(-0);
	      });
	    if(!ACCEPT_ITERABLES){ 
	      C = wrapper(function(target, iterable){
	        anInstance(target, C, NAME);
	        var that = inheritIfRequired(new Base, target, C);
	        if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	        return that;
	      });
	      C.prototype = proto;
	      proto.constructor = C;
	    }
	    if(THROWS_ON_PRIMITIVES || BUGGY_ZERO){
	      fixMethod('delete');
	      fixMethod('has');
	      IS_MAP && fixMethod('get');
	    }
	    if(BUGGY_ZERO || HASNT_CHAINING)fixMethod(ADDER);
	    // weak collections should not contains .clear method
	    if(IS_WEAK && proto.clear)delete proto.clear;
	  }
	
	  setToStringTag(C, NAME);
	
	  O[NAME] = C;
	  $export($export.G + $export.W + $export.F * (C != Base), O);
	
	  if(!IS_WEAK)common.setStrong(C, NAME, IS_MAP);
	
	  return C;
	};

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strong = __webpack_require__(212);
	
	// 23.2 Set Objects
	module.exports = __webpack_require__(213)('Set', function(get){
	  return function Set(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.2.3.1 Set.prototype.add(value)
	  add: function add(value){
	    return strong.def(this, value = value === 0 ? 0 : value, value);
	  }
	}, strong);

/***/ },
/* 215 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var each         = __webpack_require__(172)(0)
	  , redefine     = __webpack_require__(18)
	  , meta         = __webpack_require__(22)
	  , assign       = __webpack_require__(69)
	  , weak         = __webpack_require__(216)
	  , isObject     = __webpack_require__(13)
	  , getWeak      = meta.getWeak
	  , isExtensible = Object.isExtensible
	  , uncaughtFrozenStore = weak.ufstore
	  , tmp          = {}
	  , InternalMap;
	
	var wrapper = function(get){
	  return function WeakMap(){
	    return get(this, arguments.length > 0 ? arguments[0] : undefined);
	  };
	};
	
	var methods = {
	  // 23.3.3.3 WeakMap.prototype.get(key)
	  get: function get(key){
	    if(isObject(key)){
	      var data = getWeak(key);
	      if(data === true)return uncaughtFrozenStore(this).get(key);
	      return data ? data[this._i] : undefined;
	    }
	  },
	  // 23.3.3.5 WeakMap.prototype.set(key, value)
	  set: function set(key, value){
	    return weak.def(this, key, value);
	  }
	};
	
	// 23.3 WeakMap Objects
	var $WeakMap = module.exports = __webpack_require__(213)('WeakMap', wrapper, methods, weak, true, true);
	
	// IE11 WeakMap frozen keys fix
	if(new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7){
	  InternalMap = weak.getConstructor(wrapper);
	  assign(InternalMap.prototype, methods);
	  meta.NEED = true;
	  each(['delete', 'has', 'get', 'set'], function(key){
	    var proto  = $WeakMap.prototype
	      , method = proto[key];
	    redefine(proto, key, function(a, b){
	      // store frozen objects on internal weakmap shim
	      if(isObject(a) && !isExtensible(a)){
	        if(!this._f)this._f = new InternalMap;
	        var result = this._f[key](a, b);
	        return key == 'set' ? this : result;
	      // store all the rest on native weakmap
	      } return method.call(this, a, b);
	    });
	  });
	}

/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var redefineAll       = __webpack_require__(210)
	  , getWeak           = __webpack_require__(22).getWeak
	  , anObject          = __webpack_require__(12)
	  , isObject          = __webpack_require__(13)
	  , anInstance        = __webpack_require__(205)
	  , forOf             = __webpack_require__(206)
	  , createArrayMethod = __webpack_require__(172)
	  , $has              = __webpack_require__(5)
	  , arrayFind         = createArrayMethod(5)
	  , arrayFindIndex    = createArrayMethod(6)
	  , id                = 0;
	
	// fallback for uncaught frozen keys
	var uncaughtFrozenStore = function(that){
	  return that._l || (that._l = new UncaughtFrozenStore);
	};
	var UncaughtFrozenStore = function(){
	  this.a = [];
	};
	var findUncaughtFrozen = function(store, key){
	  return arrayFind(store.a, function(it){
	    return it[0] === key;
	  });
	};
	UncaughtFrozenStore.prototype = {
	  get: function(key){
	    var entry = findUncaughtFrozen(this, key);
	    if(entry)return entry[1];
	  },
	  has: function(key){
	    return !!findUncaughtFrozen(this, key);
	  },
	  set: function(key, value){
	    var entry = findUncaughtFrozen(this, key);
	    if(entry)entry[1] = value;
	    else this.a.push([key, value]);
	  },
	  'delete': function(key){
	    var index = arrayFindIndex(this.a, function(it){
	      return it[0] === key;
	    });
	    if(~index)this.a.splice(index, 1);
	    return !!~index;
	  }
	};
	
	module.exports = {
	  getConstructor: function(wrapper, NAME, IS_MAP, ADDER){
	    var C = wrapper(function(that, iterable){
	      anInstance(that, C, NAME, '_i');
	      that._i = id++;      // collection id
	      that._l = undefined; // leak store for uncaught frozen objects
	      if(iterable != undefined)forOf(iterable, IS_MAP, that[ADDER], that);
	    });
	    redefineAll(C.prototype, {
	      // 23.3.3.2 WeakMap.prototype.delete(key)
	      // 23.4.3.3 WeakSet.prototype.delete(value)
	      'delete': function(key){
	        if(!isObject(key))return false;
	        var data = getWeak(key);
	        if(data === true)return uncaughtFrozenStore(this)['delete'](key);
	        return data && $has(data, this._i) && delete data[this._i];
	      },
	      // 23.3.3.4 WeakMap.prototype.has(key)
	      // 23.4.3.4 WeakSet.prototype.has(value)
	      has: function has(key){
	        if(!isObject(key))return false;
	        var data = getWeak(key);
	        if(data === true)return uncaughtFrozenStore(this).has(key);
	        return data && $has(data, this._i);
	      }
	    });
	    return C;
	  },
	  def: function(that, key, value){
	    var data = getWeak(anObject(key), true);
	    if(data === true)uncaughtFrozenStore(that).set(key, value);
	    else data[that._i] = value;
	    return that;
	  },
	  ufstore: uncaughtFrozenStore
	};

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var weak = __webpack_require__(216);
	
	// 23.4 WeakSet Objects
	__webpack_require__(213)('WeakSet', function(get){
	  return function WeakSet(){ return get(this, arguments.length > 0 ? arguments[0] : undefined); };
	}, {
	  // 23.4.3.1 WeakSet.prototype.add(value)
	  add: function add(value){
	    return weak.def(this, value, true);
	  }
	}, weak, false, true);

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export      = __webpack_require__(8)
	  , $typed       = __webpack_require__(219)
	  , buffer       = __webpack_require__(220)
	  , anObject     = __webpack_require__(12)
	  , toIndex      = __webpack_require__(39)
	  , toLength     = __webpack_require__(37)
	  , isObject     = __webpack_require__(13)
	  , ArrayBuffer  = __webpack_require__(4).ArrayBuffer
	  , speciesConstructor = __webpack_require__(207)
	  , $ArrayBuffer = buffer.ArrayBuffer
	  , $DataView    = buffer.DataView
	  , $isView      = $typed.ABV && ArrayBuffer.isView
	  , $slice       = $ArrayBuffer.prototype.slice
	  , VIEW         = $typed.VIEW
	  , ARRAY_BUFFER = 'ArrayBuffer';
	
	$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});
	
	$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
	  // 24.1.3.1 ArrayBuffer.isView(arg)
	  isView: function isView(it){
	    return $isView && $isView(it) || isObject(it) && VIEW in it;
	  }
	});
	
	$export($export.P + $export.U + $export.F * __webpack_require__(7)(function(){
	  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
	}), ARRAY_BUFFER, {
	  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
	  slice: function slice(start, end){
	    if($slice !== undefined && end === undefined)return $slice.call(anObject(this), start); // FF fix
	    var len    = anObject(this).byteLength
	      , first  = toIndex(start, len)
	      , final  = toIndex(end === undefined ? len : end, len)
	      , result = new (speciesConstructor(this, $ArrayBuffer))(toLength(final - first))
	      , viewS  = new $DataView(this)
	      , viewT  = new $DataView(result)
	      , index  = 0;
	    while(first < final){
	      viewT.setUint8(index++, viewS.getUint8(first++));
	    } return result;
	  }
	});
	
	__webpack_require__(192)(ARRAY_BUFFER);

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(4)
	  , hide   = __webpack_require__(10)
	  , uid    = __webpack_require__(19)
	  , TYPED  = uid('typed_array')
	  , VIEW   = uid('view')
	  , ABV    = !!(global.ArrayBuffer && global.DataView)
	  , CONSTR = ABV
	  , i = 0, l = 9, Typed;
	
	var TypedArrayConstructors = (
	  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
	).split(',');
	
	while(i < l){
	  if(Typed = global[TypedArrayConstructors[i++]]){
	    hide(Typed.prototype, TYPED, true);
	    hide(Typed.prototype, VIEW, true);
	  } else CONSTR = false;
	}
	
	module.exports = {
	  ABV:    ABV,
	  CONSTR: CONSTR,
	  TYPED:  TYPED,
	  VIEW:   VIEW
	};

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var global         = __webpack_require__(4)
	  , DESCRIPTORS    = __webpack_require__(6)
	  , LIBRARY        = __webpack_require__(28)
	  , $typed         = __webpack_require__(219)
	  , hide           = __webpack_require__(10)
	  , redefineAll    = __webpack_require__(210)
	  , fails          = __webpack_require__(7)
	  , anInstance     = __webpack_require__(205)
	  , toInteger      = __webpack_require__(38)
	  , toLength       = __webpack_require__(37)
	  , gOPN           = __webpack_require__(50).f
	  , dP             = __webpack_require__(11).f
	  , arrayFill      = __webpack_require__(188)
	  , setToStringTag = __webpack_require__(24)
	  , ARRAY_BUFFER   = 'ArrayBuffer'
	  , DATA_VIEW      = 'DataView'
	  , PROTOTYPE      = 'prototype'
	  , WRONG_LENGTH   = 'Wrong length!'
	  , WRONG_INDEX    = 'Wrong index!'
	  , $ArrayBuffer   = global[ARRAY_BUFFER]
	  , $DataView      = global[DATA_VIEW]
	  , Math           = global.Math
	  , RangeError     = global.RangeError
	  , Infinity       = global.Infinity
	  , BaseBuffer     = $ArrayBuffer
	  , abs            = Math.abs
	  , pow            = Math.pow
	  , floor          = Math.floor
	  , log            = Math.log
	  , LN2            = Math.LN2
	  , BUFFER         = 'buffer'
	  , BYTE_LENGTH    = 'byteLength'
	  , BYTE_OFFSET    = 'byteOffset'
	  , $BUFFER        = DESCRIPTORS ? '_b' : BUFFER
	  , $LENGTH        = DESCRIPTORS ? '_l' : BYTE_LENGTH
	  , $OFFSET        = DESCRIPTORS ? '_o' : BYTE_OFFSET;
	
	// IEEE754 conversions based on https://github.com/feross/ieee754
	var packIEEE754 = function(value, mLen, nBytes){
	  var buffer = Array(nBytes)
	    , eLen   = nBytes * 8 - mLen - 1
	    , eMax   = (1 << eLen) - 1
	    , eBias  = eMax >> 1
	    , rt     = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0
	    , i      = 0
	    , s      = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0
	    , e, m, c;
	  value = abs(value)
	  if(value != value || value === Infinity){
	    m = value != value ? 1 : 0;
	    e = eMax;
	  } else {
	    e = floor(log(value) / LN2);
	    if(value * (c = pow(2, -e)) < 1){
	      e--;
	      c *= 2;
	    }
	    if(e + eBias >= 1){
	      value += rt / c;
	    } else {
	      value += rt * pow(2, 1 - eBias);
	    }
	    if(value * c >= 2){
	      e++;
	      c /= 2;
	    }
	    if(e + eBias >= eMax){
	      m = 0;
	      e = eMax;
	    } else if(e + eBias >= 1){
	      m = (value * c - 1) * pow(2, mLen);
	      e = e + eBias;
	    } else {
	      m = value * pow(2, eBias - 1) * pow(2, mLen);
	      e = 0;
	    }
	  }
	  for(; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
	  e = e << mLen | m;
	  eLen += mLen;
	  for(; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
	  buffer[--i] |= s * 128;
	  return buffer;
	};
	var unpackIEEE754 = function(buffer, mLen, nBytes){
	  var eLen  = nBytes * 8 - mLen - 1
	    , eMax  = (1 << eLen) - 1
	    , eBias = eMax >> 1
	    , nBits = eLen - 7
	    , i     = nBytes - 1
	    , s     = buffer[i--]
	    , e     = s & 127
	    , m;
	  s >>= 7;
	  for(; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
	  m = e & (1 << -nBits) - 1;
	  e >>= -nBits;
	  nBits += mLen;
	  for(; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
	  if(e === 0){
	    e = 1 - eBias;
	  } else if(e === eMax){
	    return m ? NaN : s ? -Infinity : Infinity;
	  } else {
	    m = m + pow(2, mLen);
	    e = e - eBias;
	  } return (s ? -1 : 1) * m * pow(2, e - mLen);
	};
	
	var unpackI32 = function(bytes){
	  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
	};
	var packI8 = function(it){
	  return [it & 0xff];
	};
	var packI16 = function(it){
	  return [it & 0xff, it >> 8 & 0xff];
	};
	var packI32 = function(it){
	  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
	};
	var packF64 = function(it){
	  return packIEEE754(it, 52, 8);
	};
	var packF32 = function(it){
	  return packIEEE754(it, 23, 4);
	};
	
	var addGetter = function(C, key, internal){
	  dP(C[PROTOTYPE], key, {get: function(){ return this[internal]; }});
	};
	
	var get = function(view, bytes, index, isLittleEndian){
	  var numIndex = +index
	    , intIndex = toInteger(numIndex);
	  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b
	    , start = intIndex + view[$OFFSET]
	    , pack  = store.slice(start, start + bytes);
	  return isLittleEndian ? pack : pack.reverse();
	};
	var set = function(view, bytes, index, conversion, value, isLittleEndian){
	  var numIndex = +index
	    , intIndex = toInteger(numIndex);
	  if(numIndex != intIndex || intIndex < 0 || intIndex + bytes > view[$LENGTH])throw RangeError(WRONG_INDEX);
	  var store = view[$BUFFER]._b
	    , start = intIndex + view[$OFFSET]
	    , pack  = conversion(+value);
	  for(var i = 0; i < bytes; i++)store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
	};
	
	var validateArrayBufferArguments = function(that, length){
	  anInstance(that, $ArrayBuffer, ARRAY_BUFFER);
	  var numberLength = +length
	    , byteLength   = toLength(numberLength);
	  if(numberLength != byteLength)throw RangeError(WRONG_LENGTH);
	  return byteLength;
	};
	
	if(!$typed.ABV){
	  $ArrayBuffer = function ArrayBuffer(length){
	    var byteLength = validateArrayBufferArguments(this, length);
	    this._b       = arrayFill.call(Array(byteLength), 0);
	    this[$LENGTH] = byteLength;
	  };
	
	  $DataView = function DataView(buffer, byteOffset, byteLength){
	    anInstance(this, $DataView, DATA_VIEW);
	    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
	    var bufferLength = buffer[$LENGTH]
	      , offset       = toInteger(byteOffset);
	    if(offset < 0 || offset > bufferLength)throw RangeError('Wrong offset!');
	    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
	    if(offset + byteLength > bufferLength)throw RangeError(WRONG_LENGTH);
	    this[$BUFFER] = buffer;
	    this[$OFFSET] = offset;
	    this[$LENGTH] = byteLength;
	  };
	
	  if(DESCRIPTORS){
	    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
	    addGetter($DataView, BUFFER, '_b');
	    addGetter($DataView, BYTE_LENGTH, '_l');
	    addGetter($DataView, BYTE_OFFSET, '_o');
	  }
	
	  redefineAll($DataView[PROTOTYPE], {
	    getInt8: function getInt8(byteOffset){
	      return get(this, 1, byteOffset)[0] << 24 >> 24;
	    },
	    getUint8: function getUint8(byteOffset){
	      return get(this, 1, byteOffset)[0];
	    },
	    getInt16: function getInt16(byteOffset /*, littleEndian */){
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
	    },
	    getUint16: function getUint16(byteOffset /*, littleEndian */){
	      var bytes = get(this, 2, byteOffset, arguments[1]);
	      return bytes[1] << 8 | bytes[0];
	    },
	    getInt32: function getInt32(byteOffset /*, littleEndian */){
	      return unpackI32(get(this, 4, byteOffset, arguments[1]));
	    },
	    getUint32: function getUint32(byteOffset /*, littleEndian */){
	      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
	    },
	    getFloat32: function getFloat32(byteOffset /*, littleEndian */){
	      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
	    },
	    getFloat64: function getFloat64(byteOffset /*, littleEndian */){
	      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
	    },
	    setInt8: function setInt8(byteOffset, value){
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setUint8: function setUint8(byteOffset, value){
	      set(this, 1, byteOffset, packI8, value);
	    },
	    setInt16: function setInt16(byteOffset, value /*, littleEndian */){
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setUint16: function setUint16(byteOffset, value /*, littleEndian */){
	      set(this, 2, byteOffset, packI16, value, arguments[2]);
	    },
	    setInt32: function setInt32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setUint32: function setUint32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packI32, value, arguments[2]);
	    },
	    setFloat32: function setFloat32(byteOffset, value /*, littleEndian */){
	      set(this, 4, byteOffset, packF32, value, arguments[2]);
	    },
	    setFloat64: function setFloat64(byteOffset, value /*, littleEndian */){
	      set(this, 8, byteOffset, packF64, value, arguments[2]);
	    }
	  });
	} else {
	  if(!fails(function(){
	    new $ArrayBuffer;     // eslint-disable-line no-new
	  }) || !fails(function(){
	    new $ArrayBuffer(.5); // eslint-disable-line no-new
	  })){
	    $ArrayBuffer = function ArrayBuffer(length){
	      return new BaseBuffer(validateArrayBufferArguments(this, length));
	    };
	    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
	    for(var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j; ){
	      if(!((key = keys[j++]) in $ArrayBuffer))hide($ArrayBuffer, key, BaseBuffer[key]);
	    };
	    if(!LIBRARY)ArrayBufferProto.constructor = $ArrayBuffer;
	  }
	  // iOS Safari 7.x bug
	  var view = new $DataView(new $ArrayBuffer(2))
	    , $setInt8 = $DataView[PROTOTYPE].setInt8;
	  view.setInt8(0, 2147483648);
	  view.setInt8(1, 2147483649);
	  if(view.getInt8(0) || !view.getInt8(1))redefineAll($DataView[PROTOTYPE], {
	    setInt8: function setInt8(byteOffset, value){
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    },
	    setUint8: function setUint8(byteOffset, value){
	      $setInt8.call(this, byteOffset, value << 24 >> 24);
	    }
	  }, true);
	}
	setToStringTag($ArrayBuffer, ARRAY_BUFFER);
	setToStringTag($DataView, DATA_VIEW);
	hide($DataView[PROTOTYPE], $typed.VIEW, true);
	exports[ARRAY_BUFFER] = $ArrayBuffer;
	exports[DATA_VIEW] = $DataView;

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8);
	$export($export.G + $export.W + $export.F * !__webpack_require__(219).ABV, {
	  DataView: __webpack_require__(220).DataView
	});

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Int8', 1, function(init){
	  return function Int8Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	if(__webpack_require__(6)){
	  var LIBRARY             = __webpack_require__(28)
	    , global              = __webpack_require__(4)
	    , fails               = __webpack_require__(7)
	    , $export             = __webpack_require__(8)
	    , $typed              = __webpack_require__(219)
	    , $buffer             = __webpack_require__(220)
	    , ctx                 = __webpack_require__(20)
	    , anInstance          = __webpack_require__(205)
	    , propertyDesc        = __webpack_require__(17)
	    , hide                = __webpack_require__(10)
	    , redefineAll         = __webpack_require__(210)
	    , toInteger           = __webpack_require__(38)
	    , toLength            = __webpack_require__(37)
	    , toIndex             = __webpack_require__(39)
	    , toPrimitive         = __webpack_require__(16)
	    , has                 = __webpack_require__(5)
	    , same                = __webpack_require__(71)
	    , classof             = __webpack_require__(75)
	    , isObject            = __webpack_require__(13)
	    , toObject            = __webpack_require__(58)
	    , isArrayIter         = __webpack_require__(162)
	    , create              = __webpack_require__(46)
	    , getPrototypeOf      = __webpack_require__(59)
	    , gOPN                = __webpack_require__(50).f
	    , getIterFn           = __webpack_require__(164)
	    , uid                 = __webpack_require__(19)
	    , wks                 = __webpack_require__(25)
	    , createArrayMethod   = __webpack_require__(172)
	    , createArrayIncludes = __webpack_require__(36)
	    , speciesConstructor  = __webpack_require__(207)
	    , ArrayIterators      = __webpack_require__(193)
	    , Iterators           = __webpack_require__(129)
	    , $iterDetect         = __webpack_require__(165)
	    , setSpecies          = __webpack_require__(192)
	    , arrayFill           = __webpack_require__(188)
	    , arrayCopyWithin     = __webpack_require__(185)
	    , $DP                 = __webpack_require__(11)
	    , $GOPD               = __webpack_require__(51)
	    , dP                  = $DP.f
	    , gOPD                = $GOPD.f
	    , RangeError          = global.RangeError
	    , TypeError           = global.TypeError
	    , Uint8Array          = global.Uint8Array
	    , ARRAY_BUFFER        = 'ArrayBuffer'
	    , SHARED_BUFFER       = 'Shared' + ARRAY_BUFFER
	    , BYTES_PER_ELEMENT   = 'BYTES_PER_ELEMENT'
	    , PROTOTYPE           = 'prototype'
	    , ArrayProto          = Array[PROTOTYPE]
	    , $ArrayBuffer        = $buffer.ArrayBuffer
	    , $DataView           = $buffer.DataView
	    , arrayForEach        = createArrayMethod(0)
	    , arrayFilter         = createArrayMethod(2)
	    , arraySome           = createArrayMethod(3)
	    , arrayEvery          = createArrayMethod(4)
	    , arrayFind           = createArrayMethod(5)
	    , arrayFindIndex      = createArrayMethod(6)
	    , arrayIncludes       = createArrayIncludes(true)
	    , arrayIndexOf        = createArrayIncludes(false)
	    , arrayValues         = ArrayIterators.values
	    , arrayKeys           = ArrayIterators.keys
	    , arrayEntries        = ArrayIterators.entries
	    , arrayLastIndexOf    = ArrayProto.lastIndexOf
	    , arrayReduce         = ArrayProto.reduce
	    , arrayReduceRight    = ArrayProto.reduceRight
	    , arrayJoin           = ArrayProto.join
	    , arraySort           = ArrayProto.sort
	    , arraySlice          = ArrayProto.slice
	    , arrayToString       = ArrayProto.toString
	    , arrayToLocaleString = ArrayProto.toLocaleString
	    , ITERATOR            = wks('iterator')
	    , TAG                 = wks('toStringTag')
	    , TYPED_CONSTRUCTOR   = uid('typed_constructor')
	    , DEF_CONSTRUCTOR     = uid('def_constructor')
	    , ALL_CONSTRUCTORS    = $typed.CONSTR
	    , TYPED_ARRAY         = $typed.TYPED
	    , VIEW                = $typed.VIEW
	    , WRONG_LENGTH        = 'Wrong length!';
	
	  var $map = createArrayMethod(1, function(O, length){
	    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
	  });
	
	  var LITTLE_ENDIAN = fails(function(){
	    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
	  });
	
	  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function(){
	    new Uint8Array(1).set({});
	  });
	
	  var strictToLength = function(it, SAME){
	    if(it === undefined)throw TypeError(WRONG_LENGTH);
	    var number = +it
	      , length = toLength(it);
	    if(SAME && !same(number, length))throw RangeError(WRONG_LENGTH);
	    return length;
	  };
	
	  var toOffset = function(it, BYTES){
	    var offset = toInteger(it);
	    if(offset < 0 || offset % BYTES)throw RangeError('Wrong offset!');
	    return offset;
	  };
	
	  var validate = function(it){
	    if(isObject(it) && TYPED_ARRAY in it)return it;
	    throw TypeError(it + ' is not a typed array!');
	  };
	
	  var allocate = function(C, length){
	    if(!(isObject(C) && TYPED_CONSTRUCTOR in C)){
	      throw TypeError('It is not a typed array constructor!');
	    } return new C(length);
	  };
	
	  var speciesFromList = function(O, list){
	    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
	  };
	
	  var fromList = function(C, list){
	    var index  = 0
	      , length = list.length
	      , result = allocate(C, length);
	    while(length > index)result[index] = list[index++];
	    return result;
	  };
	
	  var addGetter = function(it, key, internal){
	    dP(it, key, {get: function(){ return this._d[internal]; }});
	  };
	
	  var $from = function from(source /*, mapfn, thisArg */){
	    var O       = toObject(source)
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , iterFn  = getIterFn(O)
	      , i, length, values, result, step, iterator;
	    if(iterFn != undefined && !isArrayIter(iterFn)){
	      for(iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++){
	        values.push(step.value);
	      } O = values;
	    }
	    if(mapping && aLen > 2)mapfn = ctx(mapfn, arguments[2], 2);
	    for(i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++){
	      result[i] = mapping ? mapfn(O[i], i) : O[i];
	    }
	    return result;
	  };
	
	  var $of = function of(/*...items*/){
	    var index  = 0
	      , length = arguments.length
	      , result = allocate(this, length);
	    while(length > index)result[index] = arguments[index++];
	    return result;
	  };
	
	  // iOS Safari 6.x fails here
	  var TO_LOCALE_BUG = !!Uint8Array && fails(function(){ arrayToLocaleString.call(new Uint8Array(1)); });
	
	  var $toLocaleString = function toLocaleString(){
	    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
	  };
	
	  var proto = {
	    copyWithin: function copyWithin(target, start /*, end */){
	      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
	    },
	    every: function every(callbackfn /*, thisArg */){
	      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    fill: function fill(value /*, start, end */){ // eslint-disable-line no-unused-vars
	      return arrayFill.apply(validate(this), arguments);
	    },
	    filter: function filter(callbackfn /*, thisArg */){
	      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
	        arguments.length > 1 ? arguments[1] : undefined));
	    },
	    find: function find(predicate /*, thisArg */){
	      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    findIndex: function findIndex(predicate /*, thisArg */){
	      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    forEach: function forEach(callbackfn /*, thisArg */){
	      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    indexOf: function indexOf(searchElement /*, fromIndex */){
	      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    includes: function includes(searchElement /*, fromIndex */){
	      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    join: function join(separator){ // eslint-disable-line no-unused-vars
	      return arrayJoin.apply(validate(this), arguments);
	    },
	    lastIndexOf: function lastIndexOf(searchElement /*, fromIndex */){ // eslint-disable-line no-unused-vars
	      return arrayLastIndexOf.apply(validate(this), arguments);
	    },
	    map: function map(mapfn /*, thisArg */){
	      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    reduce: function reduce(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduce.apply(validate(this), arguments);
	    },
	    reduceRight: function reduceRight(callbackfn /*, initialValue */){ // eslint-disable-line no-unused-vars
	      return arrayReduceRight.apply(validate(this), arguments);
	    },
	    reverse: function reverse(){
	      var that   = this
	        , length = validate(that).length
	        , middle = Math.floor(length / 2)
	        , index  = 0
	        , value;
	      while(index < middle){
	        value         = that[index];
	        that[index++] = that[--length];
	        that[length]  = value;
	      } return that;
	    },
	    some: function some(callbackfn /*, thisArg */){
	      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
	    },
	    sort: function sort(comparefn){
	      return arraySort.call(validate(this), comparefn);
	    },
	    subarray: function subarray(begin, end){
	      var O      = validate(this)
	        , length = O.length
	        , $begin = toIndex(begin, length);
	      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
	        O.buffer,
	        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
	        toLength((end === undefined ? length : toIndex(end, length)) - $begin)
	      );
	    }
	  };
	
	  var $slice = function slice(start, end){
	    return speciesFromList(this, arraySlice.call(validate(this), start, end));
	  };
	
	  var $set = function set(arrayLike /*, offset */){
	    validate(this);
	    var offset = toOffset(arguments[1], 1)
	      , length = this.length
	      , src    = toObject(arrayLike)
	      , len    = toLength(src.length)
	      , index  = 0;
	    if(len + offset > length)throw RangeError(WRONG_LENGTH);
	    while(index < len)this[offset + index] = src[index++];
	  };
	
	  var $iterators = {
	    entries: function entries(){
	      return arrayEntries.call(validate(this));
	    },
	    keys: function keys(){
	      return arrayKeys.call(validate(this));
	    },
	    values: function values(){
	      return arrayValues.call(validate(this));
	    }
	  };
	
	  var isTAIndex = function(target, key){
	    return isObject(target)
	      && target[TYPED_ARRAY]
	      && typeof key != 'symbol'
	      && key in target
	      && String(+key) == String(key);
	  };
	  var $getDesc = function getOwnPropertyDescriptor(target, key){
	    return isTAIndex(target, key = toPrimitive(key, true))
	      ? propertyDesc(2, target[key])
	      : gOPD(target, key);
	  };
	  var $setDesc = function defineProperty(target, key, desc){
	    if(isTAIndex(target, key = toPrimitive(key, true))
	      && isObject(desc)
	      && has(desc, 'value')
	      && !has(desc, 'get')
	      && !has(desc, 'set')
	      // TODO: add validation descriptor w/o calling accessors
	      && !desc.configurable
	      && (!has(desc, 'writable') || desc.writable)
	      && (!has(desc, 'enumerable') || desc.enumerable)
	    ){
	      target[key] = desc.value;
	      return target;
	    } else return dP(target, key, desc);
	  };
	
	  if(!ALL_CONSTRUCTORS){
	    $GOPD.f = $getDesc;
	    $DP.f   = $setDesc;
	  }
	
	  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
	    getOwnPropertyDescriptor: $getDesc,
	    defineProperty:           $setDesc
	  });
	
	  if(fails(function(){ arrayToString.call({}); })){
	    arrayToString = arrayToLocaleString = function toString(){
	      return arrayJoin.call(this);
	    }
	  }
	
	  var $TypedArrayPrototype$ = redefineAll({}, proto);
	  redefineAll($TypedArrayPrototype$, $iterators);
	  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
	  redefineAll($TypedArrayPrototype$, {
	    slice:          $slice,
	    set:            $set,
	    constructor:    function(){ /* noop */ },
	    toString:       arrayToString,
	    toLocaleString: $toLocaleString
	  });
	  addGetter($TypedArrayPrototype$, 'buffer', 'b');
	  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
	  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
	  addGetter($TypedArrayPrototype$, 'length', 'e');
	  dP($TypedArrayPrototype$, TAG, {
	    get: function(){ return this[TYPED_ARRAY]; }
	  });
	
	  module.exports = function(KEY, BYTES, wrapper, CLAMPED){
	    CLAMPED = !!CLAMPED;
	    var NAME       = KEY + (CLAMPED ? 'Clamped' : '') + 'Array'
	      , ISNT_UINT8 = NAME != 'Uint8Array'
	      , GETTER     = 'get' + KEY
	      , SETTER     = 'set' + KEY
	      , TypedArray = global[NAME]
	      , Base       = TypedArray || {}
	      , TAC        = TypedArray && getPrototypeOf(TypedArray)
	      , FORCED     = !TypedArray || !$typed.ABV
	      , O          = {}
	      , TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
	    var getter = function(that, index){
	      var data = that._d;
	      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
	    };
	    var setter = function(that, index, value){
	      var data = that._d;
	      if(CLAMPED)value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
	      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
	    };
	    var addElement = function(that, index){
	      dP(that, index, {
	        get: function(){
	          return getter(this, index);
	        },
	        set: function(value){
	          return setter(this, index, value);
	        },
	        enumerable: true
	      });
	    };
	    if(FORCED){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME, '_d');
	        var index  = 0
	          , offset = 0
	          , buffer, byteLength, length, klass;
	        if(!isObject(data)){
	          length     = strictToLength(data, true)
	          byteLength = length * BYTES;
	          buffer     = new $ArrayBuffer(byteLength);
	        } else if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          buffer = data;
	          offset = toOffset($offset, BYTES);
	          var $len = data.byteLength;
	          if($length === undefined){
	            if($len % BYTES)throw RangeError(WRONG_LENGTH);
	            byteLength = $len - offset;
	            if(byteLength < 0)throw RangeError(WRONG_LENGTH);
	          } else {
	            byteLength = toLength($length) * BYTES;
	            if(byteLength + offset > $len)throw RangeError(WRONG_LENGTH);
	          }
	          length = byteLength / BYTES;
	        } else if(TYPED_ARRAY in data){
	          return fromList(TypedArray, data);
	        } else {
	          return $from.call(TypedArray, data);
	        }
	        hide(that, '_d', {
	          b: buffer,
	          o: offset,
	          l: byteLength,
	          e: length,
	          v: new $DataView(buffer)
	        });
	        while(index < length)addElement(that, index++);
	      });
	      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
	      hide(TypedArrayPrototype, 'constructor', TypedArray);
	    } else if(!$iterDetect(function(iter){
	      // V8 works with iterators, but fails in many other cases
	      // https://code.google.com/p/v8/issues/detail?id=4552
	      new TypedArray(null); // eslint-disable-line no-new
	      new TypedArray(iter); // eslint-disable-line no-new
	    }, true)){
	      TypedArray = wrapper(function(that, data, $offset, $length){
	        anInstance(that, TypedArray, NAME);
	        var klass;
	        // `ws` module bug, temporarily remove validation length for Uint8Array
	        // https://github.com/websockets/ws/pull/645
	        if(!isObject(data))return new Base(strictToLength(data, ISNT_UINT8));
	        if(data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER){
	          return $length !== undefined
	            ? new Base(data, toOffset($offset, BYTES), $length)
	            : $offset !== undefined
	              ? new Base(data, toOffset($offset, BYTES))
	              : new Base(data);
	        }
	        if(TYPED_ARRAY in data)return fromList(TypedArray, data);
	        return $from.call(TypedArray, data);
	      });
	      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function(key){
	        if(!(key in TypedArray))hide(TypedArray, key, Base[key]);
	      });
	      TypedArray[PROTOTYPE] = TypedArrayPrototype;
	      if(!LIBRARY)TypedArrayPrototype.constructor = TypedArray;
	    }
	    var $nativeIterator   = TypedArrayPrototype[ITERATOR]
	      , CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined)
	      , $iterator         = $iterators.values;
	    hide(TypedArray, TYPED_CONSTRUCTOR, true);
	    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
	    hide(TypedArrayPrototype, VIEW, true);
	    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);
	
	    if(CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)){
	      dP(TypedArrayPrototype, TAG, {
	        get: function(){ return NAME; }
	      });
	    }
	
	    O[NAME] = TypedArray;
	
	    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);
	
	    $export($export.S, NAME, {
	      BYTES_PER_ELEMENT: BYTES,
	      from: $from,
	      of: $of
	    });
	
	    if(!(BYTES_PER_ELEMENT in TypedArrayPrototype))hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);
	
	    $export($export.P, NAME, proto);
	
	    setSpecies(NAME);
	
	    $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});
	
	    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);
	
	    $export($export.P + $export.F * (TypedArrayPrototype.toString != arrayToString), NAME, {toString: arrayToString});
	
	    $export($export.P + $export.F * fails(function(){
	      new TypedArray(1).slice();
	    }), NAME, {slice: $slice});
	
	    $export($export.P + $export.F * (fails(function(){
	      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString()
	    }) || !fails(function(){
	      TypedArrayPrototype.toLocaleString.call([1, 2]);
	    })), NAME, {toLocaleString: $toLocaleString});
	
	    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
	    if(!LIBRARY && !CORRECT_ITER_NAME)hide(TypedArrayPrototype, ITERATOR, $iterator);
	  };
	} else module.exports = function(){ /* empty */ };

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Uint8', 1, function(init){
	  return function Uint8Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Uint8', 1, function(init){
	  return function Uint8ClampedArray(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	}, true);

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Int16', 2, function(init){
	  return function Int16Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Uint16', 2, function(init){
	  return function Uint16Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Int32', 4, function(init){
	  return function Int32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Uint32', 4, function(init){
	  return function Uint32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Float32', 4, function(init){
	  return function Float32Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(223)('Float64', 8, function(init){
	  return function Float64Array(data, byteOffset, length){
	    return init(this, data, byteOffset, length);
	  };
	});

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
	var $export   = __webpack_require__(8)
	  , aFunction = __webpack_require__(21)
	  , anObject  = __webpack_require__(12)
	  , rApply    = (__webpack_require__(4).Reflect || {}).apply
	  , fApply    = Function.apply;
	// MS Edge argumentsList argument is optional
	$export($export.S + $export.F * !__webpack_require__(7)(function(){
	  rApply(function(){});
	}), 'Reflect', {
	  apply: function apply(target, thisArgument, argumentsList){
	    var T = aFunction(target)
	      , L = anObject(argumentsList);
	    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
	  }
	});

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
	var $export    = __webpack_require__(8)
	  , create     = __webpack_require__(46)
	  , aFunction  = __webpack_require__(21)
	  , anObject   = __webpack_require__(12)
	  , isObject   = __webpack_require__(13)
	  , fails      = __webpack_require__(7)
	  , bind       = __webpack_require__(77)
	  , rConstruct = (__webpack_require__(4).Reflect || {}).construct;
	
	// MS Edge supports only 2 arguments and argumentsList argument is optional
	// FF Nightly sets third argument as `new.target`, but does not create `this` from it
	var NEW_TARGET_BUG = fails(function(){
	  function F(){}
	  return !(rConstruct(function(){}, [], F) instanceof F);
	});
	var ARGS_BUG = !fails(function(){
	  rConstruct(function(){});
	});
	
	$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
	  construct: function construct(Target, args /*, newTarget*/){
	    aFunction(Target);
	    anObject(args);
	    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
	    if(ARGS_BUG && !NEW_TARGET_BUG)return rConstruct(Target, args, newTarget);
	    if(Target == newTarget){
	      // w/o altered newTarget, optimization for 0-4 arguments
	      switch(args.length){
	        case 0: return new Target;
	        case 1: return new Target(args[0]);
	        case 2: return new Target(args[0], args[1]);
	        case 3: return new Target(args[0], args[1], args[2]);
	        case 4: return new Target(args[0], args[1], args[2], args[3]);
	      }
	      // w/o altered newTarget, lot of arguments case
	      var $args = [null];
	      $args.push.apply($args, args);
	      return new (bind.apply(Target, $args));
	    }
	    // with altered newTarget, not support built-in constructors
	    var proto    = newTarget.prototype
	      , instance = create(isObject(proto) ? proto : Object.prototype)
	      , result   = Function.apply.call(Target, instance, args);
	    return isObject(result) ? result : instance;
	  }
	});

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
	var dP          = __webpack_require__(11)
	  , $export     = __webpack_require__(8)
	  , anObject    = __webpack_require__(12)
	  , toPrimitive = __webpack_require__(16);
	
	// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
	$export($export.S + $export.F * __webpack_require__(7)(function(){
	  Reflect.defineProperty(dP.f({}, 1, {value: 1}), 1, {value: 2});
	}), 'Reflect', {
	  defineProperty: function defineProperty(target, propertyKey, attributes){
	    anObject(target);
	    propertyKey = toPrimitive(propertyKey, true);
	    anObject(attributes);
	    try {
	      dP.f(target, propertyKey, attributes);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.4 Reflect.deleteProperty(target, propertyKey)
	var $export  = __webpack_require__(8)
	  , gOPD     = __webpack_require__(51).f
	  , anObject = __webpack_require__(12);
	
	$export($export.S, 'Reflect', {
	  deleteProperty: function deleteProperty(target, propertyKey){
	    var desc = gOPD(anObject(target), propertyKey);
	    return desc && !desc.configurable ? false : delete target[propertyKey];
	  }
	});

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 26.1.5 Reflect.enumerate(target)
	var $export  = __webpack_require__(8)
	  , anObject = __webpack_require__(12);
	var Enumerate = function(iterated){
	  this._t = anObject(iterated); // target
	  this._i = 0;                  // next index
	  var keys = this._k = []       // keys
	    , key;
	  for(key in iterated)keys.push(key);
	};
	__webpack_require__(130)(Enumerate, 'Object', function(){
	  var that = this
	    , keys = that._k
	    , key;
	  do {
	    if(that._i >= keys.length)return {value: undefined, done: true};
	  } while(!((key = keys[that._i++]) in that._t));
	  return {value: key, done: false};
	});
	
	$export($export.S, 'Reflect', {
	  enumerate: function enumerate(target){
	    return new Enumerate(target);
	  }
	});

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.6 Reflect.get(target, propertyKey [, receiver])
	var gOPD           = __webpack_require__(51)
	  , getPrototypeOf = __webpack_require__(59)
	  , has            = __webpack_require__(5)
	  , $export        = __webpack_require__(8)
	  , isObject       = __webpack_require__(13)
	  , anObject       = __webpack_require__(12);
	
	function get(target, propertyKey/*, receiver*/){
	  var receiver = arguments.length < 3 ? target : arguments[2]
	    , desc, proto;
	  if(anObject(target) === receiver)return target[propertyKey];
	  if(desc = gOPD.f(target, propertyKey))return has(desc, 'value')
	    ? desc.value
	    : desc.get !== undefined
	      ? desc.get.call(receiver)
	      : undefined;
	  if(isObject(proto = getPrototypeOf(target)))return get(proto, propertyKey, receiver);
	}
	
	$export($export.S, 'Reflect', {get: get});

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
	var gOPD     = __webpack_require__(51)
	  , $export  = __webpack_require__(8)
	  , anObject = __webpack_require__(12);
	
	$export($export.S, 'Reflect', {
	  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey){
	    return gOPD.f(anObject(target), propertyKey);
	  }
	});

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.8 Reflect.getPrototypeOf(target)
	var $export  = __webpack_require__(8)
	  , getProto = __webpack_require__(59)
	  , anObject = __webpack_require__(12);
	
	$export($export.S, 'Reflect', {
	  getPrototypeOf: function getPrototypeOf(target){
	    return getProto(anObject(target));
	  }
	});

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.9 Reflect.has(target, propertyKey)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Reflect', {
	  has: function has(target, propertyKey){
	    return propertyKey in target;
	  }
	});

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.10 Reflect.isExtensible(target)
	var $export       = __webpack_require__(8)
	  , anObject      = __webpack_require__(12)
	  , $isExtensible = Object.isExtensible;
	
	$export($export.S, 'Reflect', {
	  isExtensible: function isExtensible(target){
	    anObject(target);
	    return $isExtensible ? $isExtensible(target) : true;
	  }
	});

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.11 Reflect.ownKeys(target)
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Reflect', {ownKeys: __webpack_require__(243)});

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	// all object keys, includes non-enumerable and symbols
	var gOPN     = __webpack_require__(50)
	  , gOPS     = __webpack_require__(43)
	  , anObject = __webpack_require__(12)
	  , Reflect  = __webpack_require__(4).Reflect;
	module.exports = Reflect && Reflect.ownKeys || function ownKeys(it){
	  var keys       = gOPN.f(anObject(it))
	    , getSymbols = gOPS.f;
	  return getSymbols ? keys.concat(getSymbols(it)) : keys;
	};

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.12 Reflect.preventExtensions(target)
	var $export            = __webpack_require__(8)
	  , anObject           = __webpack_require__(12)
	  , $preventExtensions = Object.preventExtensions;
	
	$export($export.S, 'Reflect', {
	  preventExtensions: function preventExtensions(target){
	    anObject(target);
	    try {
	      if($preventExtensions)$preventExtensions(target);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
	var dP             = __webpack_require__(11)
	  , gOPD           = __webpack_require__(51)
	  , getPrototypeOf = __webpack_require__(59)
	  , has            = __webpack_require__(5)
	  , $export        = __webpack_require__(8)
	  , createDesc     = __webpack_require__(17)
	  , anObject       = __webpack_require__(12)
	  , isObject       = __webpack_require__(13);
	
	function set(target, propertyKey, V/*, receiver*/){
	  var receiver = arguments.length < 4 ? target : arguments[3]
	    , ownDesc  = gOPD.f(anObject(target), propertyKey)
	    , existingDescriptor, proto;
	  if(!ownDesc){
	    if(isObject(proto = getPrototypeOf(target))){
	      return set(proto, propertyKey, V, receiver);
	    }
	    ownDesc = createDesc(0);
	  }
	  if(has(ownDesc, 'value')){
	    if(ownDesc.writable === false || !isObject(receiver))return false;
	    existingDescriptor = gOPD.f(receiver, propertyKey) || createDesc(0);
	    existingDescriptor.value = V;
	    dP.f(receiver, propertyKey, existingDescriptor);
	    return true;
	  }
	  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
	}
	
	$export($export.S, 'Reflect', {set: set});

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	// 26.1.14 Reflect.setPrototypeOf(target, proto)
	var $export  = __webpack_require__(8)
	  , setProto = __webpack_require__(73);
	
	if(setProto)$export($export.S, 'Reflect', {
	  setPrototypeOf: function setPrototypeOf(target, proto){
	    setProto.check(target, proto);
	    try {
	      setProto.set(target, proto);
	      return true;
	    } catch(e){
	      return false;
	    }
	  }
	});

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/Array.prototype.includes
	var $export   = __webpack_require__(8)
	  , $includes = __webpack_require__(36)(true);
	
	$export($export.P, 'Array', {
	  includes: function includes(el /*, fromIndex = 0 */){
	    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
	  }
	});
	
	__webpack_require__(186)('includes');

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/mathiasbynens/String.prototype.at
	var $export = __webpack_require__(8)
	  , $at     = __webpack_require__(127)(true);
	
	$export($export.P, 'String', {
	  at: function at(pos){
	    return $at(this, pos);
	  }
	});

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end
	var $export = __webpack_require__(8)
	  , $pad    = __webpack_require__(250);
	
	$export($export.P, 'String', {
	  padStart: function padStart(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
	  }
	});

/***/ },
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-string-pad-start-end
	var toLength = __webpack_require__(37)
	  , repeat   = __webpack_require__(91)
	  , defined  = __webpack_require__(35);
	
	module.exports = function(that, maxLength, fillString, left){
	  var S            = String(defined(that))
	    , stringLength = S.length
	    , fillStr      = fillString === undefined ? ' ' : String(fillString)
	    , intMaxLength = toLength(maxLength);
	  if(intMaxLength <= stringLength || fillStr == '')return S;
	  var fillLen = intMaxLength - stringLength
	    , stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
	  if(stringFiller.length > fillLen)stringFiller = stringFiller.slice(0, fillLen);
	  return left ? stringFiller + S : S + stringFiller;
	};


/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/tc39/proposal-string-pad-start-end
	var $export = __webpack_require__(8)
	  , $pad    = __webpack_require__(250);
	
	$export($export.P, 'String', {
	  padEnd: function padEnd(maxLength /*, fillString = ' ' */){
	    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
	  }
	});

/***/ },
/* 252 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(83)('trimLeft', function($trim){
	  return function trimLeft(){
	    return $trim(this, 1);
	  };
	}, 'trimStart');

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
	__webpack_require__(83)('trimRight', function($trim){
	  return function trimRight(){
	    return $trim(this, 2);
	  };
	}, 'trimEnd');

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://tc39.github.io/String.prototype.matchAll/
	var $export     = __webpack_require__(8)
	  , defined     = __webpack_require__(35)
	  , toLength    = __webpack_require__(37)
	  , isRegExp    = __webpack_require__(134)
	  , getFlags    = __webpack_require__(196)
	  , RegExpProto = RegExp.prototype;
	
	var $RegExpStringIterator = function(regexp, string){
	  this._r = regexp;
	  this._s = string;
	};
	
	__webpack_require__(130)($RegExpStringIterator, 'RegExp String', function next(){
	  var match = this._r.exec(this._s);
	  return {value: match, done: match === null};
	});
	
	$export($export.P, 'String', {
	  matchAll: function matchAll(regexp){
	    defined(this);
	    if(!isRegExp(regexp))throw TypeError(regexp + ' is not a regexp!');
	    var S     = String(this)
	      , flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp)
	      , rx    = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);
	    rx.lastIndex = toLength(regexp.lastIndex);
	    return new $RegExpStringIterator(rx, S);
	  }
	});

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(27)('asyncIterator');

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(27)('observable');

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-getownpropertydescriptors
	var $export        = __webpack_require__(8)
	  , ownKeys        = __webpack_require__(243)
	  , toIObject      = __webpack_require__(32)
	  , gOPD           = __webpack_require__(51)
	  , createProperty = __webpack_require__(163);
	
	$export($export.S, 'Object', {
	  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object){
	    var O       = toIObject(object)
	      , getDesc = gOPD.f
	      , keys    = ownKeys(O)
	      , result  = {}
	      , i       = 0
	      , key;
	    while(keys.length > i)createProperty(result, key = keys[i++], getDesc(O, key));
	    return result;
	  }
	});

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export = __webpack_require__(8)
	  , $values = __webpack_require__(259)(false);
	
	$export($export.S, 'Object', {
	  values: function values(it){
	    return $values(it);
	  }
	});

/***/ },
/* 259 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(30)
	  , toIObject = __webpack_require__(32)
	  , isEnum    = __webpack_require__(44).f;
	module.exports = function(isEntries){
	  return function(it){
	    var O      = toIObject(it)
	      , keys   = getKeys(O)
	      , length = keys.length
	      , i      = 0
	      , result = []
	      , key;
	    while(length > i)if(isEnum.call(O, key = keys[i++])){
	      result.push(isEntries ? [key, O[key]] : O[key]);
	    } return result;
	  };
	};

/***/ },
/* 260 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export  = __webpack_require__(8)
	  , $entries = __webpack_require__(259)(true);
	
	$export($export.S, 'Object', {
	  entries: function entries(it){
	    return $entries(it);
	  }
	});

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export         = __webpack_require__(8)
	  , toObject        = __webpack_require__(58)
	  , aFunction       = __webpack_require__(21)
	  , $defineProperty = __webpack_require__(11);
	
	// B.2.2.2 Object.prototype.__defineGetter__(P, getter)
	__webpack_require__(6) && $export($export.P + __webpack_require__(262), 'Object', {
	  __defineGetter__: function __defineGetter__(P, getter){
	    $defineProperty.f(toObject(this), P, {get: aFunction(getter), enumerable: true, configurable: true});
	  }
	});

/***/ },
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	// Forced replacement prototype accessors methods
	module.exports = __webpack_require__(28)|| !__webpack_require__(7)(function(){
	  var K = Math.random();
	  // In FF throws only define methods
	  __defineSetter__.call(null, K, function(){ /* empty */});
	  delete __webpack_require__(4)[K];
	});

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export         = __webpack_require__(8)
	  , toObject        = __webpack_require__(58)
	  , aFunction       = __webpack_require__(21)
	  , $defineProperty = __webpack_require__(11);
	
	// B.2.2.3 Object.prototype.__defineSetter__(P, setter)
	__webpack_require__(6) && $export($export.P + __webpack_require__(262), 'Object', {
	  __defineSetter__: function __defineSetter__(P, setter){
	    $defineProperty.f(toObject(this), P, {set: aFunction(setter), enumerable: true, configurable: true});
	  }
	});

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export                  = __webpack_require__(8)
	  , toObject                 = __webpack_require__(58)
	  , toPrimitive              = __webpack_require__(16)
	  , getPrototypeOf           = __webpack_require__(59)
	  , getOwnPropertyDescriptor = __webpack_require__(51).f;
	
	// B.2.2.4 Object.prototype.__lookupGetter__(P)
	__webpack_require__(6) && $export($export.P + __webpack_require__(262), 'Object', {
	  __lookupGetter__: function __lookupGetter__(P){
	    var O = toObject(this)
	      , K = toPrimitive(P, true)
	      , D;
	    do {
	      if(D = getOwnPropertyDescriptor(O, K))return D.get;
	    } while(O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $export                  = __webpack_require__(8)
	  , toObject                 = __webpack_require__(58)
	  , toPrimitive              = __webpack_require__(16)
	  , getPrototypeOf           = __webpack_require__(59)
	  , getOwnPropertyDescriptor = __webpack_require__(51).f;
	
	// B.2.2.5 Object.prototype.__lookupSetter__(P)
	__webpack_require__(6) && $export($export.P + __webpack_require__(262), 'Object', {
	  __lookupSetter__: function __lookupSetter__(P){
	    var O = toObject(this)
	      , K = toPrimitive(P, true)
	      , D;
	    do {
	      if(D = getOwnPropertyDescriptor(O, K))return D.set;
	    } while(O = getPrototypeOf(O));
	  }
	});

/***/ },
/* 266 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(8);
	
	$export($export.P + $export.R, 'Map', {toJSON: __webpack_require__(267)('Map')});

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var classof = __webpack_require__(75)
	  , from    = __webpack_require__(268);
	module.exports = function(NAME){
	  return function toJSON(){
	    if(classof(this) != NAME)throw TypeError(NAME + "#toJSON isn't generic");
	    return from(this);
	  };
	};

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	var forOf = __webpack_require__(206);
	
	module.exports = function(iter, ITERATOR){
	  var result = [];
	  forOf(iter, false, result.push, result, ITERATOR);
	  return result;
	};


/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/DavidBruant/Map-Set.prototype.toJSON
	var $export  = __webpack_require__(8);
	
	$export($export.P + $export.R, 'Set', {toJSON: __webpack_require__(267)('Set')});

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/ljharb/proposal-global
	var $export = __webpack_require__(8);
	
	$export($export.S, 'System', {global: __webpack_require__(4)});

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/ljharb/proposal-is-error
	var $export = __webpack_require__(8)
	  , cof     = __webpack_require__(34);
	
	$export($export.S, 'Error', {
	  isError: function isError(it){
	    return cof(it) === 'Error';
	  }
	});

/***/ },
/* 272 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  iaddh: function iaddh(x0, x1, y0, y1){
	    var $x0 = x0 >>> 0
	      , $x1 = x1 >>> 0
	      , $y0 = y0 >>> 0;
	    return $x1 + (y1 >>> 0) + (($x0 & $y0 | ($x0 | $y0) & ~($x0 + $y0 >>> 0)) >>> 31) | 0;
	  }
	});

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  isubh: function isubh(x0, x1, y0, y1){
	    var $x0 = x0 >>> 0
	      , $x1 = x1 >>> 0
	      , $y0 = y0 >>> 0;
	    return $x1 - (y1 >>> 0) - ((~$x0 & $y0 | ~($x0 ^ $y0) & $x0 - $y0 >>> 0) >>> 31) | 0;
	  }
	});

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  imulh: function imulh(u, v){
	    var UINT16 = 0xffff
	      , $u = +u
	      , $v = +v
	      , u0 = $u & UINT16
	      , v0 = $v & UINT16
	      , u1 = $u >> 16
	      , v1 = $v >> 16
	      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >> 16);
	  }
	});

/***/ },
/* 275 */
/***/ function(module, exports, __webpack_require__) {

	// https://gist.github.com/BrendanEich/4294d5c212a6d2254703
	var $export = __webpack_require__(8);
	
	$export($export.S, 'Math', {
	  umulh: function umulh(u, v){
	    var UINT16 = 0xffff
	      , $u = +u
	      , $v = +v
	      , u0 = $u & UINT16
	      , v0 = $v & UINT16
	      , u1 = $u >>> 16
	      , v1 = $v >>> 16
	      , t  = (u1 * v0 >>> 0) + (u0 * v0 >>> 16);
	    return u1 * v1 + (t >>> 16) + ((u0 * v1 >>> 0) + (t & UINT16) >>> 16);
	  }
	});

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                  = __webpack_require__(277)
	  , anObject                  = __webpack_require__(12)
	  , toMetaKey                 = metadata.key
	  , ordinaryDefineOwnMetadata = metadata.set;
	
	metadata.exp({defineMetadata: function defineMetadata(metadataKey, metadataValue, target, targetKey){
	  ordinaryDefineOwnMetadata(metadataKey, metadataValue, anObject(target), toMetaKey(targetKey));
	}});

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	var Map     = __webpack_require__(211)
	  , $export = __webpack_require__(8)
	  , shared  = __webpack_require__(23)('metadata')
	  , store   = shared.store || (shared.store = new (__webpack_require__(215)));
	
	var getOrCreateMetadataMap = function(target, targetKey, create){
	  var targetMetadata = store.get(target);
	  if(!targetMetadata){
	    if(!create)return undefined;
	    store.set(target, targetMetadata = new Map);
	  }
	  var keyMetadata = targetMetadata.get(targetKey);
	  if(!keyMetadata){
	    if(!create)return undefined;
	    targetMetadata.set(targetKey, keyMetadata = new Map);
	  } return keyMetadata;
	};
	var ordinaryHasOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? false : metadataMap.has(MetadataKey);
	};
	var ordinaryGetOwnMetadata = function(MetadataKey, O, P){
	  var metadataMap = getOrCreateMetadataMap(O, P, false);
	  return metadataMap === undefined ? undefined : metadataMap.get(MetadataKey);
	};
	var ordinaryDefineOwnMetadata = function(MetadataKey, MetadataValue, O, P){
	  getOrCreateMetadataMap(O, P, true).set(MetadataKey, MetadataValue);
	};
	var ordinaryOwnMetadataKeys = function(target, targetKey){
	  var metadataMap = getOrCreateMetadataMap(target, targetKey, false)
	    , keys        = [];
	  if(metadataMap)metadataMap.forEach(function(_, key){ keys.push(key); });
	  return keys;
	};
	var toMetaKey = function(it){
	  return it === undefined || typeof it == 'symbol' ? it : String(it);
	};
	var exp = function(O){
	  $export($export.S, 'Reflect', O);
	};
	
	module.exports = {
	  store: store,
	  map: getOrCreateMetadataMap,
	  has: ordinaryHasOwnMetadata,
	  get: ordinaryGetOwnMetadata,
	  set: ordinaryDefineOwnMetadata,
	  keys: ordinaryOwnMetadataKeys,
	  key: toMetaKey,
	  exp: exp
	};

/***/ },
/* 278 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(277)
	  , anObject               = __webpack_require__(12)
	  , toMetaKey              = metadata.key
	  , getOrCreateMetadataMap = metadata.map
	  , store                  = metadata.store;
	
	metadata.exp({deleteMetadata: function deleteMetadata(metadataKey, target /*, targetKey */){
	  var targetKey   = arguments.length < 3 ? undefined : toMetaKey(arguments[2])
	    , metadataMap = getOrCreateMetadataMap(anObject(target), targetKey, false);
	  if(metadataMap === undefined || !metadataMap['delete'](metadataKey))return false;
	  if(metadataMap.size)return true;
	  var targetMetadata = store.get(target);
	  targetMetadata['delete'](targetKey);
	  return !!targetMetadata.size || store['delete'](target);
	}});

/***/ },
/* 279 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(277)
	  , anObject               = __webpack_require__(12)
	  , getPrototypeOf         = __webpack_require__(59)
	  , ordinaryHasOwnMetadata = metadata.has
	  , ordinaryGetOwnMetadata = metadata.get
	  , toMetaKey              = metadata.key;
	
	var ordinaryGetMetadata = function(MetadataKey, O, P){
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if(hasOwn)return ordinaryGetOwnMetadata(MetadataKey, O, P);
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryGetMetadata(MetadataKey, parent, P) : undefined;
	};
	
	metadata.exp({getMetadata: function getMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryGetMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 280 */
/***/ function(module, exports, __webpack_require__) {

	var Set                     = __webpack_require__(214)
	  , from                    = __webpack_require__(268)
	  , metadata                = __webpack_require__(277)
	  , anObject                = __webpack_require__(12)
	  , getPrototypeOf          = __webpack_require__(59)
	  , ordinaryOwnMetadataKeys = metadata.keys
	  , toMetaKey               = metadata.key;
	
	var ordinaryMetadataKeys = function(O, P){
	  var oKeys  = ordinaryOwnMetadataKeys(O, P)
	    , parent = getPrototypeOf(O);
	  if(parent === null)return oKeys;
	  var pKeys  = ordinaryMetadataKeys(parent, P);
	  return pKeys.length ? oKeys.length ? from(new Set(oKeys.concat(pKeys))) : pKeys : oKeys;
	};
	
	metadata.exp({getMetadataKeys: function getMetadataKeys(target /*, targetKey */){
	  return ordinaryMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	}});

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(277)
	  , anObject               = __webpack_require__(12)
	  , ordinaryGetOwnMetadata = metadata.get
	  , toMetaKey              = metadata.key;
	
	metadata.exp({getOwnMetadata: function getOwnMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryGetOwnMetadata(metadataKey, anObject(target)
	    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                = __webpack_require__(277)
	  , anObject                = __webpack_require__(12)
	  , ordinaryOwnMetadataKeys = metadata.keys
	  , toMetaKey               = metadata.key;
	
	metadata.exp({getOwnMetadataKeys: function getOwnMetadataKeys(target /*, targetKey */){
	  return ordinaryOwnMetadataKeys(anObject(target), arguments.length < 2 ? undefined : toMetaKey(arguments[1]));
	}});

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(277)
	  , anObject               = __webpack_require__(12)
	  , getPrototypeOf         = __webpack_require__(59)
	  , ordinaryHasOwnMetadata = metadata.has
	  , toMetaKey              = metadata.key;
	
	var ordinaryHasMetadata = function(MetadataKey, O, P){
	  var hasOwn = ordinaryHasOwnMetadata(MetadataKey, O, P);
	  if(hasOwn)return true;
	  var parent = getPrototypeOf(O);
	  return parent !== null ? ordinaryHasMetadata(MetadataKey, parent, P) : false;
	};
	
	metadata.exp({hasMetadata: function hasMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryHasMetadata(metadataKey, anObject(target), arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	var metadata               = __webpack_require__(277)
	  , anObject               = __webpack_require__(12)
	  , ordinaryHasOwnMetadata = metadata.has
	  , toMetaKey              = metadata.key;
	
	metadata.exp({hasOwnMetadata: function hasOwnMetadata(metadataKey, target /*, targetKey */){
	  return ordinaryHasOwnMetadata(metadataKey, anObject(target)
	    , arguments.length < 3 ? undefined : toMetaKey(arguments[2]));
	}});

/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	var metadata                  = __webpack_require__(277)
	  , anObject                  = __webpack_require__(12)
	  , aFunction                 = __webpack_require__(21)
	  , toMetaKey                 = metadata.key
	  , ordinaryDefineOwnMetadata = metadata.set;
	
	metadata.exp({metadata: function metadata(metadataKey, metadataValue){
	  return function decorator(target, targetKey){
	    ordinaryDefineOwnMetadata(
	      metadataKey, metadataValue,
	      (targetKey !== undefined ? anObject : aFunction)(target),
	      toMetaKey(targetKey)
	    );
	  };
	}});

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/rwaldron/tc39-notes/blob/master/es6/2014-09/sept-25.md#510-globalasap-for-enqueuing-a-microtask
	var $export   = __webpack_require__(8)
	  , microtask = __webpack_require__(209)()
	  , process   = __webpack_require__(4).process
	  , isNode    = __webpack_require__(34)(process) == 'process';
	
	$export($export.G, {
	  asap: function asap(fn){
	    var domain = isNode && process.domain;
	    microtask(domain ? domain.bind(fn) : fn);
	  }
	});

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// https://github.com/zenparsing/es-observable
	var $export     = __webpack_require__(8)
	  , global      = __webpack_require__(4)
	  , core        = __webpack_require__(9)
	  , microtask   = __webpack_require__(209)()
	  , OBSERVABLE  = __webpack_require__(25)('observable')
	  , aFunction   = __webpack_require__(21)
	  , anObject    = __webpack_require__(12)
	  , anInstance  = __webpack_require__(205)
	  , redefineAll = __webpack_require__(210)
	  , hide        = __webpack_require__(10)
	  , forOf       = __webpack_require__(206)
	  , RETURN      = forOf.RETURN;
	
	var getMethod = function(fn){
	  return fn == null ? undefined : aFunction(fn);
	};
	
	var cleanupSubscription = function(subscription){
	  var cleanup = subscription._c;
	  if(cleanup){
	    subscription._c = undefined;
	    cleanup();
	  }
	};
	
	var subscriptionClosed = function(subscription){
	  return subscription._o === undefined;
	};
	
	var closeSubscription = function(subscription){
	  if(!subscriptionClosed(subscription)){
	    subscription._o = undefined;
	    cleanupSubscription(subscription);
	  }
	};
	
	var Subscription = function(observer, subscriber){
	  anObject(observer);
	  this._c = undefined;
	  this._o = observer;
	  observer = new SubscriptionObserver(this);
	  try {
	    var cleanup      = subscriber(observer)
	      , subscription = cleanup;
	    if(cleanup != null){
	      if(typeof cleanup.unsubscribe === 'function')cleanup = function(){ subscription.unsubscribe(); };
	      else aFunction(cleanup);
	      this._c = cleanup;
	    }
	  } catch(e){
	    observer.error(e);
	    return;
	  } if(subscriptionClosed(this))cleanupSubscription(this);
	};
	
	Subscription.prototype = redefineAll({}, {
	  unsubscribe: function unsubscribe(){ closeSubscription(this); }
	});
	
	var SubscriptionObserver = function(subscription){
	  this._s = subscription;
	};
	
	SubscriptionObserver.prototype = redefineAll({}, {
	  next: function next(value){
	    var subscription = this._s;
	    if(!subscriptionClosed(subscription)){
	      var observer = subscription._o;
	      try {
	        var m = getMethod(observer.next);
	        if(m)return m.call(observer, value);
	      } catch(e){
	        try {
	          closeSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      }
	    }
	  },
	  error: function error(value){
	    var subscription = this._s;
	    if(subscriptionClosed(subscription))throw value;
	    var observer = subscription._o;
	    subscription._o = undefined;
	    try {
	      var m = getMethod(observer.error);
	      if(!m)throw value;
	      value = m.call(observer, value);
	    } catch(e){
	      try {
	        cleanupSubscription(subscription);
	      } finally {
	        throw e;
	      }
	    } cleanupSubscription(subscription);
	    return value;
	  },
	  complete: function complete(value){
	    var subscription = this._s;
	    if(!subscriptionClosed(subscription)){
	      var observer = subscription._o;
	      subscription._o = undefined;
	      try {
	        var m = getMethod(observer.complete);
	        value = m ? m.call(observer, value) : undefined;
	      } catch(e){
	        try {
	          cleanupSubscription(subscription);
	        } finally {
	          throw e;
	        }
	      } cleanupSubscription(subscription);
	      return value;
	    }
	  }
	});
	
	var $Observable = function Observable(subscriber){
	  anInstance(this, $Observable, 'Observable', '_f')._f = aFunction(subscriber);
	};
	
	redefineAll($Observable.prototype, {
	  subscribe: function subscribe(observer){
	    return new Subscription(observer, this._f);
	  },
	  forEach: function forEach(fn){
	    var that = this;
	    return new (core.Promise || global.Promise)(function(resolve, reject){
	      aFunction(fn);
	      var subscription = that.subscribe({
	        next : function(value){
	          try {
	            return fn(value);
	          } catch(e){
	            reject(e);
	            subscription.unsubscribe();
	          }
	        },
	        error: reject,
	        complete: resolve
	      });
	    });
	  }
	});
	
	redefineAll($Observable, {
	  from: function from(x){
	    var C = typeof this === 'function' ? this : $Observable;
	    var method = getMethod(anObject(x)[OBSERVABLE]);
	    if(method){
	      var observable = anObject(method.call(x));
	      return observable.constructor === C ? observable : new C(function(observer){
	        return observable.subscribe(observer);
	      });
	    }
	    return new C(function(observer){
	      var done = false;
	      microtask(function(){
	        if(!done){
	          try {
	            if(forOf(x, false, function(it){
	              observer.next(it);
	              if(done)return RETURN;
	            }) === RETURN)return;
	          } catch(e){
	            if(done)throw e;
	            observer.error(e);
	            return;
	          } observer.complete();
	        }
	      });
	      return function(){ done = true; };
	    });
	  },
	  of: function of(){
	    for(var i = 0, l = arguments.length, items = Array(l); i < l;)items[i] = arguments[i++];
	    return new (typeof this === 'function' ? this : $Observable)(function(observer){
	      var done = false;
	      microtask(function(){
	        if(!done){
	          for(var i = 0; i < items.length; ++i){
	            observer.next(items[i]);
	            if(done)return;
	          } observer.complete();
	        }
	      });
	      return function(){ done = true; };
	    });
	  }
	});
	
	hide($Observable.prototype, OBSERVABLE, function(){ return this; });
	
	$export($export.G, {Observable: $Observable});
	
	__webpack_require__(192)('Observable');

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	// ie9- setTimeout & setInterval additional parameters fix
	var global     = __webpack_require__(4)
	  , $export    = __webpack_require__(8)
	  , invoke     = __webpack_require__(78)
	  , partial    = __webpack_require__(289)
	  , navigator  = global.navigator
	  , MSIE       = !!navigator && /MSIE .\./.test(navigator.userAgent); // <- dirty ie9- check
	var wrap = function(set){
	  return MSIE ? function(fn, time /*, ...args */){
	    return set(invoke(
	      partial,
	      [].slice.call(arguments, 2),
	      typeof fn == 'function' ? fn : Function(fn)
	    ), time);
	  } : set;
	};
	$export($export.G + $export.B + $export.F * MSIE, {
	  setTimeout:  wrap(global.setTimeout),
	  setInterval: wrap(global.setInterval)
	});

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var path      = __webpack_require__(290)
	  , invoke    = __webpack_require__(78)
	  , aFunction = __webpack_require__(21);
	module.exports = function(/* ...pargs */){
	  var fn     = aFunction(this)
	    , length = arguments.length
	    , pargs  = Array(length)
	    , i      = 0
	    , _      = path._
	    , holder = false;
	  while(length > i)if((pargs[i] = arguments[i++]) === _)holder = true;
	  return function(/* ...args */){
	    var that = this
	      , aLen = arguments.length
	      , j = 0, k = 0, args;
	    if(!holder && !aLen)return invoke(fn, pargs, that);
	    args = pargs.slice();
	    if(holder)for(;length > j; j++)if(args[j] === _)args[j] = arguments[k++];
	    while(aLen > k)args.push(arguments[k++]);
	    return invoke(fn, args, that);
	  };
	};

/***/ },
/* 290 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(4);

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(8)
	  , $task   = __webpack_require__(208);
	$export($export.G + $export.B, {
	  setImmediate:   $task.set,
	  clearImmediate: $task.clear
	});

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	var $iterators    = __webpack_require__(193)
	  , redefine      = __webpack_require__(18)
	  , global        = __webpack_require__(4)
	  , hide          = __webpack_require__(10)
	  , Iterators     = __webpack_require__(129)
	  , wks           = __webpack_require__(25)
	  , ITERATOR      = wks('iterator')
	  , TO_STRING_TAG = wks('toStringTag')
	  , ArrayValues   = Iterators.Array;
	
	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = global[NAME]
	    , proto      = Collection && Collection.prototype
	    , key;
	  if(proto){
	    if(!proto[ITERATOR])hide(proto, ITERATOR, ArrayValues);
	    if(!proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
	    Iterators[NAME] = ArrayValues;
	    for(key in $iterators)if(!proto[key])redefine(proto, key, $iterators[key], true);
	  }
	}

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global, process) {/**
	 * Copyright (c) 2014, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An
	 * additional grant of patent rights can be found in the PATENTS file in
	 * the same directory.
	 */
	
	!(function(global) {
	  "use strict";
	
	  var Op = Object.prototype;
	  var hasOwn = Op.hasOwnProperty;
	  var undefined; // More compressible than void 0.
	  var $Symbol = typeof Symbol === "function" ? Symbol : {};
	  var iteratorSymbol = $Symbol.iterator || "@@iterator";
	  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
	
	  var inModule = typeof module === "object";
	  var runtime = global.regeneratorRuntime;
	  if (runtime) {
	    if (inModule) {
	      // If regeneratorRuntime is defined globally and we're in a module,
	      // make the exports object identical to regeneratorRuntime.
	      module.exports = runtime;
	    }
	    // Don't bother evaluating the rest of this file if the runtime was
	    // already defined globally.
	    return;
	  }
	
	  // Define the runtime globally (as expected by generated code) as either
	  // module.exports (if we're in a module) or a new, empty object.
	  runtime = global.regeneratorRuntime = inModule ? module.exports : {};
	
	  function wrap(innerFn, outerFn, self, tryLocsList) {
	    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
	    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
	    var generator = Object.create(protoGenerator.prototype);
	    var context = new Context(tryLocsList || []);
	
	    // The ._invoke method unifies the implementations of the .next,
	    // .throw, and .return methods.
	    generator._invoke = makeInvokeMethod(innerFn, self, context);
	
	    return generator;
	  }
	  runtime.wrap = wrap;
	
	  // Try/catch helper to minimize deoptimizations. Returns a completion
	  // record like context.tryEntries[i].completion. This interface could
	  // have been (and was previously) designed to take a closure to be
	  // invoked without arguments, but in all the cases we care about we
	  // already have an existing method we want to call, so there's no need
	  // to create a new function object. We can even get away with assuming
	  // the method takes exactly one argument, since that happens to be true
	  // in every case, so we don't have to touch the arguments object. The
	  // only additional allocation required is the completion record, which
	  // has a stable shape and so hopefully should be cheap to allocate.
	  function tryCatch(fn, obj, arg) {
	    try {
	      return { type: "normal", arg: fn.call(obj, arg) };
	    } catch (err) {
	      return { type: "throw", arg: err };
	    }
	  }
	
	  var GenStateSuspendedStart = "suspendedStart";
	  var GenStateSuspendedYield = "suspendedYield";
	  var GenStateExecuting = "executing";
	  var GenStateCompleted = "completed";
	
	  // Returning this object from the innerFn has the same effect as
	  // breaking out of the dispatch switch statement.
	  var ContinueSentinel = {};
	
	  // Dummy constructor functions that we use as the .constructor and
	  // .constructor.prototype properties for functions that return Generator
	  // objects. For full spec compliance, you may wish to configure your
	  // minifier not to mangle the names of these two functions.
	  function Generator() {}
	  function GeneratorFunction() {}
	  function GeneratorFunctionPrototype() {}
	
	  // This is a polyfill for %IteratorPrototype% for environments that
	  // don't natively support it.
	  var IteratorPrototype = {};
	  IteratorPrototype[iteratorSymbol] = function () {
	    return this;
	  };
	
	  var getProto = Object.getPrototypeOf;
	  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
	  if (NativeIteratorPrototype &&
	      NativeIteratorPrototype !== Op &&
	      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
	    // This environment has a native %IteratorPrototype%; use it instead
	    // of the polyfill.
	    IteratorPrototype = NativeIteratorPrototype;
	  }
	
	  var Gp = GeneratorFunctionPrototype.prototype =
	    Generator.prototype = Object.create(IteratorPrototype);
	  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
	  GeneratorFunctionPrototype.constructor = GeneratorFunction;
	  GeneratorFunctionPrototype[toStringTagSymbol] =
	    GeneratorFunction.displayName = "GeneratorFunction";
	
	  // Helper for defining the .next, .throw, and .return methods of the
	  // Iterator interface in terms of a single ._invoke method.
	  function defineIteratorMethods(prototype) {
	    ["next", "throw", "return"].forEach(function(method) {
	      prototype[method] = function(arg) {
	        return this._invoke(method, arg);
	      };
	    });
	  }
	
	  runtime.isGeneratorFunction = function(genFun) {
	    var ctor = typeof genFun === "function" && genFun.constructor;
	    return ctor
	      ? ctor === GeneratorFunction ||
	        // For the native GeneratorFunction constructor, the best we can
	        // do is to check its .name property.
	        (ctor.displayName || ctor.name) === "GeneratorFunction"
	      : false;
	  };
	
	  runtime.mark = function(genFun) {
	    if (Object.setPrototypeOf) {
	      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
	    } else {
	      genFun.__proto__ = GeneratorFunctionPrototype;
	      if (!(toStringTagSymbol in genFun)) {
	        genFun[toStringTagSymbol] = "GeneratorFunction";
	      }
	    }
	    genFun.prototype = Object.create(Gp);
	    return genFun;
	  };
	
	  // Within the body of any async function, `await x` is transformed to
	  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
	  // `hasOwn.call(value, "__await")` to determine if the yielded value is
	  // meant to be awaited.
	  runtime.awrap = function(arg) {
	    return { __await: arg };
	  };
	
	  function AsyncIterator(generator) {
	    function invoke(method, arg, resolve, reject) {
	      var record = tryCatch(generator[method], generator, arg);
	      if (record.type === "throw") {
	        reject(record.arg);
	      } else {
	        var result = record.arg;
	        var value = result.value;
	        if (value &&
	            typeof value === "object" &&
	            hasOwn.call(value, "__await")) {
	          return Promise.resolve(value.__await).then(function(value) {
	            invoke("next", value, resolve, reject);
	          }, function(err) {
	            invoke("throw", err, resolve, reject);
	          });
	        }
	
	        return Promise.resolve(value).then(function(unwrapped) {
	          // When a yielded Promise is resolved, its final value becomes
	          // the .value of the Promise<{value,done}> result for the
	          // current iteration. If the Promise is rejected, however, the
	          // result for this iteration will be rejected with the same
	          // reason. Note that rejections of yielded Promises are not
	          // thrown back into the generator function, as is the case
	          // when an awaited Promise is rejected. This difference in
	          // behavior between yield and await is important, because it
	          // allows the consumer to decide what to do with the yielded
	          // rejection (swallow it and continue, manually .throw it back
	          // into the generator, abandon iteration, whatever). With
	          // await, by contrast, there is no opportunity to examine the
	          // rejection reason outside the generator function, so the
	          // only option is to throw it from the await expression, and
	          // let the generator function handle the exception.
	          result.value = unwrapped;
	          resolve(result);
	        }, reject);
	      }
	    }
	
	    if (typeof process === "object" && process.domain) {
	      invoke = process.domain.bind(invoke);
	    }
	
	    var previousPromise;
	
	    function enqueue(method, arg) {
	      function callInvokeWithMethodAndArg() {
	        return new Promise(function(resolve, reject) {
	          invoke(method, arg, resolve, reject);
	        });
	      }
	
	      return previousPromise =
	        // If enqueue has been called before, then we want to wait until
	        // all previous Promises have been resolved before calling invoke,
	        // so that results are always delivered in the correct order. If
	        // enqueue has not been called before, then it is important to
	        // call invoke immediately, without waiting on a callback to fire,
	        // so that the async generator function has the opportunity to do
	        // any necessary setup in a predictable way. This predictability
	        // is why the Promise constructor synchronously invokes its
	        // executor callback, and why async functions synchronously
	        // execute code before the first await. Since we implement simple
	        // async functions in terms of async generators, it is especially
	        // important to get this right, even though it requires care.
	        previousPromise ? previousPromise.then(
	          callInvokeWithMethodAndArg,
	          // Avoid propagating failures to Promises returned by later
	          // invocations of the iterator.
	          callInvokeWithMethodAndArg
	        ) : callInvokeWithMethodAndArg();
	    }
	
	    // Define the unified helper method that is used to implement .next,
	    // .throw, and .return (see defineIteratorMethods).
	    this._invoke = enqueue;
	  }
	
	  defineIteratorMethods(AsyncIterator.prototype);
	  runtime.AsyncIterator = AsyncIterator;
	
	  // Note that simple async functions are implemented on top of
	  // AsyncIterator objects; they just return a Promise for the value of
	  // the final result produced by the iterator.
	  runtime.async = function(innerFn, outerFn, self, tryLocsList) {
	    var iter = new AsyncIterator(
	      wrap(innerFn, outerFn, self, tryLocsList)
	    );
	
	    return runtime.isGeneratorFunction(outerFn)
	      ? iter // If outerFn is a generator, return the full iterator.
	      : iter.next().then(function(result) {
	          return result.done ? result.value : iter.next();
	        });
	  };
	
	  function makeInvokeMethod(innerFn, self, context) {
	    var state = GenStateSuspendedStart;
	
	    return function invoke(method, arg) {
	      if (state === GenStateExecuting) {
	        throw new Error("Generator is already running");
	      }
	
	      if (state === GenStateCompleted) {
	        if (method === "throw") {
	          throw arg;
	        }
	
	        // Be forgiving, per 25.3.3.3.3 of the spec:
	        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
	        return doneResult();
	      }
	
	      while (true) {
	        var delegate = context.delegate;
	        if (delegate) {
	          if (method === "return" ||
	              (method === "throw" && delegate.iterator[method] === undefined)) {
	            // A return or throw (when the delegate iterator has no throw
	            // method) always terminates the yield* loop.
	            context.delegate = null;
	
	            // If the delegate iterator has a return method, give it a
	            // chance to clean up.
	            var returnMethod = delegate.iterator["return"];
	            if (returnMethod) {
	              var record = tryCatch(returnMethod, delegate.iterator, arg);
	              if (record.type === "throw") {
	                // If the return method threw an exception, let that
	                // exception prevail over the original return or throw.
	                method = "throw";
	                arg = record.arg;
	                continue;
	              }
	            }
	
	            if (method === "return") {
	              // Continue with the outer return, now that the delegate
	              // iterator has been terminated.
	              continue;
	            }
	          }
	
	          var record = tryCatch(
	            delegate.iterator[method],
	            delegate.iterator,
	            arg
	          );
	
	          if (record.type === "throw") {
	            context.delegate = null;
	
	            // Like returning generator.throw(uncaught), but without the
	            // overhead of an extra function call.
	            method = "throw";
	            arg = record.arg;
	            continue;
	          }
	
	          // Delegate generator ran and handled its own exceptions so
	          // regardless of what the method was, we continue as if it is
	          // "next" with an undefined arg.
	          method = "next";
	          arg = undefined;
	
	          var info = record.arg;
	          if (info.done) {
	            context[delegate.resultName] = info.value;
	            context.next = delegate.nextLoc;
	          } else {
	            state = GenStateSuspendedYield;
	            return info;
	          }
	
	          context.delegate = null;
	        }
	
	        if (method === "next") {
	          // Setting context._sent for legacy support of Babel's
	          // function.sent implementation.
	          context.sent = context._sent = arg;
	
	        } else if (method === "throw") {
	          if (state === GenStateSuspendedStart) {
	            state = GenStateCompleted;
	            throw arg;
	          }
	
	          if (context.dispatchException(arg)) {
	            // If the dispatched exception was caught by a catch block,
	            // then let that catch block handle the exception normally.
	            method = "next";
	            arg = undefined;
	          }
	
	        } else if (method === "return") {
	          context.abrupt("return", arg);
	        }
	
	        state = GenStateExecuting;
	
	        var record = tryCatch(innerFn, self, context);
	        if (record.type === "normal") {
	          // If an exception is thrown from innerFn, we leave state ===
	          // GenStateExecuting and loop back for another invocation.
	          state = context.done
	            ? GenStateCompleted
	            : GenStateSuspendedYield;
	
	          var info = {
	            value: record.arg,
	            done: context.done
	          };
	
	          if (record.arg === ContinueSentinel) {
	            if (context.delegate && method === "next") {
	              // Deliberately forget the last sent value so that we don't
	              // accidentally pass it on to the delegate.
	              arg = undefined;
	            }
	          } else {
	            return info;
	          }
	
	        } else if (record.type === "throw") {
	          state = GenStateCompleted;
	          // Dispatch the exception by looping back around to the
	          // context.dispatchException(arg) call above.
	          method = "throw";
	          arg = record.arg;
	        }
	      }
	    };
	  }
	
	  // Define Generator.prototype.{next,throw,return} in terms of the
	  // unified ._invoke helper method.
	  defineIteratorMethods(Gp);
	
	  Gp[toStringTagSymbol] = "Generator";
	
	  Gp.toString = function() {
	    return "[object Generator]";
	  };
	
	  function pushTryEntry(locs) {
	    var entry = { tryLoc: locs[0] };
	
	    if (1 in locs) {
	      entry.catchLoc = locs[1];
	    }
	
	    if (2 in locs) {
	      entry.finallyLoc = locs[2];
	      entry.afterLoc = locs[3];
	    }
	
	    this.tryEntries.push(entry);
	  }
	
	  function resetTryEntry(entry) {
	    var record = entry.completion || {};
	    record.type = "normal";
	    delete record.arg;
	    entry.completion = record;
	  }
	
	  function Context(tryLocsList) {
	    // The root entry object (effectively a try statement without a catch
	    // or a finally block) gives us a place to store values thrown from
	    // locations where there is no enclosing try statement.
	    this.tryEntries = [{ tryLoc: "root" }];
	    tryLocsList.forEach(pushTryEntry, this);
	    this.reset(true);
	  }
	
	  runtime.keys = function(object) {
	    var keys = [];
	    for (var key in object) {
	      keys.push(key);
	    }
	    keys.reverse();
	
	    // Rather than returning an object with a next method, we keep
	    // things simple and return the next function itself.
	    return function next() {
	      while (keys.length) {
	        var key = keys.pop();
	        if (key in object) {
	          next.value = key;
	          next.done = false;
	          return next;
	        }
	      }
	
	      // To avoid creating an additional object, we just hang the .value
	      // and .done properties off the next function object itself. This
	      // also ensures that the minifier will not anonymize the function.
	      next.done = true;
	      return next;
	    };
	  };
	
	  function values(iterable) {
	    if (iterable) {
	      var iteratorMethod = iterable[iteratorSymbol];
	      if (iteratorMethod) {
	        return iteratorMethod.call(iterable);
	      }
	
	      if (typeof iterable.next === "function") {
	        return iterable;
	      }
	
	      if (!isNaN(iterable.length)) {
	        var i = -1, next = function next() {
	          while (++i < iterable.length) {
	            if (hasOwn.call(iterable, i)) {
	              next.value = iterable[i];
	              next.done = false;
	              return next;
	            }
	          }
	
	          next.value = undefined;
	          next.done = true;
	
	          return next;
	        };
	
	        return next.next = next;
	      }
	    }
	
	    // Return an iterator with no values.
	    return { next: doneResult };
	  }
	  runtime.values = values;
	
	  function doneResult() {
	    return { value: undefined, done: true };
	  }
	
	  Context.prototype = {
	    constructor: Context,
	
	    reset: function(skipTempReset) {
	      this.prev = 0;
	      this.next = 0;
	      // Resetting context._sent for legacy support of Babel's
	      // function.sent implementation.
	      this.sent = this._sent = undefined;
	      this.done = false;
	      this.delegate = null;
	
	      this.tryEntries.forEach(resetTryEntry);
	
	      if (!skipTempReset) {
	        for (var name in this) {
	          // Not sure about the optimal order of these conditions:
	          if (name.charAt(0) === "t" &&
	              hasOwn.call(this, name) &&
	              !isNaN(+name.slice(1))) {
	            this[name] = undefined;
	          }
	        }
	      }
	    },
	
	    stop: function() {
	      this.done = true;
	
	      var rootEntry = this.tryEntries[0];
	      var rootRecord = rootEntry.completion;
	      if (rootRecord.type === "throw") {
	        throw rootRecord.arg;
	      }
	
	      return this.rval;
	    },
	
	    dispatchException: function(exception) {
	      if (this.done) {
	        throw exception;
	      }
	
	      var context = this;
	      function handle(loc, caught) {
	        record.type = "throw";
	        record.arg = exception;
	        context.next = loc;
	        return !!caught;
	      }
	
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        var record = entry.completion;
	
	        if (entry.tryLoc === "root") {
	          // Exception thrown outside of any try block that could handle
	          // it, so set the completion value of the entire function to
	          // throw the exception.
	          return handle("end");
	        }
	
	        if (entry.tryLoc <= this.prev) {
	          var hasCatch = hasOwn.call(entry, "catchLoc");
	          var hasFinally = hasOwn.call(entry, "finallyLoc");
	
	          if (hasCatch && hasFinally) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            } else if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }
	
	          } else if (hasCatch) {
	            if (this.prev < entry.catchLoc) {
	              return handle(entry.catchLoc, true);
	            }
	
	          } else if (hasFinally) {
	            if (this.prev < entry.finallyLoc) {
	              return handle(entry.finallyLoc);
	            }
	
	          } else {
	            throw new Error("try statement without catch or finally");
	          }
	        }
	      }
	    },
	
	    abrupt: function(type, arg) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc <= this.prev &&
	            hasOwn.call(entry, "finallyLoc") &&
	            this.prev < entry.finallyLoc) {
	          var finallyEntry = entry;
	          break;
	        }
	      }
	
	      if (finallyEntry &&
	          (type === "break" ||
	           type === "continue") &&
	          finallyEntry.tryLoc <= arg &&
	          arg <= finallyEntry.finallyLoc) {
	        // Ignore the finally entry if control is not jumping to a
	        // location outside the try/catch block.
	        finallyEntry = null;
	      }
	
	      var record = finallyEntry ? finallyEntry.completion : {};
	      record.type = type;
	      record.arg = arg;
	
	      if (finallyEntry) {
	        this.next = finallyEntry.finallyLoc;
	      } else {
	        this.complete(record);
	      }
	
	      return ContinueSentinel;
	    },
	
	    complete: function(record, afterLoc) {
	      if (record.type === "throw") {
	        throw record.arg;
	      }
	
	      if (record.type === "break" ||
	          record.type === "continue") {
	        this.next = record.arg;
	      } else if (record.type === "return") {
	        this.rval = record.arg;
	        this.next = "end";
	      } else if (record.type === "normal" && afterLoc) {
	        this.next = afterLoc;
	      }
	    },
	
	    finish: function(finallyLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.finallyLoc === finallyLoc) {
	          this.complete(entry.completion, entry.afterLoc);
	          resetTryEntry(entry);
	          return ContinueSentinel;
	        }
	      }
	    },
	
	    "catch": function(tryLoc) {
	      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
	        var entry = this.tryEntries[i];
	        if (entry.tryLoc === tryLoc) {
	          var record = entry.completion;
	          if (record.type === "throw") {
	            var thrown = record.arg;
	            resetTryEntry(entry);
	          }
	          return thrown;
	        }
	      }
	
	      // The context.catch method must only be called with a location
	      // argument that corresponds to a known catch block.
	      throw new Error("illegal catch attempt");
	    },
	
	    delegateYield: function(iterable, resultName, nextLoc) {
	      this.delegate = {
	        iterator: values(iterable),
	        resultName: resultName,
	        nextLoc: nextLoc
	      };
	
	      return ContinueSentinel;
	    }
	  };
	})(
	  // Among the various tricks for obtaining a reference to the global
	  // object, this seems to be the most reliable technique that does not
	  // use indirect eval (which violates Content Security Policy).
	  typeof global === "object" ? global :
	  typeof window === "object" ? window :
	  typeof self === "object" ? self : this
	);
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(294)))

/***/ },
/* 294 */
/***/ function(module, exports) {

	// shim for using process in browser
	var process = module.exports = {};
	
	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.
	
	var cachedSetTimeout;
	var cachedClearTimeout;
	
	function defaultSetTimout() {
	    throw new Error('setTimeout has not been defined');
	}
	function defaultClearTimeout () {
	    throw new Error('clearTimeout has not been defined');
	}
	(function () {
	    try {
	        if (typeof setTimeout === 'function') {
	            cachedSetTimeout = setTimeout;
	        } else {
	            cachedSetTimeout = defaultSetTimout;
	        }
	    } catch (e) {
	        cachedSetTimeout = defaultSetTimout;
	    }
	    try {
	        if (typeof clearTimeout === 'function') {
	            cachedClearTimeout = clearTimeout;
	        } else {
	            cachedClearTimeout = defaultClearTimeout;
	        }
	    } catch (e) {
	        cachedClearTimeout = defaultClearTimeout;
	    }
	} ())
	function runTimeout(fun) {
	    if (cachedSetTimeout === setTimeout) {
	        //normal enviroments in sane situations
	        return setTimeout(fun, 0);
	    }
	    // if setTimeout wasn't available but was latter defined
	    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
	        cachedSetTimeout = setTimeout;
	        return setTimeout(fun, 0);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedSetTimeout(fun, 0);
	    } catch(e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
	            return cachedSetTimeout.call(null, fun, 0);
	        } catch(e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
	            return cachedSetTimeout.call(this, fun, 0);
	        }
	    }
	
	
	}
	function runClearTimeout(marker) {
	    if (cachedClearTimeout === clearTimeout) {
	        //normal enviroments in sane situations
	        return clearTimeout(marker);
	    }
	    // if clearTimeout wasn't available but was latter defined
	    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
	        cachedClearTimeout = clearTimeout;
	        return clearTimeout(marker);
	    }
	    try {
	        // when when somebody has screwed with setTimeout but no I.E. maddness
	        return cachedClearTimeout(marker);
	    } catch (e){
	        try {
	            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
	            return cachedClearTimeout.call(null, marker);
	        } catch (e){
	            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
	            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
	            return cachedClearTimeout.call(this, marker);
	        }
	    }
	
	
	
	}
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;
	
	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}
	
	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = runTimeout(cleanUpNextTick);
	    draining = true;
	
	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    runClearTimeout(timeout);
	}
	
	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        runTimeout(drainQueue);
	    }
	};
	
	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};
	
	function noop() {}
	
	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;
	
	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};
	
	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 295 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(296);
	module.exports = __webpack_require__(9).RegExp.escape;

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/benjamingr/RexExp.escape
	var $export = __webpack_require__(8)
	  , $re     = __webpack_require__(297)(/[\\^$*+?.()|[\]{}]/g, '\\$&');
	
	$export($export.S, 'RegExp', {escape: function escape(it){ return $re(it); }});


/***/ },
/* 297 */
/***/ function(module, exports) {

	module.exports = function(regExp, replace){
	  var replacer = replace === Object(replace) ? function(part){
	    return replace[part];
	  } : replace;
	  return function(it){
	    return String(it).replace(regExp, replacer);
	  };
	};

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _main = __webpack_require__(299);
	
	var _main2 = _interopRequireDefault(_main);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var __VERSION__ = "1.8.2";
	var __NAME__ = "grimoirejs-preset-basic";
	
	var __EXPOSE__ = {};
	var __BASE__ = (0, _main2.default)();
	Object.assign(__EXPOSE__, {
	    __VERSION__: __VERSION__,
	    __NAME__: __NAME__
	});
	Object.assign(__BASE__ || {}, __EXPOSE__);
	window["GrimoireJS"].lib.preset_basic = __EXPOSE__;
	exports.default = __BASE__;

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	__webpack_require__(300);
	
	__webpack_require__(301);
	
	__webpack_require__(302);
	
	exports.default = function () {};

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory();
		else if(typeof define === 'function' && define.amd)
			define([], factory);
		else {
			var a = factory();
			for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
		}
	})(this, function() {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	/******/
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;
	/******/
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			exports: {},
	/******/ 			id: moduleId,
	/******/ 			loaded: false
	/******/ 		};
	/******/
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	/******/
	/******/ 		// Flag the module as loaded
	/******/ 		module.loaded = true;
	/******/
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _AttributeManager = __webpack_require__(1);
		
		var _AttributeManager2 = _interopRequireDefault(_AttributeManager);
		
		var _Constants = __webpack_require__(9);
		
		var _Constants2 = _interopRequireDefault(_Constants);
		
		var _EEObject = __webpack_require__(15);
		
		var _EEObject2 = _interopRequireDefault(_EEObject);
		
		var _Ensure = __webpack_require__(2);
		
		var _Ensure2 = _interopRequireDefault(_Ensure);
		
		var _IDObject = __webpack_require__(17);
		
		var _IDObject2 = _interopRequireDefault(_IDObject);
		
		var _NSDictionary = __webpack_require__(12);
		
		var _NSDictionary2 = _interopRequireDefault(_NSDictionary);
		
		var _NSIdentity = __webpack_require__(11);
		
		var _NSIdentity2 = _interopRequireDefault(_NSIdentity);
		
		var _NSSet = __webpack_require__(33);
		
		var _NSSet2 = _interopRequireDefault(_NSSet);
		
		var _Utility = __webpack_require__(13);
		
		var _Utility2 = _interopRequireDefault(_Utility);
		
		var _XMLHttpRequestAsync = __webpack_require__(19);
		
		var _XMLHttpRequestAsync2 = _interopRequireDefault(_XMLHttpRequestAsync);
		
		var _XMLReader = __webpack_require__(14);
		
		var _XMLReader2 = _interopRequireDefault(_XMLReader);
		
		var _GrimoireComponent = __webpack_require__(30);
		
		var _GrimoireComponent2 = _interopRequireDefault(_GrimoireComponent);
		
		var _ArrayConverter = __webpack_require__(26);
		
		var _ArrayConverter2 = _interopRequireDefault(_ArrayConverter);
		
		var _BooleanConverter = __webpack_require__(29);
		
		var _BooleanConverter2 = _interopRequireDefault(_BooleanConverter);
		
		var _ComponentConverter = __webpack_require__(22);
		
		var _ComponentConverter2 = _interopRequireDefault(_ComponentConverter);
		
		var _EnumConverter = __webpack_require__(20);
		
		var _EnumConverter2 = _interopRequireDefault(_EnumConverter);
		
		var _NumberArrayConverter = __webpack_require__(21);
		
		var _NumberArrayConverter2 = _interopRequireDefault(_NumberArrayConverter);
		
		var _NumberConverter = __webpack_require__(24);
		
		var _NumberConverter2 = _interopRequireDefault(_NumberConverter);
		
		var _ObjectConverter = __webpack_require__(25);
		
		var _ObjectConverter2 = _interopRequireDefault(_ObjectConverter);
		
		var _StringArrayConverter = __webpack_require__(31);
		
		var _StringArrayConverter2 = _interopRequireDefault(_StringArrayConverter);
		
		var _StringConverter = __webpack_require__(32);
		
		var _StringConverter2 = _interopRequireDefault(_StringConverter);
		
		var _GrimoireInterface = __webpack_require__(3);
		
		var _GrimoireInterface2 = _interopRequireDefault(_GrimoireInterface);
		
		var _GrimoireInterfaceImpl = __webpack_require__(4);
		
		var _GrimoireInterfaceImpl2 = _interopRequireDefault(_GrimoireInterfaceImpl);
		
		var _GomlInterface = __webpack_require__(28);
		
		var _GomlInterface2 = _interopRequireDefault(_GomlInterface);
		
		var _NodeInterface = __webpack_require__(27);
		
		var _NodeInterface2 = _interopRequireDefault(_NodeInterface);
		
		var _Attribute = __webpack_require__(10);
		
		var _Attribute2 = _interopRequireDefault(_Attribute);
		
		var _Component = __webpack_require__(23);
		
		var _Component2 = _interopRequireDefault(_Component);
		
		var _ComponentDeclaration = __webpack_require__(8);
		
		var _ComponentDeclaration2 = _interopRequireDefault(_ComponentDeclaration);
		
		var _GomlLoader = __webpack_require__(5);
		
		var _GomlLoader2 = _interopRequireDefault(_GomlLoader);
		
		var _GomlNode = __webpack_require__(7);
		
		var _GomlNode2 = _interopRequireDefault(_GomlNode);
		
		var _GomlParser = __webpack_require__(6);
		
		var _GomlParser2 = _interopRequireDefault(_GomlParser);
		
		var _NodeDeclaration = __webpack_require__(34);
		
		var _NodeDeclaration2 = _interopRequireDefault(_NodeDeclaration);
		
		var _NodeUtility = __webpack_require__(18);
		
		var _NodeUtility2 = _interopRequireDefault(_NodeUtility);
		
		var _main = __webpack_require__(35);
		
		var _main2 = _interopRequireDefault(_main);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		var __VERSION__ = "0.14.0";
		var __NAME__ = "grimoirejs";
		
		var __EXPOSE__ = {
		    "Base": {
		        "AttributeManager": _AttributeManager2.default,
		        "Constants": _Constants2.default,
		        "EEObject": _EEObject2.default,
		        "Ensure": _Ensure2.default,
		        "IDObject": _IDObject2.default,
		        "NSDictionary": _NSDictionary2.default,
		        "NSIdentity": _NSIdentity2.default,
		        "NSSet": _NSSet2.default,
		        "Utility": _Utility2.default,
		        "XMLHttpRequestAsync": _XMLHttpRequestAsync2.default,
		        "XMLReader": _XMLReader2.default
		    },
		    "Components": {
		        "GrimoireComponent": _GrimoireComponent2.default
		    },
		    "Converters": {
		        "ArrayConverter": _ArrayConverter2.default,
		        "BooleanConverter": _BooleanConverter2.default,
		        "ComponentConverter": _ComponentConverter2.default,
		        "EnumConverter": _EnumConverter2.default,
		        "NumberArrayConverter": _NumberArrayConverter2.default,
		        "NumberConverter": _NumberConverter2.default,
		        "ObjectConverter": _ObjectConverter2.default,
		        "StringArrayConverter": _StringArrayConverter2.default,
		        "StringConverter": _StringConverter2.default
		    },
		    "GrimoireInterface": _GrimoireInterface2.default,
		    "GrimoireInterfaceImpl": _GrimoireInterfaceImpl2.default,
		    "Interface": {
		        "GomlInterface": _GomlInterface2.default,
		        "NodeInterface": _NodeInterface2.default
		    },
		    "Node": {
		        "Attribute": _Attribute2.default,
		        "Component": _Component2.default,
		        "ComponentDeclaration": _ComponentDeclaration2.default,
		        "GomlLoader": _GomlLoader2.default,
		        "GomlNode": _GomlNode2.default,
		        "GomlParser": _GomlParser2.default,
		        "NodeDeclaration": _NodeDeclaration2.default,
		        "NodeUtility": _NodeUtility2.default
		    }
		};
		var __BASE__ = (0, _main2.default)();
		Object.assign(__EXPOSE__, {
		    __VERSION__: __VERSION__,
		    __NAME__: __NAME__
		});
		Object.assign(__BASE__ || {}, __EXPOSE__);
		window["GrimoireJS"]["__VERSION__"] = __VERSION__;
		exports.default = __BASE__;
	
	/***/ },
	/* 1 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Ensure = __webpack_require__(2);
		
		var _Ensure2 = _interopRequireDefault(_Ensure);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var AttributeManager = function () {
		    function AttributeManager(tag, attributes) {
		        _classCallCheck(this, AttributeManager);
		
		        this.tag = tag;
		        this.attributes = attributes;
		        this._attrBuffer = {};
		        this._watchBuffer = {};
		    }
		
		    _createClass(AttributeManager, [{
		        key: "addAttribute",
		        value: function addAttribute(attr) {
		            if (this.attributes.get(attr.name)) {
		                console.warn("attribute " + attr.name + " is already exist in " + this.tag);
		            }
		            this.attributes.set(attr.name, attr);
		            // check buffer value.
		            var attrBuf = this._attrBuffer[attr.name.fqn];
		            if (attrBuf !== void 0) {
		                attr.Value = attrBuf;
		                delete this._attrBuffer[attr.name.fqn];
		            }
		            var watchBuf = this._watchBuffer[attr.name.fqn];
		            if (watchBuf) {
		                attr.watch(watchBuf, true);
		            }
		            return attr;
		        }
		    }, {
		        key: "watch",
		        value: function watch(attrName, watcher) {
		            var immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
		
		            attrName = _Ensure2.default.ensureTobeNSIdentity(attrName);
		            var attr = this.attributes.get(attrName);
		            if (!attr) {
		                this._watchBuffer[attrName.fqn] = watcher;
		            } else {
		                attr.watch(watcher, immediate);
		            }
		        }
		    }, {
		        key: "setAttribute",
		        value: function setAttribute(attrName, value) {
		            attrName = _Ensure2.default.ensureTobeNSIdentity(attrName);
		            var attr = this.attributes.get(attrName);
		            if (!attr) {
		                this._attrBuffer[attrName.fqn] = value;
		            } else {
		                attr.Value = value;
		            }
		        }
		    }, {
		        key: "getAttribute",
		        value: function getAttribute(attrName) {
		            attrName = _Ensure2.default.ensureTobeNSIdentity(attrName);
		            var attr = this.attributes.get(attrName);
		            if (!attr) {
		                var attrBuf = this._attrBuffer[attrName.fqn];
		                if (attrBuf !== void 0) {
		                    return attrBuf;
		                }
		                console.warn("attribute \"" + attrName.name + "\" is not found.");
		                return;
		            } else {
		                return attr.Value;
		            }
		        }
		    }, {
		        key: "removeAttribute",
		        value: function removeAttribute(attr) {
		            return this.attributes.delete(attr.name);
		        }
		    }]);
		
		    return AttributeManager;
		}();
		
		exports.default = AttributeManager;
	
	/***/ },
	/* 2 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _GrimoireInterface = __webpack_require__(3);
		
		var _GrimoireInterface2 = _interopRequireDefault(_GrimoireInterface);
		
		var _NSIdentity = __webpack_require__(11);
		
		var _NSIdentity2 = _interopRequireDefault(_NSIdentity);
		
		var _NSDictionary = __webpack_require__(12);
		
		var _NSDictionary2 = _interopRequireDefault(_NSDictionary);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		 * Provides static methods to ensure arguments are valid type.
		 */
		var Ensure = function () {
		    function Ensure() {
		        _classCallCheck(this, Ensure);
		    }
		
		    _createClass(Ensure, null, [{
		        key: "ensureString",
		
		        /**
		         * Ensure specified str being string
		         * @param  {string | number}      str [description]
		         * @return {string}      [description]
		         */
		        value: function ensureString(str) {
		            if (typeof str === "string") {
		                return str;
		            } else if (typeof str === "number") {
		                return str.toString();
		            } else {
		                throw new Error("Specified argument can not convert into string");
		            }
		        }
		        /**
		         * Ensure specified number being number
		         * @param  {string | number}      str [description]
		         * @return {string}      [description]
		         */
		
		    }, {
		        key: "ensureNumber",
		        value: function ensureNumber(num) {
		            if (typeof num === "string") {
		                return parseInt(num, 10);
		            } else if (typeof num === "number") {
		                return num;
		            } else {
		                throw new Error("specified argument can not be converted into number");
		            }
		        }
		    }, {
		        key: "ensureTobeNSIdentity",
		        value: function ensureTobeNSIdentity(name) {
		            if (!name) {
		                return undefined;
		            }
		            if (typeof name === "string") {
		                if (name.indexOf("|") !== -1) {
		                    return _NSIdentity2.default.fromFQN(name);
		                }
		                return _NSIdentity2.default.from(name);
		            } else {
		                return name;
		            }
		        }
		    }, {
		        key: "ensureTobeNSIdentityArray",
		        value: function ensureTobeNSIdentityArray(names) {
		            if (!names) {
		                return [];
		            }
		            var newArr = [];
		            for (var i = 0; i < names.length; i++) {
		                newArr.push(this.ensureTobeNSIdentity(names[i]));
		            }
		            return newArr;
		        }
		    }, {
		        key: "ensureTobeNSDictionary",
		        value: function ensureTobeNSDictionary(dict) {
		            if (!dict) {
		                return new _NSDictionary2.default();
		            }
		            if (dict instanceof _NSDictionary2.default) {
		                return dict;
		            } else {
		                var newDict = new _NSDictionary2.default();
		                for (var key in dict) {
		                    newDict.set(_NSIdentity2.default.from(key), dict[key]);
		                }
		                return newDict;
		            }
		        }
		    }, {
		        key: "ensureTobeMessage",
		        value: function ensureTobeMessage(message) {
		            if (message.startsWith("$")) {
		                if (message.startsWith("$$")) {
		                    return message;
		                } else {
		                    return "$" + message;
		                }
		            } else {
		                return "$$" + message;
		            }
		        }
		    }, {
		        key: "ensureTobeComponentConstructor",
		        value: function ensureTobeComponentConstructor(c) {
		            if (typeof c === "function") {
		                return c;
		            } else {
		                var dec = _GrimoireInterface2.default.componentDeclarations.get(c);
		                if (dec) {
		                    return dec.ctor;
		                }
		                return null;
		            }
		        }
		    }]);
		
		    return Ensure;
		}();
		
		exports.default = Ensure;
	
	/***/ },
	/* 3 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _GrimoireInterfaceImpl = __webpack_require__(4);
		
		var _GrimoireInterfaceImpl2 = _interopRequireDefault(_GrimoireInterfaceImpl);
		
		var _GomlInterface = __webpack_require__(28);
		
		var _GomlInterface2 = _interopRequireDefault(_GomlInterface);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		var context = new _GrimoireInterfaceImpl2.default();
		var obtainGomlInterface = function obtainGomlInterface(query) {
		    if (typeof query === "string") {
		        // return GomlInterfaceGenerator(context.queryRootNodes(query));
		        var gomlContext = new _GomlInterface2.default(context.queryRootNodes(query));
		        var queryFunc = gomlContext.queryFunc.bind(gomlContext);
		        Object.setPrototypeOf(queryFunc, gomlContext);
		        return queryFunc;
		    } else if (typeof query === "function") {
		        context.initializedEventHandler.push(query);
		    } else {
		        var _gomlContext = new _GomlInterface2.default(query);
		        var _queryFunc = _gomlContext.queryFunc.bind(_gomlContext);
		        Object.setPrototypeOf(_queryFunc, _gomlContext);
		        return _queryFunc;
		    }
		};
		// const bindedFunction = obtainGomlInterface.bind(context);
		Object.setPrototypeOf(obtainGomlInterface, context);
		exports.default = obtainGomlInterface;
	
	/***/ },
	/* 4 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _GomlLoader = __webpack_require__(5);
		
		var _GomlLoader2 = _interopRequireDefault(_GomlLoader);
		
		var _EnumConverter = __webpack_require__(20);
		
		var _EnumConverter2 = _interopRequireDefault(_EnumConverter);
		
		var _NumberArrayConverter = __webpack_require__(21);
		
		var _NumberArrayConverter2 = _interopRequireDefault(_NumberArrayConverter);
		
		var _ComponentConverter = __webpack_require__(22);
		
		var _ComponentConverter2 = _interopRequireDefault(_ComponentConverter);
		
		var _NumberConverter = __webpack_require__(24);
		
		var _NumberConverter2 = _interopRequireDefault(_NumberConverter);
		
		var _ObjectConverter = __webpack_require__(25);
		
		var _ObjectConverter2 = _interopRequireDefault(_ObjectConverter);
		
		var _ArrayConverter = __webpack_require__(26);
		
		var _ArrayConverter2 = _interopRequireDefault(_ArrayConverter);
		
		var _NodeInterface = __webpack_require__(27);
		
		var _NodeInterface2 = _interopRequireDefault(_NodeInterface);
		
		var _Utility = __webpack_require__(13);
		
		var _Utility2 = _interopRequireDefault(_Utility);
		
		var _GomlInterface = __webpack_require__(28);
		
		var _GomlInterface2 = _interopRequireDefault(_GomlInterface);
		
		var _BooleanConverter = __webpack_require__(29);
		
		var _BooleanConverter2 = _interopRequireDefault(_BooleanConverter);
		
		var _GrimoireComponent = __webpack_require__(30);
		
		var _GrimoireComponent2 = _interopRequireDefault(_GrimoireComponent);
		
		var _StringArrayConverter = __webpack_require__(31);
		
		var _StringArrayConverter2 = _interopRequireDefault(_StringArrayConverter);
		
		var _StringConverter = __webpack_require__(32);
		
		var _StringConverter2 = _interopRequireDefault(_StringConverter);
		
		var _Constants = __webpack_require__(9);
		
		var _Constants2 = _interopRequireDefault(_Constants);
		
		var _ComponentDeclaration = __webpack_require__(8);
		
		var _ComponentDeclaration2 = _interopRequireDefault(_ComponentDeclaration);
		
		var _Component = __webpack_require__(23);
		
		var _Component2 = _interopRequireDefault(_Component);
		
		var _NSSet = __webpack_require__(33);
		
		var _NSSet2 = _interopRequireDefault(_NSSet);
		
		var _NodeDeclaration = __webpack_require__(34);
		
		var _NodeDeclaration2 = _interopRequireDefault(_NodeDeclaration);
		
		var _NSIdentity = __webpack_require__(11);
		
		var _NSIdentity2 = _interopRequireDefault(_NSIdentity);
		
		var _NSDictionary = __webpack_require__(12);
		
		var _NSDictionary2 = _interopRequireDefault(_NSDictionary);
		
		var _Ensure = __webpack_require__(2);
		
		var _Ensure2 = _interopRequireDefault(_Ensure);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
		    return new (P || (P = Promise))(function (resolve, reject) {
		        function fulfilled(value) {
		            try {
		                step(generator.next(value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function rejected(value) {
		            try {
		                step(generator["throw"](value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function step(result) {
		            result.done ? resolve(result.value) : new P(function (resolve) {
		                resolve(result.value);
		            }).then(fulfilled, rejected);
		        }
		        step((generator = generator.apply(thisArg, _arguments || [])).next());
		    });
		};
		
		var GrimoireInterfaceImpl = function () {
		    function GrimoireInterfaceImpl() {
		        _classCallCheck(this, GrimoireInterfaceImpl);
		
		        this.nodeDeclarations = new _NSDictionary2.default();
		        this.converters = new _NSDictionary2.default();
		        this.componentDeclarations = new _NSDictionary2.default();
		        this.rootNodes = {};
		        this.loadTasks = [];
		        this.lib = {};
		        this.nodeDictionary = {};
		        this.componentDictionary = {};
		        this.debug = true;
		    }
		
		    _createClass(GrimoireInterfaceImpl, [{
		        key: "ns",
		
		        /**
		         * Generate namespace helper function
		         * @param  {string} ns namespace URI to be used
		         * @return {[type]}    the namespaced identity
		         */
		        value: function ns(_ns) {
		            return function (name) {
		                return _NSIdentity2.default.from(_ns, name);
		            };
		        }
		    }, {
		        key: "initialize",
		        value: function initialize() {
		            this.registerConverter("String", _StringConverter2.default);
		            this.registerConverter("StringArray", _StringArrayConverter2.default);
		            this.registerConverter("Boolean", _BooleanConverter2.default);
		            this.registerConverter("Array", _ArrayConverter2.default);
		            this.registerConverter("Object", _ObjectConverter2.default);
		            this.registerConverter(_EnumConverter2.default);
		            this.registerConverter("Number", _NumberConverter2.default);
		            this.registerConverter("Component", _ComponentConverter2.default);
		            this.registerConverter("NumberArray", _NumberArrayConverter2.default);
		            this.registerComponent("GrimoireComponent", _GrimoireComponent2.default);
		            this.registerNode("grimoire-node-base", ["GrimoireComponent"]);
		        }
		        /**
		         * Register plugins
		         * @param  {(}      loadTask [description]
		         * @return {[type]}          [description]
		         */
		
		    }, {
		        key: "register",
		        value: function register(loadTask) {
		            this.loadTasks.push(loadTask);
		        }
		    }, {
		        key: "resolvePlugins",
		        value: function resolvePlugins() {
		            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
		                var i;
		                return regeneratorRuntime.wrap(function _callee$(_context) {
		                    while (1) {
		                        switch (_context.prev = _context.next) {
		                            case 0:
		                                i = 0;
		
		                            case 1:
		                                if (!(i < this.loadTasks.length)) {
		                                    _context.next = 7;
		                                    break;
		                                }
		
		                                _context.next = 4;
		                                return this.loadTasks[i]();
		
		                            case 4:
		                                i++;
		                                _context.next = 1;
		                                break;
		
		                            case 7:
		                            case "end":
		                                return _context.stop();
		                        }
		                    }
		                }, _callee, this);
		            }));
		        }
		        /**
		         * register custom component
		         * @param  {string                |   NSIdentity} name          [description]
		         * @param  {IAttributeDeclaration }} attributes           [description]
		         * @param  {Object                |   (new                 (}           obj           [description]
		         * @return {[type]}                       [description]
		         */
		
		    }, {
		        key: "registerComponent",
		        value: function registerComponent(name, obj, superComponent) {
		            name = _Ensure2.default.ensureTobeNSIdentity(name);
		            if (this.componentDeclarations.get(name)) {
		                throw new Error("component " + name.fqn + " is already registerd.");
		            }
		            if (this.debug && !_Utility2.default.isCamelCase(name.name)) {
		                console.warn("component " + name.name + " is registerd. but,it should be 'CamelCase'.");
		            }
		            var superCtor = void 0;
		            if (superComponent) {
		                superCtor = this._ensureNameTobeConstructor(superComponent);
		                if (!superCtor) {
		                    throw new Error(superComponent + " is not exist.");
		                }
		            }
		            obj = this._ensureTobeComponentConstructor(obj, superCtor);
		            var ctor = this._ensureTobeComponentConstructor(obj, superCtor);
		            var attrs = ctor["attributes"] || {};
		            for (var key in attrs) {
		                if (attrs[key].default === void 0) {
		                    throw new Error("default value of attribute " + key + " in " + name.fqn + " must be not 'undefined'.");
		                }
		            }
		            var dec = new _ComponentDeclaration2.default(name, attrs, ctor);
		            this.componentDeclarations.set(name, dec);
		            return dec;
		        }
		    }, {
		        key: "registerNode",
		        value: function registerNode(name, requiredComponents, defaults, superNode, freezeAttributes) {
		            name = _Ensure2.default.ensureTobeNSIdentity(name);
		            if (this.nodeDeclarations.get(name)) {
		                throw new Error("gomlnode " + name.fqn + " is already registerd.");
		            }
		            if (this.debug && !_Utility2.default.isSnakeCase(name.name)) {
		                console.warn("node " + name.name + " is registerd. but,it should be 'snake-case'.");
		            }
		            requiredComponents = _Ensure2.default.ensureTobeNSIdentityArray(requiredComponents);
		            defaults = _Ensure2.default.ensureTobeNSDictionary(defaults);
		            superNode = _Ensure2.default.ensureTobeNSIdentity(superNode);
		            this.nodeDeclarations.set(name, new _NodeDeclaration2.default(name, _NSSet2.default.fromArray(requiredComponents), defaults, superNode, freezeAttributes));
		        }
		    }, {
		        key: "getCompanion",
		        value: function getCompanion(scriptTag) {
		            var root = this.getRootNode(scriptTag);
		            if (root) {
		                return root.companion;
		            } else {
		                throw new Error("scriptTag is not goml");
		            }
		        }
		    }, {
		        key: "addRootNode",
		        value: function addRootNode(tag, rootNode) {
		            if (!rootNode) {
		                throw new Error("can not register null to rootNodes.");
		            }
		            tag.setAttribute("x-rootNodeId", rootNode.id);
		            this.rootNodes[rootNode.id] = rootNode;
		            rootNode.companion.set(this.ns(_Constants2.default.defaultNamespace)("scriptElement"), tag);
		            // awake and mount tree.
		            rootNode.setMounted(true);
		            rootNode.broadcastMessage("treeInitialized", {
		                ownerScriptTag: tag,
		                id: rootNode.id
		            });
		            rootNode.sendInitializedMessage({
		                ownerScriptTag: tag,
		                id: rootNode.id
		            });
		            return rootNode.id;
		        }
		    }, {
		        key: "getRootNode",
		        value: function getRootNode(scriptTag) {
		            var id = scriptTag.getAttribute("x-rootNodeId");
		            return this.rootNodes[id];
		        }
		    }, {
		        key: "noConflict",
		        value: function noConflict() {
		            window["gr"] = this.noConflictPreserve;
		        }
		    }, {
		        key: "queryRootNodes",
		        value: function queryRootNodes(query) {
		            var scriptTags = document.querySelectorAll(query);
		            var nodes = [];
		            for (var i = 0; i < scriptTags.length; i++) {
		                var node = this.getRootNode(scriptTags.item(i));
		                if (node) {
		                    nodes.push(node);
		                }
		            }
		            return nodes;
		        }
		    }, {
		        key: "registerConverter",
		        value: function registerConverter(arg1, converter) {
		            if (converter) {
		                this.registerConverter({ name: _Ensure2.default.ensureTobeNSIdentity(arg1), verify: function verify() {
		                        return true;
		                    }, convert: converter });
		                return;
		            }
		            var dec = arg1;
		            this.converters.set(_Ensure2.default.ensureTobeNSIdentity(dec.name), dec);
		        }
		    }, {
		        key: "overrideDeclaration",
		        value: function overrideDeclaration(targetDeclaration, arg2, defaults) {
		            var dec = this.nodeDeclarations.get(targetDeclaration);
		            if (!dec) {
		                throw new Error("attempt not-exist node declaration : " + _Ensure2.default.ensureTobeNSIdentity(targetDeclaration).name);
		            }
		            if (defaults) {
		                var additionalC = arg2;
		                for (var i = 0; i < additionalC.length; i++) {
		                    dec.addDefaultComponent(additionalC[i]);
		                }
		                dec.defaultAttributes.pushDictionary(_Ensure2.default.ensureTobeNSDictionary(defaults));
		            } else if (Array.isArray(arg2)) {
		                var _additionalC = arg2;
		                for (var _i = 0; _i < _additionalC.length; _i++) {
		                    dec.addDefaultComponent(_additionalC[_i]);
		                }
		            } else {
		                dec.defaultAttributes.pushDictionary(_Ensure2.default.ensureTobeNSDictionary(arg2));
		            }
		            return dec;
		        }
		        /**
		         * This method is not for users.
		         * Just for unit testing.
		         *
		         * Clear all configuration that GrimoireInterface contain.
		         */
		
		    }, {
		        key: "clear",
		        value: function clear() {
		            this.nodeDeclarations.clear();
		            this.componentDeclarations.clear();
		            this.converters.clear();
		            for (var key in this.rootNodes) {
		                delete this.rootNodes[key];
		            }
		            for (var _key in this.nodeDictionary) {
		                delete this.nodeDictionary[_key];
		            }
		            for (var _key2 in this.componentDictionary) {
		                delete this.componentDictionary[_key2];
		            }
		            this.loadTasks.splice(0, this.loadTasks.length);
		            this.initialize();
		        }
		    }, {
		        key: "extendGrimoireInterface",
		        value: function extendGrimoireInterface(name, func) {
		            if (this[name]) {
		                throw new Error("gr." + name + " can not extend.it is already exist.");
		            }
		            this[name] = func.bind(this);
		        }
		    }, {
		        key: "extendGomlInterface",
		        value: function extendGomlInterface(name, func) {
		            if (_GomlInterface2.default[name]) {
		                throw new Error("gr." + name + " can not extend.it is already exist.");
		            }
		            _GomlInterface2.default[name] = func.bind(this);
		        }
		    }, {
		        key: "extendNodeInterface",
		        value: function extendNodeInterface(name, func) {
		            if (_NodeInterface2.default[name]) {
		                throw new Error("gr." + name + " can not extend.it is already exist.");
		            }
		            _NodeInterface2.default[name] = func.bind(this);
		        }
		        /**
		         * Ensure the given object or constructor to be an constructor inherits Component;
		         * @param  {Object | (new ()=> Component} obj [The variable need to be ensured.]
		         * @return {[type]}      [The constructor inherits Component]
		         */
		
		    }, {
		        key: "_ensureTobeComponentConstructor",
		        value: function _ensureTobeComponentConstructor(obj, baseConstructor) {
		            if (typeof obj === "function") {
		                if (!(obj.prototype instanceof _Component2.default) && obj !== _Component2.default) {
		                    throw new Error("Component constructor must extends Component class.");
		                }
		                return obj;
		            } else if ((typeof obj === "undefined" ? "undefined" : _typeof(obj)) === "object") {
		                var _ret = function () {
		                    if (baseConstructor && !(baseConstructor.prototype instanceof _Component2.default)) {
		                        throw new Error("Base component comstructor must extends Compoent class.");
		                    }
		                    var ctor = baseConstructor || _Component2.default;
		                    var newCtor = function newCtor() {
		                        ctor.call(this);
		                    };
		                    var properties = {};
		                    for (var key in obj) {
		                        if (key === "attributes") {
		                            continue;
		                        }
		                        properties[key] = { value: obj[key] };
		                    }
		                    var attributes = {};
		                    for (var _key3 in ctor["attributes"]) {
		                        attributes[_key3] = ctor["attributes"][_key3];
		                    }
		                    for (var _key4 in obj["attributes"]) {
		                        attributes[_key4] = obj["attributes"][_key4];
		                    }
		                    newCtor.prototype = Object.create(ctor.prototype, properties);
		                    Object.defineProperty(newCtor, "attributes", {
		                        value: attributes
		                    });
		                    obj = newCtor;
		                    return {
		                        v: obj
		                    };
		                }();
		
		                if ((typeof _ret === "undefined" ? "undefined" : _typeof(_ret)) === "object") return _ret.v;
		            }
		            return _Component2.default;
		        }
		    }, {
		        key: "_ensureNameTobeConstructor",
		        value: function _ensureNameTobeConstructor(component) {
		            if (!component) {
		                return null;
		            }
		            if (typeof component === "function") {
		                return component;
		            } else if (typeof component === "string") {
		                return this._ensureNameTobeConstructor(_Ensure2.default.ensureTobeNSIdentity(component));
		            } else {
		                // here NSIdentity.
		                var c = this.componentDeclarations.get(component);
		                if (!c) {
		                    return null;
		                }
		                return c.ctor;
		            }
		        }
		    }, {
		        key: "initializedEventHandler",
		        get: function get() {
		            return _GomlLoader2.default.initializedEventHandlers;
		        }
		    }]);
		
		    return GrimoireInterfaceImpl;
		}();
		
		exports.default = GrimoireInterfaceImpl;
	
	/***/ },
	/* 5 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _GrimoireInterface = __webpack_require__(3);
		
		var _GrimoireInterface2 = _interopRequireDefault(_GrimoireInterface);
		
		var _GomlParser = __webpack_require__(6);
		
		var _GomlParser2 = _interopRequireDefault(_GomlParser);
		
		var _XMLReader = __webpack_require__(14);
		
		var _XMLReader2 = _interopRequireDefault(_XMLReader);
		
		var _XMLHttpRequestAsync = __webpack_require__(19);
		
		var _XMLHttpRequestAsync2 = _interopRequireDefault(_XMLHttpRequestAsync);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
		    return new (P || (P = Promise))(function (resolve, reject) {
		        function fulfilled(value) {
		            try {
		                step(generator.next(value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function rejected(value) {
		            try {
		                step(generator["throw"](value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function step(result) {
		            result.done ? resolve(result.value) : new P(function (resolve) {
		                resolve(result.value);
		            }).then(fulfilled, rejected);
		        }
		        step((generator = generator.apply(thisArg, _arguments || [])).next());
		    });
		};
		
		/**
		 * Provides the features to fetch Goml source.
		 */
		var GomlLoader = function () {
		    function GomlLoader() {
		        _classCallCheck(this, GomlLoader);
		    }
		
		    _createClass(GomlLoader, null, [{
		        key: "loadFromScriptTag",
		
		        /**
		         * Obtain the Goml source from specified tag.
		         * @param  {HTMLScriptElement} scriptTag [the script tag to load]
		         * @return {Promise<void>}               [the promise to wait for loading]
		         */
		        value: function loadFromScriptTag(scriptTag) {
		            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
		                var srcAttr, source, req, doc, rootNode;
		                return regeneratorRuntime.wrap(function _callee$(_context) {
		                    while (1) {
		                        switch (_context.prev = _context.next) {
		                            case 0:
		                                srcAttr = scriptTag.getAttribute("src");
		                                source = void 0;
		
		                                if (!srcAttr) {
		                                    _context.next = 10;
		                                    break;
		                                }
		
		                                // ignore text element
		                                req = new XMLHttpRequest();
		
		                                req.open("GET", srcAttr);
		                                _context.next = 7;
		                                return _XMLHttpRequestAsync2.default.send(req);
		
		                            case 7:
		                                source = req.responseText;
		                                _context.next = 11;
		                                break;
		
		                            case 10:
		                                source = scriptTag.text;
		
		                            case 11:
		                                doc = _XMLReader2.default.parseXML(source, "GOML");
		                                rootNode = _GomlParser2.default.parse(doc[0], null, scriptTag);
		
		                                _GrimoireInterface2.default.addRootNode(scriptTag, rootNode);
		
		                            case 14:
		                            case "end":
		                                return _context.stop();
		                        }
		                    }
		                }, _callee, this);
		            }));
		        }
		        /**
		         * Load from the script tags which will be found with specified query.
		         * @param  {string}          query [the query to find script tag]
		         * @return {Promise<void[]>}       [the promise to wait for all goml loading]
		         */
		
		    }, {
		        key: "loadFromQuery",
		        value: function loadFromQuery(query) {
		            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee2() {
		                var tags, pArray, elements, i, element;
		                return regeneratorRuntime.wrap(function _callee2$(_context2) {
		                    while (1) {
		                        switch (_context2.prev = _context2.next) {
		                            case 0:
		                                tags = document.querySelectorAll(query);
		                                pArray = [];
		                                elements = [];
		
		                                for (i = 0; i < tags.length; i++) {
		                                    element = tags.item(i);
		
		                                    elements.push(element);
		                                    pArray[i] = GomlLoader.loadFromScriptTag(element);
		                                }
		                                if (pArray.length === 0 && _GrimoireInterface2.default.debug) {
		                                    console.warn("There was no goml file detected. Have you specified `type='text/goml'` to the script tag?");
		                                }
		                                _context2.next = 7;
		                                return Promise.all(pArray);
		
		                            case 7:
		                                GomlLoader.initializedEventHandlers.forEach(function (handler) {
		                                    handler(elements);
		                                });
		
		                            case 8:
		                            case "end":
		                                return _context2.stop();
		                        }
		                    }
		                }, _callee2, this);
		            }));
		        }
		        /**
		         * Load all Goml sources contained in HTML.
		         * @return {Promise<void>} [the promise to wait for all goml loading]
		         */
		
		    }, {
		        key: "loadForPage",
		        value: function loadForPage() {
		            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee3() {
		                return regeneratorRuntime.wrap(function _callee3$(_context3) {
		                    while (1) {
		                        switch (_context3.prev = _context3.next) {
		                            case 0:
		                                _context3.next = 2;
		                                return GomlLoader.loadFromQuery('script[type="text/goml"]');
		
		                            case 2:
		                            case "end":
		                                return _context3.stop();
		                        }
		                    }
		                }, _callee3, this);
		            }));
		        }
		    }]);
		
		    return GomlLoader;
		}();
		
		GomlLoader.initializedEventHandlers = [];
		exports.default = GomlLoader;
	
	/***/ },
	/* 6 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _GomlNode = __webpack_require__(7);
		
		var _GomlNode2 = _interopRequireDefault(_GomlNode);
		
		var _GrimoireInterface = __webpack_require__(3);
		
		var _GrimoireInterface2 = _interopRequireDefault(_GrimoireInterface);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		 * Parser of Goml to Node utilities.
		 * This class do not store any nodes and goml properties.
		 */
		var GomlParser = function () {
		    function GomlParser() {
		        _classCallCheck(this, GomlParser);
		    }
		
		    _createClass(GomlParser, null, [{
		        key: "parse",
		
		        /**
		         * Domをパースする
		         * @param  {Element}           source    [description]
		         * @param  {GomlNode}          parent    あればこのノードにaddChildされる
		         * @return {GomlNode}                    ルートノード
		         */
		        value: function parse(source, parent, scriptTag) {
		            var newNode = GomlParser._createNode(source);
		            if (!newNode) {
		                // when specified node could not be found
		                console.warn("\"" + source.tagName + "\" was not parsed.");
		                return null;
		            }
		            // Parse children recursively
		            var children = source.childNodes;
		            var childNodeElements = []; // for parse after .Components has resolved.
		            if (children && children.length !== 0) {
		                var removeTarget = [];
		                for (var i = 0; i < children.length; i++) {
		                    var child = children.item(i);
		                    if (!GomlParser._isElement(child)) {
		                        removeTarget.push(child);
		                        continue;
		                    }
		                    if (this._isComponentsTag(child)) {
		                        // parse as components
		                        GomlParser._parseComponents(newNode, child);
		                        removeTarget.push(child);
		                    } else {
		                        // parse as child node.
		                        childNodeElements.push(child);
		                    }
		                }
		                // remove unused elements
		                for (var _i = 0; _i < removeTarget.length; _i++) {
		                    source.removeChild(removeTarget[_i]);
		                }
		            }
		            // generate tree
		            if (parent) {
		                parent.addChild(newNode, null, false);
		            }
		            childNodeElements.forEach(function (child) {
		                GomlParser.parse(child, newNode, null);
		            });
		            return newNode;
		        }
		        /**
		         * GomlNodeのインスタンス化。GrimoireInterfaceへの登録
		         * @param  {HTMLElement}      elem         [description]
		         * @param  {GomlConfigurator} configurator [description]
		         * @return {GomlTreeNodeBase}              [description]
		         */
		
		    }, {
		        key: "_createNode",
		        value: function _createNode(elem) {
		            var tagName = elem.localName;
		            var recipe = _GrimoireInterface2.default.nodeDeclarations.get(elem);
		            if (!recipe) {
		                throw new Error("Tag \"" + tagName + "\" is not found.");
		            }
		            return new _GomlNode2.default(recipe, elem);
		        }
		        /**
		         * .COMPONENTSのパース。
		         * @param {GomlNode} node          アタッチされるコンポーネント
		         * @param {Element}  componentsTag .COMPONENTSタグ
		         */
		
		    }, {
		        key: "_parseComponents",
		        value: function _parseComponents(node, componentsTag) {
		            var componentNodes = componentsTag.childNodes;
		            if (!componentNodes) {
		                return;
		            }
		            for (var i = 0; i < componentNodes.length; i++) {
		                var componentNode = componentNodes.item(i);
		                if (!GomlParser._isElement(componentNode)) {
		                    continue; // Skip if the node was not element
		                }
		                var componentDecl = _GrimoireInterface2.default.componentDeclarations.get(componentNode);
		                if (!componentDecl) {
		                    throw new Error("Component " + componentNode.tagName + " is not found.");
		                }
		                var component = componentDecl.generateInstance(componentNode);
		                node._addComponentDirectly(component, false);
		            }
		        }
		    }, {
		        key: "_isElement",
		        value: function _isElement(node) {
		            return node.nodeType === Node.ELEMENT_NODE;
		        }
		    }, {
		        key: "_isComponentsTag",
		        value: function _isComponentsTag(element) {
		            var regexToFindComponent = /\.COMPONENTS$/mi; // TODO might needs to fix
		            return regexToFindComponent.test(element.nodeName);
		        }
		    }]);
		
		    return GomlParser;
		}();
		
		exports.default = GomlParser;
	
	/***/ },
	/* 7 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _ComponentDeclaration = __webpack_require__(8);
		
		var _ComponentDeclaration2 = _interopRequireDefault(_ComponentDeclaration);
		
		var _AttributeManager = __webpack_require__(1);
		
		var _AttributeManager2 = _interopRequireDefault(_AttributeManager);
		
		var _Utility = __webpack_require__(13);
		
		var _Utility2 = _interopRequireDefault(_Utility);
		
		var _Constants = __webpack_require__(9);
		
		var _Constants2 = _interopRequireDefault(_Constants);
		
		var _GomlParser = __webpack_require__(6);
		
		var _GomlParser2 = _interopRequireDefault(_GomlParser);
		
		var _XMLReader = __webpack_require__(14);
		
		var _XMLReader2 = _interopRequireDefault(_XMLReader);
		
		var _GrimoireInterface = __webpack_require__(3);
		
		var _GrimoireInterface2 = _interopRequireDefault(_GrimoireInterface);
		
		var _EEObject2 = __webpack_require__(15);
		
		var _EEObject3 = _interopRequireDefault(_EEObject2);
		
		var _NodeUtility = __webpack_require__(18);
		
		var _NodeUtility2 = _interopRequireDefault(_NodeUtility);
		
		var _NSDictionary = __webpack_require__(12);
		
		var _NSDictionary2 = _interopRequireDefault(_NSDictionary);
		
		var _NSIdentity = __webpack_require__(11);
		
		var _NSIdentity2 = _interopRequireDefault(_NSIdentity);
		
		var _Ensure = __webpack_require__(2);
		
		var _Ensure2 = _interopRequireDefault(_Ensure);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var GomlNode = function (_EEObject) {
		    _inherits(GomlNode, _EEObject);
		
		    /**
		     * create new instance.
		     * @param  {NodeDeclaration} recipe  作成するノードのDeclaration
		     * @param  {Element}         element 対応するDomElement
		     * @return {[type]}                  [description]
		     */
		    function GomlNode(recipe, element) {
		        _classCallCheck(this, GomlNode);
		
		        var _this = _possibleConstructorReturn(this, (GomlNode.__proto__ || Object.getPrototypeOf(GomlNode)).call(this));
		
		        _this.children = [];
		        _this._parent = null;
		        _this._root = null;
		        _this._tree = null;
		        _this._companion = new _NSDictionary2.default();
		        _this._isActive = false;
		        _this._messageCache = {};
		        _this._deleted = false;
		        _this._mounted = false;
		        _this._enabled = true;
		        _this._defaultValueResolved = false;
		        _this._initializedInfo = null;
		        if (!recipe) {
		            throw new Error("recipe must not be null");
		        }
		        _this.nodeDeclaration = recipe;
		        _this.element = element ? element : document.createElementNS(recipe.name.ns, recipe.name.name); // TODO Could be undefined or null?
		        _this.componentsElement = document.createElement("COMPONENTS");
		        _this._root = _this;
		        _this._tree = (0, _GrimoireInterface2.default)([_this]);
		        _this._components = [];
		        _this._attributeManager = new _AttributeManager2.default(recipe.name.name, new _NSDictionary2.default());
		        _this.element.setAttribute(_Constants2.default.x_gr_id, _this.id);
		        var defaultComponentNames = recipe.defaultComponentsActual;
		        // instanciate default components
		        defaultComponentNames.forEach(function (id) {
		            _this.addComponent(id, null, true);
		        });
		        // register to GrimoireInterface.
		        _GrimoireInterface2.default.nodeDictionary[_this.id] = _this;
		        return _this;
		    }
		    /**
		     * Get actual goml node from element of xml tree.
		     * @param  {Element}  elem [description]
		     * @return {GomlNode}      [description]
		     */
		
		
		    _createClass(GomlNode, [{
		        key: "getChildrenByClass",
		
		        /**
		         * search from children node by class property.
		         * return all nodes has same class as given.
		         * @param  {string}     className [description]
		         * @return {GomlNode[]}           [description]
		         */
		        value: function getChildrenByClass(className) {
		            var nodes = this.element.getElementsByClassName(className);
		            var array = new Array(nodes.length);
		            for (var i = 0; i < nodes.length; i++) {
		                array[i] = GomlNode.fromElement(nodes.item(i));
		            }
		            return array;
		        }
		        /**
		         * search from children node by name property.
		         * return all nodes has same name as given.
		         * @param  {string}     nodeName [description]
		         * @return {GomlNode[]}          [description]
		         */
		
		    }, {
		        key: "getChildrenByNodeName",
		        value: function getChildrenByNodeName(nodeName) {
		            var nodes = this.element.getElementsByTagName(nodeName);
		            var array = new Array(nodes.length);
		            for (var i = 0; i < nodes.length; i++) {
		                array[i] = GomlNode.fromElement(nodes.item(i));
		            }
		            return array;
		        }
		    }, {
		        key: "remove",
		        value: function remove() {
		            this.children.forEach(function (c) {
		                c.remove();
		            });
		            _GrimoireInterface2.default.nodeDictionary[this.id] = null;
		            if (this._parent) {
		                this._parent.detachChild(this);
		            } else {
		                this.setMounted(false);
		                if (this.element.parentNode) {
		                    this.element.parentNode.removeChild(this.element);
		                }
		            }
		            this._sendMessageForced("$$dispose");
		            this._deleted = true;
		        }
		        /**
		         * send message to this node.
		         * invoke component method has same name as message if this node isActive.
		         * @param  {string}  message [description]
		         * @param  {any}     args    [description]
		         * @return {boolean}         is this node active.
		         */
		
		    }, {
		        key: "sendMessage",
		        value: function sendMessage(message, args) {
		            if (!this.isActive) {
		                return false;
		            }
		            message = _Ensure2.default.ensureTobeMessage(message);
		            this._sendMessage(message, args);
		            return true;
		        }
		    }, {
		        key: "broadcastMessage",
		        value: function broadcastMessage(arg1, arg2, arg3) {
		            if (!this.enabled || !this.mounted) {
		                return;
		            }
		            if (typeof arg1 === "number") {
		                var range = arg1;
		                var message = _Ensure2.default.ensureTobeMessage(arg2);
		                var args = arg3;
		                this._broadcastMessage(message, args, range);
		            } else {
		                var _message = _Ensure2.default.ensureTobeMessage(arg1);
		                var _args = arg2;
		                this._broadcastMessage(_message, _args, -1);
		            }
		        }
		    }, {
		        key: "append",
		        value: function append(tag) {
		            var _this2 = this;
		
		            var elems = _XMLReader2.default.parseXML(tag);
		            var ret = [];
		            elems.forEach(function (elem) {
		                var child = _GomlParser2.default.parse(elem, null, null);
		                _this2.addChild(child);
		                ret.push(child);
		            });
		            return ret;
		        }
		        /**
		         * add new instance created by given name and attributes for this node as child.
		         * @param {string |   NSIdentity} nodeName      [description]
		         * @param {any    }} attributes   [description]
		         */
		
		    }, {
		        key: "addChildByName",
		        value: function addChildByName(nodeName, attributes) {
		            if (typeof nodeName === "string") {
		                return this.addChildByName(_NSIdentity2.default.from(nodeName), attributes);
		            } else {
		                var nodeDec = _GrimoireInterface2.default.nodeDeclarations.get(nodeName);
		                var node = new GomlNode(nodeDec, null);
		                if (attributes) {
		                    for (var key in attributes) {
		                        var id = _Ensure2.default.ensureTobeNSIdentity(key);
		                        node.setAttribute(id, attributes[key]);
		                    }
		                }
		                this.addChild(node);
		                return node;
		            }
		        }
		        /**
		         * Add child for this node.
		         * @param {GomlNode} child            child node to add.
		         * @param {number}   index            index for insert.なければ末尾に追加
		         * @param {[type]}   elementSync=true trueのときはElementのツリーを同期させる。（Elementからパースするときはfalseにする）
		         */
		
		    }, {
		        key: "addChild",
		        value: function addChild(child, index) {
		            var elementSync = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
		
		            if (child._deleted) {
		                throw new Error("deleted node never use.");
		            }
		            if (index != null && typeof index !== "number") {
		                throw new Error("insert index should be number or null or undefined.");
		            }
		            // add process.
		            var insertIndex = index == null ? this.children.length : index;
		            this.children.splice(insertIndex, 0, child);
		            child._parent = this;
		            child._tree = this._tree;
		            child._companion = this._companion;
		            // sync html
		            if (elementSync) {
		                var referenceElement = this.element[_NodeUtility2.default.getNodeListIndexByElementIndex(this.element, insertIndex)];
		                this.element.insertBefore(child.element, referenceElement);
		            }
		            // mounting
		            if (this.mounted) {
		                child.setMounted(true);
		            }
		            // send initializedInfo if needed
		            if (this._initializedInfo) {
		                child.sendInitializedMessage(this._initializedInfo);
		            }
		        }
		    }, {
		        key: "callRecursively",
		        value: function callRecursively(func) {
		            return this._callRecursively(func, function (n) {
		                return n.children;
		            });
		        }
		        /**
		         * delete child node.
		         * @param {GomlNode} child Target node to be inserted.
		         */
		
		    }, {
		        key: "removeChild",
		        value: function removeChild(child) {
		            var node = this.detachChild(child);
		            if (node) {
		                node.remove();
		            }
		        }
		        /**
		         * detach given node from this node if target is child of this node.
		         * return null if target is not child of this node.
		         * @param  {GomlNode} child [description]
		         * @return {GomlNode}       detached node.
		         */
		
		    }, {
		        key: "detachChild",
		        value: function detachChild(target) {
		            // search child.
		            var index = this.children.indexOf(target);
		            if (index === -1) {
		                return null;
		            }
		            target.setMounted(false);
		            target._parent = null;
		            this.children.splice(index, 1);
		            // html sync
		            this.element.removeChild(target.element);
		            return target;
		        }
		        /**
		         * detach this node from parent.
		         */
		
		    }, {
		        key: "detach",
		        value: function detach() {
		            if (this.parent) {
		                this.parent.detachChild(this);
		            } else {
		                throw new Error("root Node cannot be detached.");
		            }
		        }
		        /**
		         * [[[OBSOLETE!]]]get value of attribute.
		         * @param  {string | NSIdentity}  attrName [description]
		         * @return {any}         [description]
		         */
		
		    }, {
		        key: "getValue",
		        value: function getValue(attrName) {
		            console.warn("getValue is obsolate. please use getAttribute instead of");
		            return this.getAttribute(attrName);
		        }
		    }, {
		        key: "getAttribute",
		        value: function getAttribute(attrName) {
		            return this._attributeManager.getAttribute(attrName);
		        }
		    }, {
		        key: "getAttributeRaw",
		        value: function getAttributeRaw(attrName) {
		            return this._attributeManager.attributes.get(attrName);
		        }
		    }, {
		        key: "setAttribute",
		        value: function setAttribute(attrName, value) {
		            var ignoireFreeze = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
		
		            if (!ignoireFreeze && this.isFreezeAttribute(_Ensure2.default.ensureTobeNSIdentity(attrName).name)) {
		                throw new Error("attribute " + _Ensure2.default.ensureTobeNSIdentity(attrName).name + " can not set. Attribute is frozen. ");
		            }
		            return this._attributeManager.setAttribute(attrName, value);
		        }
		        /**
		         *  Add new attribute. In most of case, users no need to call this method.
		         *  Use __addAttribute in Component should be used instead.
		         */
		
		    }, {
		        key: "addAttribute",
		        value: function addAttribute(attr) {
		            return this._attributeManager.addAttribute(attr);
		        }
		        /**
		         * Update mounted status and emit events
		         * @param {boolean} mounted Mounted status.
		         */
		
		    }, {
		        key: "setMounted",
		        value: function setMounted(mounted) {
		            if (this._mounted === mounted) {
		                return;
		            }
		            if (mounted) {
		                this._mount();
		                for (var i = 0; i < this.children.length; i++) {
		                    this.children[i].setMounted(mounted);
		                }
		            } else {
		                for (var _i = 0; _i < this.children.length; _i++) {
		                    this.children[_i].setMounted(mounted);
		                }
		                this._sendMessageForced("unmount");
		                this._isActive = false;
		                this._tree = null;
		                this._companion = null;
		                this._mounted = mounted;
		            }
		        }
		        /**
		         * Get index of this node from parent.
		         * @return {number} number of index.
		         */
		
		    }, {
		        key: "removeAttribute",
		
		        /**
		         * remove attribute from this node.
		         * @param {Attribute} attr [description]
		         */
		        value: function removeAttribute(attr) {
		            return this._attributeManager.removeAttribute(attr);
		        }
		        /**
		         * attach component to this node.
		         * @param {Component} component [description]
		         */
		
		    }, {
		        key: "addComponent",
		        value: function addComponent(component) {
		            var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
		            var isDefaultComponent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
		
		            if (typeof component === "function") {
		                var obj = _ComponentDeclaration2.default.ctorMap.find(function (o) {
		                    return o.ctor === component;
		                });
		                component = obj.name;
		            }
		            var declaration = _GrimoireInterface2.default.componentDeclarations.get(component);
		            var instance = declaration.generateInstance();
		            attributes = attributes || {};
		            for (var key in attributes) {
		                instance.setAttribute(key, attributes[key]);
		            }
		            this._addComponentDirectly(instance, isDefaultComponent);
		            return instance;
		        }
		        /**
		         * Internal use!
		         * Should not operate by users or plugin developpers
		         * @param {Component} component          [description]
		         * @param {boolean}   isDefaultComponent [description]
		         */
		
		    }, {
		        key: "_addComponentDirectly",
		        value: function _addComponentDirectly(component, isDefaultComponent) {
		            var _this3 = this;
		
		            if (component.node || component.disposed) {
		                throw new Error("component never change attached node");
		            }
		            // resetting cache
		            this._messageCache = {}; // TODO: optimize.
		            //
		            component.isDefaultComponent = !!isDefaultComponent;
		            component.node = this;
		            var referenceElement = this.componentsElement[_NodeUtility2.default.getNodeListIndexByElementIndex(this.componentsElement, this._components.length)];
		            this.componentsElement.insertBefore(component.element, referenceElement);
		            // bind this for message reciever.
		            var propNames = [];
		            var o = component;
		            while (o) {
		                propNames = propNames.concat(Object.getOwnPropertyNames(o));
		                o = Object.getPrototypeOf(o);
		            }
		            propNames.filter(function (name) {
		                return name.startsWith("$") && typeof component[name] === "function";
		            }).forEach(function (method) {
		                component["$" + method] = component[method].bind(component);
		            });
		            this._components.push(component);
		            if (isDefaultComponent) {
		                // attributes should be exposed on node
		                component.attributes.forEach(function (p) {
		                    return _this3.addAttribute(p);
		                });
		                if (this._defaultValueResolved) {
		                    component.attributes.forEach(function (p) {
		                        return p.resolveDefaultValue(_NodeUtility2.default.getAttributes(_this3.element));
		                    });
		                }
		            }
		            if (this._mounted) {
		                component.resolveDefaultAttributes(null); // here must be optional component.should not use node element attributes.
		                this._sendMessageForcedTo(component, "awake");
		                this._sendMessageForcedTo(component, "mount");
		            }
		            // sending `initialized` message if needed.
		            if (this._initializedInfo) {
		                component.initialized(this._initializedInfo);
		            }
		        }
		    }, {
		        key: "removeComponent",
		        value: function removeComponent(component) {
		            var index = this._components.indexOf(component);
		            if (index !== -1) {
		                this._sendMessageForcedTo(component, "unmount");
		                this._sendMessageForcedTo(component, "dispose");
		                this.componentsElement.removeChild(component.element);
		                this._components.splice(index, 1);
		                this._messageCache = {}; // TODO:optimize.
		                component.node = null;
		                component.disposed = true;
		                return true;
		            }
		            return false;
		        }
		    }, {
		        key: "getComponents",
		        value: function getComponents(filter) {
		            var _this4 = this;
		
		            if (!filter) {
		                return this._components;
		            } else {
		                var _ret = function () {
		                    var ctor = _Ensure2.default.ensureTobeComponentConstructor(filter);
		                    return {
		                        v: _this4._components.filter(function (c) {
		                            return c instanceof ctor;
		                        })
		                    };
		                }();
		
		                if ((typeof _ret === "undefined" ? "undefined" : _typeof(_ret)) === "object") return _ret.v;
		            }
		        }
		        /**
		         * search component by name from this node.
		         * @param  {string | NSIdentity}  name [description]
		         * @return {Component}   component found first.
		         */
		
		    }, {
		        key: "getComponent",
		        value: function getComponent(name) {
		            // 事情により<T extends Component>とはできない。
		            // これはref/Node/Componentによって参照されるのが外部ライブラリにおけるコンポーネントであるが、
		            // src/Node/Componentがこのプロジェクトにおけるコンポーネントのため、別のコンポーネントとみなされ、型の制約をみたさなくなるからである。
		            if (!name) {
		                throw new Error("name must not be null or undefined");
		            } else if (typeof name === "function") {
		                return this._components.find(function (c) {
		                    return c instanceof name;
		                }) || null;
		            } else {
		                var ctor = _Ensure2.default.ensureTobeComponentConstructor(name);
		                if (!ctor) {
		                    throw new Error("component " + name + " is not exist");
		                }
		                return this.getComponent(ctor);
		            }
		        }
		    }, {
		        key: "getComponentsInChildren",
		        value: function getComponentsInChildren(name) {
		            return this.callRecursively(function (node) {
		                return node.getComponent(name);
		            }).filter(function (c) {
		                return !!c;
		            });
		        }
		    }, {
		        key: "getComponentInAncesotor",
		        value: function getComponentInAncesotor(name) {
		            if (this.parent) {
		                return this.parent._getComponentInAncesotor(name);
		            }
		            return null;
		        }
		    }, {
		        key: "sendInitializedMessage",
		        value: function sendInitializedMessage(info) {
		            if (this._initializedInfo === info) {
		                return;
		            }
		            var components = this._components.concat();
		            for (var i = 0; i < components.length; i++) {
		                components[i].initialized(info);
		            }
		            this._initializedInfo = info;
		            var children = this.children.concat();
		            children.forEach(function (child) {
		                child.sendInitializedMessage(info);
		            });
		        }
		        /**
		         * resolve default attribute value for all component.
		         * すべてのコンポーネントの属性をエレメントかデフォルト値で初期化
		         */
		
		    }, {
		        key: "resolveAttributesValue",
		        value: function resolveAttributesValue() {
		            this._defaultValueResolved = true;
		            var attrs = _NodeUtility2.default.getAttributes(this.element);
		            for (var key in attrs) {
		                if (key === _Constants2.default.x_gr_id) {
		                    continue;
		                }
		                if (this.isFreezeAttribute(key)) {
		                    throw new Error("attribute " + key + " can not change from GOML. Attribute is frozen. ");
		                }
		            }
		            this._components.forEach(function (component) {
		                component.resolveDefaultAttributes(attrs);
		            });
		        }
		    }, {
		        key: "isFreezeAttribute",
		        value: function isFreezeAttribute(attributeName) {
		            return !!this.nodeDeclaration.freezeAttributes.find(function (name) {
		                return attributeName === name;
		            });
		        }
		    }, {
		        key: "notifyActivenessUpdate",
		        value: function notifyActivenessUpdate(activeness) {
		            if (this.isActive !== activeness) {
		                this._isActive = activeness;
		                this.children.forEach(function (child) {
		                    child.notifyActivenessUpdate(activeness && child.enabled);
		                });
		            }
		        }
		    }, {
		        key: "watch",
		        value: function watch(attrName, watcher) {
		            var immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
		
		            this._attributeManager.watch(attrName, watcher, immediate);
		        }
		    }, {
		        key: "_sendMessage",
		        value: function _sendMessage(message, args) {
		            if (this._messageCache[message] === void 0) {
		                this._messageCache[message] = this._components.filter(function (c) {
		                    return typeof c[message] === "function";
		                });
		            }
		            var targetList = this._messageCache[message];
		            for (var i = 0; i < targetList.length; i++) {
		                if (targetList[i].disposed) {
		                    continue;
		                }
		                this._sendMessageToComponent(targetList[i], message, args);
		            }
		        }
		    }, {
		        key: "_broadcastMessage",
		        value: function _broadcastMessage(message, args, range) {
		            // message is already ensured.-1 to unlimited range.
		            if (!this.isActive) {
		                return;
		            }
		            this._sendMessage(message, args);
		            if (range === 0) {
		                return;
		            }
		            var nextRange = range - 1;
		            for (var i = 0; i < this.children.length; i++) {
		                this.children[i]._broadcastMessage(message, args, nextRange);
		            }
		        }
		    }, {
		        key: "_getComponentInAncesotor",
		        value: function _getComponentInAncesotor(name) {
		            var ret = this.getComponent(name);
		            if (ret) {
		                return ret;
		            }
		            if (this.parent) {
		                return this.parent._getComponentInAncesotor(name);
		            }
		            return null;
		        }
		        /**
		         * コンポーネントにメッセージを送る。送信したらバッファからは削除される.
		         * @param  {Component} targetComponent 対象コンポーネント
		         * @param  {string}    message         メッセージ
		         * @param  {boolean}   forced          trueでコンポーネントのenableを無視して送信
		         * @param  {boolean}   toBuffer        trueで送信失敗したらバッファに追加
		         * @param  {any}       args            [description]
		         * @return {boolean}                   送信したか
		         */
		
		    }, {
		        key: "_sendMessageToComponent",
		        value: function _sendMessageToComponent(targetComponent, message, args) {
		            if (!targetComponent.enabled) {
		                return false;
		            }
		            var method = targetComponent[message];
		            if (typeof method === "function") {
		                method(args);
		                return true;
		            }
		            return false;
		        }
		    }, {
		        key: "_sendMessageForced",
		        value: function _sendMessageForced(message) {
		            var componentsBuffer = this._components.concat();
		            for (var i = 0; i < componentsBuffer.length; i++) {
		                var target = componentsBuffer[i];
		                if (target.disposed) {
		                    continue;
		                }
		                this._sendMessageForcedTo(target, message);
		            }
		        }
		        /**
		         * for system messages.
		         * @param {Component} target  [description]
		         * @param {string}    message [description]
		         */
		
		    }, {
		        key: "_sendMessageForcedTo",
		        value: function _sendMessageForcedTo(target, message) {
		            message = _Ensure2.default.ensureTobeMessage(message);
		            var method = target[message];
		            if (typeof method === "function") {
		                method();
		            }
		        }
		        /**
		         * sending mount and awake message if needed to all components.
		         */
		
		    }, {
		        key: "_mount",
		        value: function _mount() {
		            this._mounted = true;
		            var componentsBuffer = this._components.concat();
		            for (var i = 0; i < componentsBuffer.length; i++) {
		                var target = componentsBuffer[i];
		                if (target.disposed) {
		                    continue;
		                }
		                target.awake();
		                this._sendMessageForcedTo(target, "$$mount");
		            }
		        }
		    }, {
		        key: "_callRecursively",
		        value: function _callRecursively(func, nextGenerator) {
		            var val = func(this);
		            var nexts = nextGenerator(this);
		            var nextVals = nexts.map(function (c) {
		                return c.callRecursively(func);
		            });
		            var list = _Utility2.default.flat(nextVals);
		            list.unshift(val);
		            return list;
		        }
		    }, {
		        key: "name",
		
		        /**
		         * Tag name.
		         */
		        get: function get() {
		            return this.nodeDeclaration.name;
		        }
		    }, {
		        key: "attributes",
		        get: function get() {
		            return this._attributeManager.attributes;
		        }
		        /**
		         * GomlInterface that this node is bound to.
		         * throw exception if this node is not mounted.
		         * @return {IGomlInterface} [description]
		         */
		
		    }, {
		        key: "tree",
		        get: function get() {
		            if (!this.mounted) {
		                throw new Error("this node is not mounted");
		            }
		            return this._tree;
		        }
		        /**
		         * indicate this node is already deleted.
		         * if this node is deleted once, this node will not be mounted.
		         * @return {boolean} [description]
		         */
		
		    }, {
		        key: "deleted",
		        get: function get() {
		            return this._deleted;
		        }
		        /**
		         * indicate this node is enabled in tree.
		         * This value must be false when ancestor of this node is disabled.
		         * @return {boolean} [description]
		         */
		
		    }, {
		        key: "isActive",
		        get: function get() {
		            return this._isActive;
		        }
		        /**
		         * indicate this node is enabled.
		         * this node never recieve any message if this node is not enabled.
		         * @return {boolean} [description]
		         */
		
		    }, {
		        key: "enabled",
		        get: function get() {
		            return this._enabled;
		        },
		        set: function set(value) {
		            this.setAttribute("enabled", value);
		        }
		        /**
		         * the shared object by all nodes in tree.
		         * @return {NSDictionary<any>} [description]
		         */
		
		    }, {
		        key: "companion",
		        get: function get() {
		            return this._companion;
		        }
		        /**
		         * parent node of this node.
		         * if this node is root, return null.
		         * @return {GomlNode} [description]
		         */
		
		    }, {
		        key: "parent",
		        get: function get() {
		            return this._parent;
		        }
		        /**
		         * return true if this node has some child nodes.
		         * @return {boolean} [description]
		         */
		
		    }, {
		        key: "hasChildren",
		        get: function get() {
		            return this.children.length > 0;
		        }
		        /**
		         * indicate mounted status.
		         * this property to be true when treeroot registered to GrimoireInterface.
		         * to be false when this node detachd from the tree.
		         * @return {boolean} Whether this node is mounted or not.
		         */
		
		    }, {
		        key: "mounted",
		        get: function get() {
		            return this._mounted;
		        }
		    }, {
		        key: "index",
		        get: function get() {
		            if (!this._parent) {
		                return -1;
		            }
		            return this._parent.children.indexOf(this);
		        }
		    }], [{
		        key: "fromElement",
		        value: function fromElement(elem) {
		            return _GrimoireInterface2.default.nodeDictionary[elem.getAttribute(_Constants2.default.x_gr_id)];
		        }
		    }]);
		
		    return GomlNode;
		}(_EEObject3.default);
		
		exports.default = GomlNode;
	
	/***/ },
	/* 8 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Constants = __webpack_require__(9);
		
		var _Constants2 = _interopRequireDefault(_Constants);
		
		var _GrimoireInterface = __webpack_require__(3);
		
		var _GrimoireInterface2 = _interopRequireDefault(_GrimoireInterface);
		
		var _Attribute = __webpack_require__(10);
		
		var _Attribute2 = _interopRequireDefault(_Attribute);
		
		var _NSDictionary = __webpack_require__(12);
		
		var _NSDictionary2 = _interopRequireDefault(_NSDictionary);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var ComponentDeclaration = function () {
		    function ComponentDeclaration(name, attributes, ctor) {
		        _classCallCheck(this, ComponentDeclaration);
		
		        this.name = name;
		        this.attributes = attributes;
		        this.ctor = ctor;
		        ComponentDeclaration.ctorMap.push({ ctor: ctor, name: name });
		    }
		
		    _createClass(ComponentDeclaration, [{
		        key: "generateInstance",
		        value: function generateInstance(componentElement) {
		            componentElement = componentElement ? componentElement : document.createElementNS(this.name.ns, this.name.name);
		            var component = new this.ctor();
		            componentElement.setAttribute(_Constants2.default.x_gr_id, component.id);
		            _GrimoireInterface2.default.componentDictionary[component.id] = component;
		            component.name = this.name;
		            component.element = componentElement;
		            component.attributes = new _NSDictionary2.default();
		            for (var key in this.attributes) {
		                _Attribute2.default.generateAttributeForComponent(key, this.attributes[key], component);
		            }
		            return component;
		        }
		    }]);
		
		    return ComponentDeclaration;
		}();
		
		ComponentDeclaration.ctorMap = [];
		exports.default = ComponentDeclaration;
	
	/***/ },
	/* 9 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var Constants = function () {
		    function Constants() {
		        _classCallCheck(this, Constants);
		    }
		
		    _createClass(Constants, null, [{
		        key: "defaultNamespace",
		        get: function get() {
		            return "HTTP://GRIMOIRE.GL/NS/DEFAULT";
		        }
		    }, {
		        key: "x_gr_id",
		        get: function get() {
		            return "x-gr-id";
		        }
		    }]);
		
		    return Constants;
		}();
		
		exports.default = Constants;
	
	/***/ },
	/* 10 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Ensure = __webpack_require__(2);
		
		var _Ensure2 = _interopRequireDefault(_Ensure);
		
		var _NSIdentity = __webpack_require__(11);
		
		var _NSIdentity2 = _interopRequireDefault(_NSIdentity);
		
		var _GrimoireInterface = __webpack_require__(3);
		
		var _GrimoireInterface2 = _interopRequireDefault(_GrimoireInterface);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		 * Manage a attribute attached to components.
		 */
		var Attribute = function () {
		    function Attribute() {
		        _classCallCheck(this, Attribute);
		
		        this.convertContext = {};
		        /**
		         * List of functions that is listening changing values.
		         */
		        this._observers = [];
		    }
		    /**
		     * Goml tree interface which contains the component this attribute bound to.
		     * @return {IGomlInterface} [description]
		     */
		
		
		    _createClass(Attribute, [{
		        key: "watch",
		
		        /**
		         * Add event handler to observe changing this attribute.
		         * @param  {(attr: Attribute) => void} handler handler the handler you want to add.
		         * @param {boolean = false} callFirst whether that handler should be called first time.
		         */
		        value: function watch(watcher) {
		            var immedateCalls = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
		
		            this._observers.push(watcher);
		            if (immedateCalls) {
		                watcher(this.Value, undefined, this);
		            }
		        }
		        /**
		         * Remove event handler you added.
		         * @param  {Attribute} handler [description]
		         * @return {[type]}            [description]
		         */
		
		    }, {
		        key: "removeObserver",
		        value: function removeObserver(target) {
		            var index = this._observers.findIndex(function (f) {
		                return f === target;
		            });
		            if (index < 0) {
		                return;
		            }
		            this._observers.splice(index, 1);
		        }
		        /**
		         * Bind converted value to specified field.
		         * When target object was not specified, field of owner component would be assigned.
		         * @param {string} variableName [description]
		         * @param {any} targetObject [description]
		         */
		
		    }, {
		        key: "boundTo",
		        value: function boundTo(variableName) {
		            var _this = this;
		
		            var targetObject = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.component;
		
		            if (this.converter["lazy"]) {
		                targetObject.__defineGetter__(variableName, function () {
		                    return _this.Value;
		                });
		            } else {
		                (function () {
		                    var backing = void 0;
		                    _this.watch(function (v) {
		                        backing = v;
		                    }, true);
		                    targetObject.__defineGetter__(variableName, function () {
		                        return backing;
		                    });
		                })();
		            }
		            targetObject.__defineSetter__(variableName, function (val) {
		                _this.Value = val;
		            });
		        }
		        /**
		         * Apply default value to attribute from DOM values.
		         * @param {string }} domValues [description]
		         */
		
		    }, {
		        key: "resolveDefaultValue",
		        value: function resolveDefaultValue(domValues) {
		            if (this._value !== void 0) {
		                return;
		            }
		            var tagAttrValue = domValues[this.name.name];
		            if (tagAttrValue !== void 0) {
		                this.Value = tagAttrValue; // Dom指定値で解決
		                return;
		            }
		            var nodeDefaultValue = this.component.node.nodeDeclaration.defaultAttributesActual.get(this.name);
		            if (nodeDefaultValue !== void 0) {
		                this.Value = nodeDefaultValue; // Node指定値で解決
		                return;
		            }
		            this.Value = this.declaration.default;
		        }
		    }, {
		        key: "_valuate",
		        value: function _valuate(raw) {
		            var v = this.converter.convert(raw, this);
		            if (v === void 0) {
		                throw new Error("attribute " + this.name.name + " value can not be convert from " + this._value);
		            }
		            this._lastValuete = v;
		            return v;
		        }
		    }, {
		        key: "_notifyChange",
		        value: function _notifyChange(newValue) {
		            var _this2 = this;
		
		            if (!this.component.isActive) {
		                return;
		            }
		            var lastvalue = this._lastValuete;
		            this._observers.forEach(function (handler) {
		                handler(_this2.converter.convert(newValue, _this2), lastvalue, _this2);
		            });
		        }
		    }, {
		        key: "tree",
		        get: function get() {
		            return this.component.tree;
		        }
		        /**
		         * Companion map which is bounding to the component this attribute bound to.
		         * @return {NSDictionary<any>} [description]
		         */
		
		    }, {
		        key: "companion",
		        get: function get() {
		            return this.component.companion;
		        }
		        /**
		         * Get a value with specified type.
		         * @return {any} value with specified type.
		         */
		
		    }, {
		        key: "Value",
		        get: function get() {
		            if (this._value === void 0) {
		                throw new Error("attribute " + this.name.name + " value is undefined in " + this.component.node.name.name);
		            }
		            return this._valuate(this._value);
		        }
		        /**
		         * Set a value with any type.
		         * @param {any} val Value with string or specified type.
		         */
		        ,
		        set: function set(val) {
		            if (this._value === val) {
		                return;
		            }
		            this._value = val;
		            this._notifyChange(val);
		        }
		    }], [{
		        key: "convert",
		        value: function convert(converter, self, val) {
		            var cname = _Ensure2.default.ensureTobeNSIdentity(converter);
		            var conv = _GrimoireInterface2.default.converters.get(cname);
		            if (!conv) {
		                throw new Error("converter " + cname.name + " is not defined.");
		            }
		            return conv.convert(val, self);
		        }
		        /**
		         * Construct a new attribute with name of key and any value with specified type. If constant flag is true, This attribute will be immutable.
		         * If converter is not served, string converter will be set as default.
		         * @param {string}        key       Key of this attribute.
		         * @param {any}           value     Value of this attribute.
		         * @param {ConverterBase} converter Converter of this attribute.
		         * @param {boolean}       constant  Whether this attribute is immutable or not. False as default.
		         */
		
		    }, {
		        key: "generateAttributeForComponent",
		        value: function generateAttributeForComponent(name, declaration, component) {
		            var attr = new Attribute();
		            attr.name = _NSIdentity2.default.from(component.name.ns, name);
		            attr.component = component;
		            attr.declaration = declaration;
		            var converterName = _Ensure2.default.ensureTobeNSIdentity(declaration.converter);
		            attr.converter = _GrimoireInterface2.default.converters.get(converterName);
		            if (attr.converter === void 0) {
		                // When the specified converter was not found
		                throw new Error("Specified converter " + converterName.name + " was not found from registered converters.\n Component: " + attr.component.name.fqn + "\n Attribute: " + attr.name.name);
		            }
		            attr.component.attributes.set(attr.name, attr);
		            attr.converter.verify(attr);
		            return attr;
		        }
		    }]);
		
		    return Attribute;
		}();
		
		exports.default = Attribute;
	
	/***/ },
	/* 11 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Constants = __webpack_require__(9);
		
		var _Constants2 = _interopRequireDefault(_Constants);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		 * The class to identity with XML namespace feature.
		 */
		var NSIdentity = function () {
		    function NSIdentity(ns, name) {
		        _classCallCheck(this, NSIdentity);
		
		        this._ns = ns.toUpperCase();
		        this._name = name;
		        // Ensure all of the characters are uppercase
		        this._name = NSIdentity._ensureValidIdentity(this.name, true);
		        this._ns = NSIdentity._ensureValidIdentity(this.ns);
		        this._fqn = this.name + "|" + this.ns;
		        NSIdentity._instances[this._fqn] = this;
		        if (!NSIdentity._map[this.name]) {
		            NSIdentity._map[this.name] = [this];
		        } else {
		            NSIdentity._map[this.name].push(this);
		        }
		    }
		    /**
		     * Namespace of this identity
		     * @type {string}
		     */
		
		
		    _createClass(NSIdentity, [{
		        key: "ns",
		        get: function get() {
		            return this._ns;
		        }
		        /**
		         * Short name for this identity
		         * @type {string}
		         */
		
		    }, {
		        key: "name",
		        get: function get() {
		            return this._name;
		        }
		        /**
		         * Full qualified name of this identity
		         * @type {string}
		         */
		
		    }, {
		        key: "fqn",
		        get: function get() {
		            return this._fqn;
		        }
		        /**
		         * Generate an instance from Full qualified name.
		         * @param  {string}             fqn [description]
		         * @return {NSIdentity}     [description]
		         */
		
		    }], [{
		        key: "fromFQN",
		        value: function fromFQN(fqn) {
		            var inst = NSIdentity._instances[fqn];
		            if (inst) {
		                return inst;
		            }
		            var splitted = fqn.split("|");
		            if (splitted.length !== 2) {
		                throw new Error("Invalid fqn was given");
		            }
		            return new NSIdentity(splitted[1], splitted[0]);
		        }
		        /**
		         * デフォルト名前空間でID作成
		         * @param  {string}     name [description]
		         * @return {NSIdentity}      [description]
		         */
		
		    }, {
		        key: "createOnDefaultNS",
		        value: function createOnDefaultNS(name) {
		            return NSIdentity.from(_Constants2.default.defaultNamespace, name);
		        }
		    }, {
		        key: "from",
		        value: function from(arg1, name) {
		            if (name) {
		                var fqn = name + "|" + arg1.toUpperCase();
		                var inst = NSIdentity._instances[fqn];
		                if (inst) {
		                    return inst;
		                }
		                return new NSIdentity(arg1, name);
		            } else {
		                var list = NSIdentity._map[arg1];
		                if (!list) {
		                    return new NSIdentity(_Constants2.default.defaultNamespace, arg1);
		                }
		                if (list.length === 1) {
		                    return list[0];
		                }
		                throw new Error("name " + arg1 + " is ambiguous in NSIdentity." + list + " exists.");
		            }
		        }
		    }, {
		        key: "clear",
		        value: function clear() {
		            NSIdentity._instances = {};
		            NSIdentity._map = {};
		        }
		        /**
		         * Make sure given name is valid for using in identity.
		         * | is prohibited for using in name or namespace.
		         * . is prohibited for using in name.
		         * All lowercase alphabet will be transformed into uppercase.
		         * @param  {string} name        [A name to verify]
		         * @param  {[type]} noDot=false [Ensure not using dot or not]
		         * @return {string}             [Valid name]
		         */
		
		    }, {
		        key: "_ensureValidIdentity",
		        value: function _ensureValidIdentity(name) {
		            var noDot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
		
		            if (name == null) {
		                throw new Error("Specified name was null or undefined");
		            }
		            if (name.indexOf("|") > -1) {
		                throw new Error("Namespace and identity cannnot contain | ");
		            }
		            if (noDot && name.indexOf(".") > -1) {
		                throw new Error("identity cannnot contain .");
		            }
		            return name;
		        }
		    }]);
		
		    return NSIdentity;
		}();
		
		NSIdentity._instances = {};
		NSIdentity._map = {};
		exports.default = NSIdentity;
	
	/***/ },
	/* 12 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _NSIdentity = __webpack_require__(11);
		
		var _NSIdentity2 = _interopRequireDefault(_NSIdentity);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var NSDictionary = function () {
		    function NSDictionary() {
		        _classCallCheck(this, NSDictionary);
		
		        this._nameObjectMap = {};
		        this._fqnObjectMap = {};
		    }
		
		    _createClass(NSDictionary, [{
		        key: "set",
		        value: function set(key, value) {
		            if (!this._fqnObjectMap[key.fqn]) {
		                this._fqnObjectMap[key.fqn] = value;
		                var c = this._nameObjectMap[key.name];
		                if (c !== void 0) {
		                    c.push({ id: key, value: value });
		                } else {
		                    this._nameObjectMap[key.name] = [{ id: key, value: value }];
		                }
		            } else {
		                this._fqnObjectMap[key.fqn] = value;
		                var _c = this._nameObjectMap[key.name];
		                for (var i = 0; i < _c.length; i++) {
		                    if (_c[i].id.fqn === key.fqn) {
		                        _c[i] = { id: key, value: value };
		                        break;
		                    }
		                }
		            }
		        }
		    }, {
		        key: "delete",
		        value: function _delete(key) {
		            if (this._fqnObjectMap[key.fqn] !== void 0) {
		                delete this._fqnObjectMap[key.fqn];
		                var theMap = this._nameObjectMap[key.name];
		                for (var i = 0; i < theMap.length; i++) {
		                    if (theMap[i].id.fqn === key.fqn) {
		                        theMap.splice(i, 1);
		                        break;
		                    }
		                }
		                return true;
		            }
		            return false;
		        }
		    }, {
		        key: "get",
		        value: function get(arg1, name) {
		            if (!arg1) {
		                throw new Error("NSDictionary.get() can not recieve args null or undefined.");
		            }
		            if (typeof arg1 === "string") {
		                if (name) {
		                    return this.fromFQN(name + "|" + arg1.toUpperCase());
		                } else {
		                    var namedMap = this._nameObjectMap[arg1];
		                    if (!namedMap) {
		                        return null;
		                    }
		                    if (namedMap.length === 1) {
		                        return namedMap[0].value;
		                    } else {
		                        throw new Error("Specified tag name " + arg1 + " is ambigious to identify.");
		                    }
		                }
		            } else {
		                if (arg1 instanceof _NSIdentity2.default) {
		                    return this.fromFQN(arg1.fqn);
		                } else {
		                    if (arg1.prefix) {
		                        return this.get(_NSIdentity2.default.from(arg1.namespaceURI, arg1.localName));
		                    } else {
		                        if (arg1.namespaceURI && this._fqnObjectMap[arg1.localName + "|" + arg1.namespaceURI] !== void 0) {
		                            return this.get(_NSIdentity2.default.from(arg1.namespaceURI, arg1.localName));
		                        }
		                        if (arg1 && arg1.ownerElement && arg1.ownerElement.namespaceURI && this._fqnObjectMap[arg1.localName + "|" + arg1.ownerElement.namespaceURI] !== void 0) {
		                            return this.get(_NSIdentity2.default.from(arg1.ownerElement.namespaceURI, arg1.localName));
		                        }
		                        return this.get(arg1.localName);
		                    }
		                }
		            }
		        }
		    }, {
		        key: "fromFQN",
		        value: function fromFQN(fqn) {
		            return this._fqnObjectMap[fqn];
		        }
		    }, {
		        key: "isAmbigious",
		        value: function isAmbigious(name) {
		            return this._nameObjectMap[name].length > 1;
		        }
		    }, {
		        key: "has",
		        value: function has(name) {
		            return this._nameObjectMap[name] !== void 0;
		        }
		    }, {
		        key: "pushDictionary",
		        value: function pushDictionary(dict) {
		            var _this = this;
		
		            dict.forEach(function (value, keyFQN) {
		                var id = _NSIdentity2.default.fromFQN(keyFQN);
		                _this.set(id, value);
		            });
		            return this;
		        }
		    }, {
		        key: "toArray",
		        value: function toArray() {
		            var _this2 = this;
		
		            var ret = [];
		            Object.keys(this._fqnObjectMap).forEach(function (key) {
		                ret.push(_this2._fqnObjectMap[key]);
		            });
		            return ret;
		        }
		    }, {
		        key: "clone",
		        value: function clone() {
		            var dict = new NSDictionary();
		            return dict.pushDictionary(this);
		        }
		    }, {
		        key: "forEach",
		        value: function forEach(callback) {
		            var _this3 = this;
		
		            Object.keys(this._fqnObjectMap).forEach(function (key) {
		                callback(_this3._fqnObjectMap[key], key);
		            });
		            return this;
		        }
		    }, {
		        key: "map",
		        value: function map(callback) {
		            var ret = new NSDictionary();
		            this.forEach(function (val, fqn) {
		                var id = _NSIdentity2.default.fromFQN(fqn);
		                ret.set(id, callback(val, fqn));
		            });
		            return ret;
		        }
		    }, {
		        key: "clear",
		        value: function clear() {
		            this._nameObjectMap = {};
		            this._fqnObjectMap = {};
		        }
		    }]);
		
		    return NSDictionary;
		}();
		
		exports.default = NSDictionary;
	
	/***/ },
	/* 13 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _GrimoireInterface = __webpack_require__(3);
		
		var _GrimoireInterface2 = _interopRequireDefault(_GrimoireInterface);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var Utility = function () {
		    function Utility() {
		        _classCallCheck(this, Utility);
		    }
		
		    _createClass(Utility, null, [{
		        key: "w",
		        value: function w(message) {
		            if (_GrimoireInterface2.default.debug) {
		                console.warn(message);
		            }
		        }
		    }, {
		        key: "isCamelCase",
		        value: function isCamelCase(str) {
		            return (/^[A-Z][a-zA-Z0-9]*$/.test(str)
		            );
		        }
		    }, {
		        key: "isSnakeCase",
		        value: function isSnakeCase(str) {
		            return (/^[a-z0-9\-]+$/.test(str)
		            );
		        }
		    }, {
		        key: "flat",
		        value: function flat(array) {
		            var count = 0;
		            for (var i = 0; i < array.length; i++) {
		                count += array[i].length;
		            }
		            var ret = new Array(count);
		            count = 0;
		            for (var _i = 0; _i < array.length; _i++) {
		                var ar = array[_i];
		                for (var j = 0; j < ar.length; j++) {
		                    ret[count] = ar[j];
		                    count++;
		                }
		            }
		            return ret;
		        }
		    }, {
		        key: "flatMap",
		        value: function flatMap(source, map) {
		            var c = new Array(source.length);
		            for (var i = 0; i < source.length; i++) {
		                c[i] = map(source[i]);
		            }
		            return Utility.flat(c);
		        }
		    }, {
		        key: "sum",
		        value: function sum(array) {
		            var total = 0;
		            for (var i = 0; i < array.length; i++) {
		                total += array[i];
		            }
		            return total;
		        }
		    }, {
		        key: "remove",
		        value: function remove(array, target) {
		            var index = -1;
		            for (var i = 0; i < array.length; i++) {
		                if (target === array[i]) {
		                    index = i;
		                    break;
		                }
		            }
		            if (index < 0) {
		                return false;
		            }
		            array.splice(index, 1);
		            return true;
		        }
		    }]);
		
		    return Utility;
		}();
		
		exports.default = Utility;
	
	/***/ },
	/* 14 */
	/***/ function(module, exports) {
	
		'use strict';
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		 * Provides safe xml read feature.
		 */
		var XMLReader = function () {
		    function XMLReader() {
		        _classCallCheck(this, XMLReader);
		    }
		
		    _createClass(XMLReader, null, [{
		        key: 'parseXML',
		        value: function parseXML(doc, rootElementName) {
		            var isParseError = function isParseError(parsedDocument) {
		                var defaultError = console.error;
		                console.error = function () {}; //disable error message!
		                var errorneousParse = XMLReader._parser.parseFromString('<', 'text/xml');
		                delete console.error; //restore...
		                console.error = defaultError;
		                if (errorneousParse.documentURI === void 0) {
		                    return false;
		                }
		                var parsererrorNS = errorneousParse.getElementsByTagName("parsererror").item(0).namespaceURI;
		                if (parsererrorNS === 'http://www.w3.org/1999/xhtml') {
		                    return parsedDocument.getElementsByTagName("parsererror").length > 0;
		                }
		                return parsedDocument.getElementsByTagNameNS(parsererrorNS, 'parsererror').length > 0;
		            };
		            var parsed = XMLReader._parser.parseFromString(doc, "text/xml");
		            if (isParseError(parsed)) {
		                throw new Error('Error parsing XML');
		            }
		            if (rootElementName) {
		                if (parsed.documentElement.tagName.toUpperCase() !== rootElementName.toUpperCase()) {
		                    throw new Error("Specified document is invalid.");
		                } // TODO should throw more detail error
		            }
		            return [parsed.documentElement]; // TODO: implenent!
		        }
		    }, {
		        key: 'getElements',
		        value: function getElements(elem, name) {
		            var result = [];
		            var elems = elem.getElementsByTagName(name);
		            for (var i = 0; i < elems.length; i++) {
		                result.push(elems.item(i));
		            }
		            return result;
		        }
		    }, {
		        key: 'getSingleElement',
		        value: function getSingleElement(elem, name, mandatory) {
		            var result = XMLReader.getElements(elem, name);
		            if (result.length === 1) {
		                return result[0];
		            } else if (result.length === 0) {
		                if (mandatory) {
		                    throw new Error('The mandatory element ' + name + ' was required, but not found');
		                } else {
		                    return null;
		                }
		            } else {
		                throw new Error('The element ' + name + ' requires to exist in single. But there is ' + result.length + ' count of elements');
		            }
		        }
		    }, {
		        key: 'getAttribute',
		        value: function getAttribute(elem, name, mandatory) {
		            var result = elem.attributes.getNamedItem(name);
		            if (result) {
		                return result.value;
		            } else if (mandatory) {
		                throw new Error('The mandatory attribute ' + name + ' was required, but it was not found');
		            } else {
		                return null;
		            }
		        }
		    }, {
		        key: 'getAttributeFloat',
		        value: function getAttributeFloat(elem, name, mandatory) {
		            var resultStr = XMLReader.getAttribute(elem, name, mandatory);
		            return parseFloat(resultStr);
		        }
		    }, {
		        key: 'getAttributeInt',
		        value: function getAttributeInt(elem, name, mandatory) {
		            var resultStr = XMLReader.getAttribute(elem, name, mandatory);
		            return parseInt(resultStr, 10);
		        }
		    }, {
		        key: 'getChildElements',
		        value: function getChildElements(elem) {
		            var children = elem.childNodes;
		            var result = [];
		            for (var i = 0; i < children.length; i++) {
		                if (children.item(i) instanceof Element) {
		                    result.push(children.item(i));
		                }
		            }
		            return result;
		        }
		    }, {
		        key: 'getAttributes',
		        value: function getAttributes(elem, ns) {
		            var result = {};
		            var attrs = elem.attributes;
		            for (var i = 0; i < attrs.length; i++) {
		                var attr = attrs.item(i);
		                if (!ns || attr.namespaceURI === ns) {
		                    result[attr.localName] = attr.value;
		                }
		            }
		            return result;
		        }
		    }]);
		
		    return XMLReader;
		}();
		
		XMLReader._parser = new DOMParser();
		exports.default = XMLReader;
	
	/***/ },
	/* 15 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _events = __webpack_require__(16);
		
		var _IDObject2 = __webpack_require__(17);
		
		var _IDObject3 = _interopRequireDefault(_IDObject2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * EventEmitterをmixinしたIDObject
		 */
		var EEObject = function (_IDObject) {
		    _inherits(EEObject, _IDObject);
		
		    function EEObject() {
		        _classCallCheck(this, EEObject);
		
		        return _possibleConstructorReturn(this, (EEObject.__proto__ || Object.getPrototypeOf(EEObject)).call(this));
		    }
		
		    return EEObject;
		}(_IDObject3.default);
		
		function applyMixins(derivedCtor, baseCtors) {
		    baseCtors.forEach(function (baseCtor) {
		        Object.getOwnPropertyNames(baseCtor.prototype).forEach(function (name) {
		            derivedCtor.prototype[name] = baseCtor.prototype[name];
		        });
		    });
		}
		applyMixins(EEObject, [_events.EventEmitter]);
		exports.default = EEObject;
	
	/***/ },
	/* 16 */
	/***/ function(module, exports) {
	
		// Copyright Joyent, Inc. and other Node contributors.
		//
		// Permission is hereby granted, free of charge, to any person obtaining a
		// copy of this software and associated documentation files (the
		// "Software"), to deal in the Software without restriction, including
		// without limitation the rights to use, copy, modify, merge, publish,
		// distribute, sublicense, and/or sell copies of the Software, and to permit
		// persons to whom the Software is furnished to do so, subject to the
		// following conditions:
		//
		// The above copyright notice and this permission notice shall be included
		// in all copies or substantial portions of the Software.
		//
		// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
		// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
		// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
		// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
		// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
		// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
		// USE OR OTHER DEALINGS IN THE SOFTWARE.
		
		function EventEmitter() {
		  this._events = this._events || {};
		  this._maxListeners = this._maxListeners || undefined;
		}
		module.exports = EventEmitter;
		
		// Backwards-compat with node 0.10.x
		EventEmitter.EventEmitter = EventEmitter;
		
		EventEmitter.prototype._events = undefined;
		EventEmitter.prototype._maxListeners = undefined;
		
		// By default EventEmitters will print a warning if more than 10 listeners are
		// added to it. This is a useful default which helps finding memory leaks.
		EventEmitter.defaultMaxListeners = 10;
		
		// Obviously not all Emitters should be limited to 10. This function allows
		// that to be increased. Set to zero for unlimited.
		EventEmitter.prototype.setMaxListeners = function(n) {
		  if (!isNumber(n) || n < 0 || isNaN(n))
		    throw TypeError('n must be a positive number');
		  this._maxListeners = n;
		  return this;
		};
		
		EventEmitter.prototype.emit = function(type) {
		  var er, handler, len, args, i, listeners;
		
		  if (!this._events)
		    this._events = {};
		
		  // If there is no 'error' event listener then throw.
		  if (type === 'error') {
		    if (!this._events.error ||
		        (isObject(this._events.error) && !this._events.error.length)) {
		      er = arguments[1];
		      if (er instanceof Error) {
		        throw er; // Unhandled 'error' event
		      } else {
		        // At least give some kind of context to the user
		        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
		        err.context = er;
		        throw err;
		      }
		    }
		  }
		
		  handler = this._events[type];
		
		  if (isUndefined(handler))
		    return false;
		
		  if (isFunction(handler)) {
		    switch (arguments.length) {
		      // fast cases
		      case 1:
		        handler.call(this);
		        break;
		      case 2:
		        handler.call(this, arguments[1]);
		        break;
		      case 3:
		        handler.call(this, arguments[1], arguments[2]);
		        break;
		      // slower
		      default:
		        args = Array.prototype.slice.call(arguments, 1);
		        handler.apply(this, args);
		    }
		  } else if (isObject(handler)) {
		    args = Array.prototype.slice.call(arguments, 1);
		    listeners = handler.slice();
		    len = listeners.length;
		    for (i = 0; i < len; i++)
		      listeners[i].apply(this, args);
		  }
		
		  return true;
		};
		
		EventEmitter.prototype.addListener = function(type, listener) {
		  var m;
		
		  if (!isFunction(listener))
		    throw TypeError('listener must be a function');
		
		  if (!this._events)
		    this._events = {};
		
		  // To avoid recursion in the case that type === "newListener"! Before
		  // adding it to the listeners, first emit "newListener".
		  if (this._events.newListener)
		    this.emit('newListener', type,
		              isFunction(listener.listener) ?
		              listener.listener : listener);
		
		  if (!this._events[type])
		    // Optimize the case of one listener. Don't need the extra array object.
		    this._events[type] = listener;
		  else if (isObject(this._events[type]))
		    // If we've already got an array, just append.
		    this._events[type].push(listener);
		  else
		    // Adding the second element, need to change to array.
		    this._events[type] = [this._events[type], listener];
		
		  // Check for listener leak
		  if (isObject(this._events[type]) && !this._events[type].warned) {
		    if (!isUndefined(this._maxListeners)) {
		      m = this._maxListeners;
		    } else {
		      m = EventEmitter.defaultMaxListeners;
		    }
		
		    if (m && m > 0 && this._events[type].length > m) {
		      this._events[type].warned = true;
		      console.error('(node) warning: possible EventEmitter memory ' +
		                    'leak detected. %d listeners added. ' +
		                    'Use emitter.setMaxListeners() to increase limit.',
		                    this._events[type].length);
		      if (typeof console.trace === 'function') {
		        // not supported in IE 10
		        console.trace();
		      }
		    }
		  }
		
		  return this;
		};
		
		EventEmitter.prototype.on = EventEmitter.prototype.addListener;
		
		EventEmitter.prototype.once = function(type, listener) {
		  if (!isFunction(listener))
		    throw TypeError('listener must be a function');
		
		  var fired = false;
		
		  function g() {
		    this.removeListener(type, g);
		
		    if (!fired) {
		      fired = true;
		      listener.apply(this, arguments);
		    }
		  }
		
		  g.listener = listener;
		  this.on(type, g);
		
		  return this;
		};
		
		// emits a 'removeListener' event iff the listener was removed
		EventEmitter.prototype.removeListener = function(type, listener) {
		  var list, position, length, i;
		
		  if (!isFunction(listener))
		    throw TypeError('listener must be a function');
		
		  if (!this._events || !this._events[type])
		    return this;
		
		  list = this._events[type];
		  length = list.length;
		  position = -1;
		
		  if (list === listener ||
		      (isFunction(list.listener) && list.listener === listener)) {
		    delete this._events[type];
		    if (this._events.removeListener)
		      this.emit('removeListener', type, listener);
		
		  } else if (isObject(list)) {
		    for (i = length; i-- > 0;) {
		      if (list[i] === listener ||
		          (list[i].listener && list[i].listener === listener)) {
		        position = i;
		        break;
		      }
		    }
		
		    if (position < 0)
		      return this;
		
		    if (list.length === 1) {
		      list.length = 0;
		      delete this._events[type];
		    } else {
		      list.splice(position, 1);
		    }
		
		    if (this._events.removeListener)
		      this.emit('removeListener', type, listener);
		  }
		
		  return this;
		};
		
		EventEmitter.prototype.removeAllListeners = function(type) {
		  var key, listeners;
		
		  if (!this._events)
		    return this;
		
		  // not listening for removeListener, no need to emit
		  if (!this._events.removeListener) {
		    if (arguments.length === 0)
		      this._events = {};
		    else if (this._events[type])
		      delete this._events[type];
		    return this;
		  }
		
		  // emit removeListener for all listeners on all events
		  if (arguments.length === 0) {
		    for (key in this._events) {
		      if (key === 'removeListener') continue;
		      this.removeAllListeners(key);
		    }
		    this.removeAllListeners('removeListener');
		    this._events = {};
		    return this;
		  }
		
		  listeners = this._events[type];
		
		  if (isFunction(listeners)) {
		    this.removeListener(type, listeners);
		  } else if (listeners) {
		    // LIFO order
		    while (listeners.length)
		      this.removeListener(type, listeners[listeners.length - 1]);
		  }
		  delete this._events[type];
		
		  return this;
		};
		
		EventEmitter.prototype.listeners = function(type) {
		  var ret;
		  if (!this._events || !this._events[type])
		    ret = [];
		  else if (isFunction(this._events[type]))
		    ret = [this._events[type]];
		  else
		    ret = this._events[type].slice();
		  return ret;
		};
		
		EventEmitter.prototype.listenerCount = function(type) {
		  if (this._events) {
		    var evlistener = this._events[type];
		
		    if (isFunction(evlistener))
		      return 1;
		    else if (evlistener)
		      return evlistener.length;
		  }
		  return 0;
		};
		
		EventEmitter.listenerCount = function(emitter, type) {
		  return emitter.listenerCount(type);
		};
		
		function isFunction(arg) {
		  return typeof arg === 'function';
		}
		
		function isNumber(arg) {
		  return typeof arg === 'number';
		}
		
		function isObject(arg) {
		  return typeof arg === 'object' && arg !== null;
		}
		
		function isUndefined(arg) {
		  return arg === void 0;
		}
	
	
	/***/ },
	/* 17 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		 * Most based object for any Grimoire.js related classes.
		 * @type {[type]}
		 */
		var IDObject = function () {
		    _createClass(IDObject, null, [{
		        key: "getUniqueRandom",
		
		        /**
		         * Generate random string
		         * @param  {number} length length of random string
		         * @return {string}        generated string
		         */
		        value: function getUniqueRandom(length) {
		            return Math.random().toString(36).slice(-length);
		        }
		    }]);
		
		    function IDObject() {
		        _classCallCheck(this, IDObject);
		
		        this.id = IDObject.getUniqueRandom(10);
		    }
		    /**
		     * Obtain stringfied object.
		     * If this method was not overridden, this method return class name.
		     * @return {string} stringfied object
		     */
		
		
		    _createClass(IDObject, [{
		        key: "toString",
		        value: function toString() {
		            return this.getTypeName();
		        }
		        /**
		         * Obtain class name
		         * @return {string} Class name of the instance.
		         */
		
		    }, {
		        key: "getTypeName",
		        value: function getTypeName() {
		            var funcNameRegex = /function (.{1,})\(/;
		            var result = funcNameRegex.exec(this.constructor.toString());
		            return result && result.length > 1 ? result[1] : "";
		        }
		    }]);
		
		    return IDObject;
		}();
		
		exports.default = IDObject;
	
	/***/ },
	/* 18 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var NodeUtility = function () {
		    function NodeUtility() {
		        _classCallCheck(this, NodeUtility);
		    }
		
		    _createClass(NodeUtility, null, [{
		        key: "getNodeListIndexByElementIndex",
		
		        /**
		         * Get index of NodeList converted from index in Element
		         * @param  {HTMLElement} targetElement Parent element of search target elements
		         * @param  {number}      elementIndex  Index in element
		         * @return {number}                    Index in NodeList
		         */
		        value: function getNodeListIndexByElementIndex(targetElement, elementIndex) {
		            var nodeArray = Array.prototype.slice.call(targetElement.childNodes);
		            var elementArray = nodeArray.filter(function (v) {
		                return v.nodeType === 1;
		            });
		            elementIndex = elementIndex < 0 ? elementArray.length + elementIndex : elementIndex;
		            var index = nodeArray.indexOf(elementArray[elementIndex]);
		            return index === -1 ? null : index;
		        }
		    }, {
		        key: "getAttributes",
		        value: function getAttributes(element) {
		            var attributes = {};
		            var domAttr = element.attributes;
		            for (var i = 0; i < domAttr.length; i++) {
		                var attrNode = domAttr.item(i);
		                var name = attrNode.name;
		                if (name.startsWith("xmlns")) {
		                    continue;
		                }
		                attributes[name] = attrNode.value;
		            }
		            return attributes;
		        }
		    }]);
		
		    return NodeUtility;
		}();
		
		exports.default = NodeUtility;
	
	/***/ },
	/* 19 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var XMLHttpRequestAsync = function () {
		    function XMLHttpRequestAsync() {
		        _classCallCheck(this, XMLHttpRequestAsync);
		    }
		
		    _createClass(XMLHttpRequestAsync, null, [{
		        key: "send",
		        value: function send(xhr, data) {
		            return new Promise(function (resolve, reject) {
		                xhr.onload = function (e) {
		                    resolve(e);
		                };
		                xhr.onerror = function (e) {
		                    reject(e);
		                };
		                xhr.send(data);
		            });
		        }
		    }]);
		
		    return XMLHttpRequestAsync;
		}();
		
		exports.default = XMLHttpRequestAsync;
	
	/***/ },
	/* 20 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.default = {
		    name: "Enum",
		    verify: function verify(attr) {
		        if (!attr.declaration["table"]) {
		            throw new Error("Enum converter needs to be specified table in attribute dictionary");
		        }
		    },
		    convert: function convert(val, attr) {
		        if (typeof val === "number") {
		            return val;
		        }
		        if (typeof val === "string") {
		            var result = attr.declaration["table"][val];
		            if (!result) {
		                throw new Error("Specified value is not exisiting in the relation table");
		            } else {
		                return result;
		            }
		        }
		        return null;
		    }
		};
	
	/***/ },
	/* 21 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.default = NumberArrayConverter;
		function NumberArrayConverter(val) {
		    if (val instanceof Array) {
		        return val;
		    }
		    if (typeof val === "string") {
		        var splitted = val.split(",");
		        return splitted.map(function (s) {
		            return Number.parseFloat(s);
		        });
		    }
		}
	
	/***/ },
	/* 22 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _Component = __webpack_require__(23);
		
		var _Component2 = _interopRequireDefault(_Component);
		
		var _GomlNode = __webpack_require__(7);
		
		var _GomlNode2 = _interopRequireDefault(_GomlNode);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function ComponentConverter(val, attr) {
		    if (!attr.declaration["target"]) {
		        throw new Error("Component converter require to be specified target");
		    }
		    if (val === null) {
		        return null;
		    }
		    if (val instanceof _GomlNode2.default) {
		        return val.getComponent(attr.declaration["target"]);
		    } else if (val instanceof _Component2.default) {
		        if (val.name === attr.declaration["target"]) {
		            return val; // check component type?
		        } else {
		            throw new Error("Specified component must be " + attr.declaration["target"]);
		        }
		    } else {
		        var n = attr.tree(val).first();
		        if (n) {
		            return n.getComponent(attr.declaration["target"]);
		        }
		        return null;
		    }
		}
		exports.default = ComponentConverter;
	
	/***/ },
	/* 23 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Utility = __webpack_require__(13);
		
		var _Utility2 = _interopRequireDefault(_Utility);
		
		var _Constants = __webpack_require__(9);
		
		var _Constants2 = _interopRequireDefault(_Constants);
		
		var _NodeUtility = __webpack_require__(18);
		
		var _NodeUtility2 = _interopRequireDefault(_NodeUtility);
		
		var _Attribute = __webpack_require__(10);
		
		var _Attribute2 = _interopRequireDefault(_Attribute);
		
		var _IDObject2 = __webpack_require__(17);
		
		var _IDObject3 = _interopRequireDefault(_IDObject2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Base class for any components
		 */
		var Component = function (_IDObject) {
		    _inherits(Component, _IDObject);
		
		    function Component() {
		        _classCallCheck(this, Component);
		
		        /**
		         * Whether this component was created by nodeDeclaration
		         * @type {boolean}
		         */
		        var _this = _possibleConstructorReturn(this, (Component.__proto__ || Object.getPrototypeOf(Component)).apply(this, arguments));
		
		        _this.isDefaultComponent = false;
		        _this.disposed = false;
		        /**
		         * Flag that this component is activated or not.
		         * @type {boolean}
		         */
		        _this._enabled = true;
		        _this._awaked = false;
		        _this._handlers = [];
		        _this._additionalAttributesNames = [];
		        _this._initializedInfo = null;
		        return _this;
		    }
		
		    _createClass(Component, [{
		        key: "setAttribute",
		
		        /**
		         * Set value of attribute
		         * @param {string} name  [description]
		         * @param {any}    value [description]
		         */
		        value: function setAttribute(name, value) {
		            var attr = this.attributes.get(name); // TODO:check readonly?
		            if (attr) {
		                attr.Value = value;
		            }
		        }
		    }, {
		        key: "getAttribute",
		        value: function getAttribute(name) {
		            var attr = this.getAttributeRaw(name);
		            if (attr) {
		                return attr.Value;
		            } else {
		                throw new Error("attribute " + name + " is not defined in " + this.name.fqn);
		            }
		        }
		    }, {
		        key: "getAttributeRaw",
		        value: function getAttributeRaw(name) {
		            return this.attributes.get(name);
		        }
		    }, {
		        key: "addEnabledObserver",
		        value: function addEnabledObserver(observer) {
		            this._handlers.push(observer);
		        }
		    }, {
		        key: "removeEnabledObserver",
		        value: function removeEnabledObserver(observer) {
		            return _Utility2.default.remove(this._handlers, observer);
		        }
		    }, {
		        key: "resolveDefaultAttributes",
		        value: function resolveDefaultAttributes(nodeAttributes) {
		            var _this2 = this;
		
		            nodeAttributes = nodeAttributes || {};
		            if (this.isDefaultComponent) {
		                this.attributes.forEach(function (attr) {
		                    return attr.resolveDefaultValue(nodeAttributes);
		                });
		            } else {
		                (function () {
		                    var attrs = _NodeUtility2.default.getAttributes(_this2.element);
		                    for (var key in attrs) {
		                        if (key === _Constants2.default.x_gr_id) {
		                            continue;
		                        }
		                    }
		                    _this2.attributes.forEach(function (attr) {
		                        return attr.resolveDefaultValue(attrs);
		                    });
		                })();
		            }
		        }
		    }, {
		        key: "dispose",
		        value: function dispose() {
		            this.node.removeComponent(this);
		        }
		    }, {
		        key: "awake",
		        value: function awake() {
		            if (this._awaked) {
		                return false;
		            }
		            this._awaked = true;
		            var method = this["$$awake"];
		            if (typeof method === "function") {
		                method();
		            }
		            return true;
		        }
		    }, {
		        key: "initialized",
		        value: function initialized(info) {
		            if (this._initializedInfo === info) {
		                return;
		            }
		            this._initializedInfo = info;
		            var method = this["$$initialized"];
		            if (typeof method === "function") {
		                method(info);
		            }
		        }
		        /**
		         * Add attribute
		         * @param {string}                name      [description]
		         * @param {IAttributeDeclaration} attribute [description]
		         */
		
		    }, {
		        key: "__addAtribute",
		        value: function __addAtribute(name, attribute) {
		            if (!attribute) {
		                throw new Error("can not add attribute null or undefined.");
		            }
		            var attr = _Attribute2.default.generateAttributeForComponent(name, attribute, this);
		            if (this.isDefaultComponent) {
		                this.node.addAttribute(attr);
		            }
		            if (this.isDefaultComponent) {
		                attr.resolveDefaultValue(_NodeUtility2.default.getAttributes(this.node.element));
		            } else {
		                var attrs = _NodeUtility2.default.getAttributes(this.element);
		                attr.resolveDefaultValue(attrs);
		            }
		            this._additionalAttributesNames.push(attr.name);
		        }
		    }, {
		        key: "__removeAttributes",
		        value: function __removeAttributes(name) {
		            var _this3 = this;
		
		            if (name) {
		                var index = this._additionalAttributesNames.findIndex(function (id) {
		                    return id.name === name;
		                });
		                if (index < 0) {
		                    throw new Error("can not remove attributes :" + name);
		                }
		                var attrId = this._additionalAttributesNames[index];
		                if (this.isDefaultComponent) {
		                    this.node.removeAttribute(this.attributes.get(attrId));
		                }
		                this.attributes.delete(attrId);
		                this._additionalAttributesNames.splice(index, 1);
		            } else {
		                this._additionalAttributesNames.forEach(function (id) {
		                    _this3.__removeAttributes(id.name);
		                });
		            }
		        }
		    }, {
		        key: "__bindAttributes",
		        value: function __bindAttributes() {
		            this.attributes.forEach(function (attr) {
		                var name = attr.name.name;
		                attr.boundTo(name);
		            });
		        }
		    }, {
		        key: "enabled",
		        get: function get() {
		            return this._enabled;
		        },
		        set: function set(val) {
		            var _this4 = this;
		
		            if (this._enabled === val) {
		                return;
		            }
		            this._enabled = val;
		            this._handlers.forEach(function (handler) {
		                handler(_this4);
		            });
		        }
		        /**
		         * The dictionary which is shared in entire tree.
		         * @return {NSDictionary<any>} [description]
		         */
		
		    }, {
		        key: "companion",
		        get: function get() {
		            return this.node ? this.node.companion : null;
		        }
		        /**
		         * Tree interface for the tree this node is attached.
		         * @return {IGomlInterface} [description]
		         */
		
		    }, {
		        key: "tree",
		        get: function get() {
		            return this.node ? this.node.tree : null;
		        }
		    }, {
		        key: "isActive",
		        get: function get() {
		            return this.enabled && this.node && this.node.isActive;
		        }
		    }]);
		
		    return Component;
		}(_IDObject3.default);
		
		exports.default = Component;
	
	/***/ },
	/* 24 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.default = NumberConverter;
		function NumberConverter(val) {
		    if (typeof val === "number") {
		        return val;
		    } else if (typeof val === "string") {
		        return Number.parseFloat(val);
		    } else if (val === null) {
		        return null;
		    }
		}
	
	/***/ },
	/* 25 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.default = ObjectConverter;
		function ObjectConverter(val) {
		    return val;
		}
	
	/***/ },
	/* 26 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _GrimoireInterface = __webpack_require__(3);
		
		var _GrimoireInterface2 = _interopRequireDefault(_GrimoireInterface);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		var splitter = " ";
		var escape = "\\";
		function ArrayConverter(val, attr) {
		    if (!attr.declaration["type"]) {
		        throw new Error("Array converter needs to be specified type in attribute declaration.");
		    }
		    var converter = _GrimoireInterface2.default.converters.get(attr.declaration["type"]);
		    if (!converter) {
		        throw new Error("converter " + attr.declaration["type"] + " is not registerd.");
		    }
		    if (Array.isArray(val)) {
		        return val.map(function (v) {
		            return converter.convert(v, attr);
		        });
		    }
		    if (typeof val === "string") {
		        var ar = val.split(splitter);
		        for (var i = 0; i < ar.length; i++) {
		            var s = ar[i];
		            if (s[s.length - 1] === escape) {
		                if (i === ar.length - 1) {
		                    ar[i] = s.substring(0, s.length - escape.length) + splitter;
		                } else {
		                    ar[i] = s.substring(0, s.length - escape.length) + splitter + ar[i + 1];
		                    ar.splice(i + 1, 1);
		                }
		            }
		        }
		        return ar.map(function (v) {
		            return converter.convert(v, attr);
		        });
		    }
		    return null;
		}
		exports.default = ArrayConverter;
	
	/***/ },
	/* 27 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Utility = __webpack_require__(13);
		
		var _Utility2 = _interopRequireDefault(_Utility);
		
		var _XMLReader = __webpack_require__(14);
		
		var _XMLReader2 = _interopRequireDefault(_XMLReader);
		
		var _GomlParser = __webpack_require__(6);
		
		var _GomlParser2 = _interopRequireDefault(_GomlParser);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		 * 複数のノードを対象とした操作を提供するインタフェース
		 */
		var NodeInterface = function () {
		    function NodeInterface(nodes) {
		        _classCallCheck(this, NodeInterface);
		
		        this.nodes = nodes;
		        if (!nodes) {
		            throw new Error("nodes is null");
		        }
		    }
		    /**
		     * 対象となるノードの個数を取得する
		     * @return {number} [description]
		     */
		
		
		    _createClass(NodeInterface, [{
		        key: "get",
		        value: function get(i1, i2) {
		            var _this = this;
		
		            if (i1 === void 0) {
		                var first = this.first();
		                if (!first) {
		                    throw new Error("this NodeInterface is empty.");
		                } else {
		                    return first;
		                }
		            } else if (i2 === void 0) {
		                if (this.count <= i1) {
		                    throw new Error("index out of range.");
		                } else {
		                    var _ret = function () {
		                        var c = i1;
		                        var returnNode = null;
		                        _this.forEach(function (node) {
		                            if (c === 0) {
		                                returnNode = node;
		                            }
		                            c--;
		                        });
		                        return {
		                            v: returnNode
		                        };
		                    }();
		
		                    if ((typeof _ret === "undefined" ? "undefined" : _typeof(_ret)) === "object") return _ret.v;
		                }
		            } else {
		                if (this.nodes.length <= i1 || this.nodes[i1].length <= i2) {
		                    throw new Error("index out of range.");
		                } else {
		                    return this.nodes[i1][i2];
		                }
		            }
		        }
		    }, {
		        key: "getAttribute",
		        value: function getAttribute(attrName) {
		            var first = this.first();
		            if (!first) {
		                throw new Error("this NodeInterface is empty.");
		            }
		            return first.getAttribute(attrName);
		        }
		    }, {
		        key: "setAttribute",
		        value: function setAttribute(attrName, value) {
		            this.forEach(function (node) {
		                node.setAttribute(attrName, value, false);
		            });
		        }
		        /**
		         * 対象ノードにイベントリスナを追加します。
		         * @param {string}   eventName [description]
		         * @param {Function} listener  [description]
		         */
		
		    }, {
		        key: "on",
		        value: function on(eventName, listener) {
		            this.forEach(function (node) {
		                node.on(eventName, listener);
		            });
		            return this;
		        }
		        /**
		         * 対象ノードに指定したイベントリスナが登録されていれば削除します
		         * @param {string}   eventName [description]
		         * @param {Function} listener  [description]
		         */
		
		    }, {
		        key: "off",
		        value: function off(eventName, listener) {
		            this.forEach(function (node) {
		                node.removeListener(eventName, listener);
		            });
		            return this;
		        }
		        /**
		         * このノードインタフェースが対象とするノードそれぞれに、
		         * タグで指定したノードを子要素として追加します。
		         * @param {string} tag [description]
		         */
		
		    }, {
		        key: "append",
		        value: function append(tag) {
		            this.forEach(function (node) {
		                var elems = _XMLReader2.default.parseXML(tag);
		                elems.forEach(function (elem) {
		                    var child = _GomlParser2.default.parse(elem, null, null);
		                    node.addChild(child);
		                });
		            });
		            return this;
		        }
		        /**
		         * このノードインタフェースが対象とするノードをツリーから削除します。s
		         * @param {GomlNode} child [description]
		         */
		
		    }, {
		        key: "remove",
		        value: function remove() {
		            this.forEach(function (node) {
		                node.remove();
		            });
		            return this;
		        }
		        /**
		         * このノードインタフェースが対象とするノードに対して反復処理を行います
		         * @param  {GomlNode} callback [description]
		         * @return {[type]}            [description]
		         */
		
		    }, {
		        key: "forEach",
		        value: function forEach(callback) {
		            this.nodes.forEach(function (array, gomlIndex) {
		                array.forEach(function (node, nodeIndex) {
		                    callback(node, gomlIndex, nodeIndex);
		                });
		            });
		            return this;
		        }
		    }, {
		        key: "find",
		        value: function find(predicate) {
		            var nodes = this.nodes;
		            for (var i = 0; i < nodes.length; i++) {
		                var array = nodes[i];
		                for (var j = 0; j < array.length; j++) {
		                    var node = array[j];
		                    if (predicate(node, i, j)) {
		                        return node;
		                    }
		                }
		            }
		            return null;
		        }
		    }, {
		        key: "watch",
		        value: function watch(attrName, watcher) {
		            var immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
		
		            this.forEach(function (node) {
		                node.watch(attrName, watcher, immediate);
		            });
		        }
		        /**
		         * このノードインタフェースが対象とするノードを有効、または無効にします。
		         * @param {boolean} enable [description]
		         */
		
		    }, {
		        key: "setEnable",
		        value: function setEnable(enable) {
		            this.forEach(function (node) {
		                node.enabled = !!enable;
		            });
		            return this;
		        }
		        /**
		         * このノードインタフェースが対象とするノードのそれぞれの子ノードを対象とする、
		         * 新しいノードインタフェースを取得します。
		         * @return {NodeInterface} [description]
		         */
		
		    }, {
		        key: "children",
		        value: function children() {
		            var children = this.nodes.map(function (nodes) {
		                return _Utility2.default.flatMap(nodes, function (node) {
		                    return node.children;
		                });
		            });
		            return new NodeInterface(children);
		        }
		        /**
		         * 対象ノードにコンポーネントをアタッチします。
		         * @param {Component} component [description]
		         */
		
		    }, {
		        key: "addComponent",
		        value: function addComponent(componentId) {
		            var attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
		
		            this.forEach(function (node) {
		                node.addComponent(componentId, attributes);
		            });
		            return this;
		        }
		        /**
		         * 最初の対象ノードを取得する
		         * @return {GomlNode} [description]
		         */
		
		    }, {
		        key: "first",
		        value: function first() {
		            return this.find(function () {
		                return true;
		            });
		        }
		        /**
		         * 対象となる唯一のノードを取得する。
		         * 対象が存在しない、あるいは複数存在するときは例外を投げる。
		         * @return {GomlNode} [description]
		         */
		
		    }, {
		        key: "single",
		        value: function single() {
		            if (this.count !== 1) {
		                throw new Error("this nodeInterface is not single.");
		            }
		            var first = this.first();
		            if (!first) {
		                throw new Error("this nodeInterface is not single,but is empty.");
		            }
		            return first;
		        }
		    }, {
		        key: "filter",
		        value: function filter(predicate) {
		            var newNodes = [];
		            for (var i = 0; i < this.nodes.length; i++) {
		                var goml = this.nodes[i];
		                newNodes.push([]);
		                for (var j = 0; j < goml.length; j++) {
		                    var node = goml[j];
		                    if (predicate(node, i, j)) {
		                        newNodes[i].push(node);
		                    }
		                }
		            }
		            return new NodeInterface(newNodes);
		        }
		    }, {
		        key: "toArray",
		        value: function toArray() {
		            return _Utility2.default.flat(this.nodes);
		        }
		    }, {
		        key: "addChildByName",
		        value: function addChildByName(nodeName, attributes) {
		            this.forEach(function (node) {
		                node.addChildByName(nodeName, attributes);
		            });
		        }
		    }, {
		        key: "sendMessage",
		        value: function sendMessage(message, args) {
		            this.forEach(function (node) {
		                node.sendMessage(message, args);
		            });
		        }
		    }, {
		        key: "broadcastMessage",
		        value: function broadcastMessage(arg1, arg2, arg3) {
		            if (typeof arg1 === "number") {
		                this.forEach(function (node) {
		                    node.broadcastMessage(arg1, arg2, arg3);
		                });
		            } else {
		                this.forEach(function (node) {
		                    node.broadcastMessage(arg2, arg3);
		                });
		            }
		        }
		    }, {
		        key: "count",
		        get: function get() {
		            if (this.nodes.length === 0) {
		                return 0;
		            }
		            var counts = this.nodes.map(function (nodes) {
		                return nodes.length;
		            });
		            return _Utility2.default.sum(counts);
		        }
		    }, {
		        key: "isEmpty",
		        get: function get() {
		            return this.count === 0;
		        }
		    }]);
		
		    return NodeInterface;
		}();
		
		exports.default = NodeInterface;
	
	/***/ },
	/* 28 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Constants = __webpack_require__(9);
		
		var _Constants2 = _interopRequireDefault(_Constants);
		
		var _GrimoireInterface = __webpack_require__(3);
		
		var _GrimoireInterface2 = _interopRequireDefault(_GrimoireInterface);
		
		var _NodeInterface = __webpack_require__(27);
		
		var _NodeInterface2 = _interopRequireDefault(_NodeInterface);
		
		var _GomlNode = __webpack_require__(7);
		
		var _GomlNode2 = _interopRequireDefault(_GomlNode);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		 * Provides interfaces to treat whole goml tree for each.
		 */
		var GomlInterface = function () {
		    function GomlInterface(rootNodes) {
		        _classCallCheck(this, GomlInterface);
		
		        this.rootNodes = rootNodes;
		    }
		
		    _createClass(GomlInterface, [{
		        key: "getNodeById",
		        value: function getNodeById(id) {
		            return this.rootNodes.map(function (root) {
		                return _GomlNode2.default.fromElement(root.element.ownerDocument.getElementById(id));
		            });
		        }
		    }, {
		        key: "queryFunc",
		        value: function queryFunc(query) {
		            return new _NodeInterface2.default(this._queryNodes(query));
		        }
		    }, {
		        key: "_queryNodes",
		        value: function _queryNodes(query) {
		            return this.rootNodes.map(function (root) {
		                var nodelist = root.element.ownerDocument.querySelectorAll(query);
		                var nodes = [];
		                for (var i = 0; i < nodelist.length; i++) {
		                    var node = _GrimoireInterface2.default.nodeDictionary[nodelist.item(i).getAttribute(_Constants2.default.x_gr_id)];
		                    if (node) {
		                        nodes.push(node);
		                    }
		                }
		                return nodes;
		            });
		        }
		    }]);
		
		    return GomlInterface;
		}();
		
		exports.default = GomlInterface;
	
	/***/ },
	/* 29 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		function BooleanConverter(val, attr) {
		    if (typeof val === "boolean") {
		        return val;
		    } else if (typeof val === "string") {
		        switch (val) {
		            case "true":
		                return true;
		            case "false":
		                return false;
		            default:
		                return undefined;
		        }
		    }
		}
		exports.default = BooleanConverter;
	
	/***/ },
	/* 30 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Component2 = __webpack_require__(23);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var GrimoireComponent = function (_Component) {
		    _inherits(GrimoireComponent, _Component);
		
		    function GrimoireComponent() {
		        _classCallCheck(this, GrimoireComponent);
		
		        return _possibleConstructorReturn(this, (GrimoireComponent.__proto__ || Object.getPrototypeOf(GrimoireComponent)).apply(this, arguments));
		    }
		
		    _createClass(GrimoireComponent, [{
		        key: "$awake",
		        value: function $awake() {
		            var _this2 = this;
		
		            this.node.resolveAttributesValue();
		            this.getAttributeRaw("id").watch(function (attr) {
		                _this2.node.element.id = attr ? attr : "";
		            }, true);
		            this.getAttributeRaw("class").watch(function (attr) {
		                _this2.node.element.className = Array.isArray(attr) ? attr.join(" ") : "";
		            }, true);
		            this.getAttributeRaw("enabled").watch(function (attr) {
		                _this2.node["_enabled"] = attr;
		                var p = _this2.node.parent;
		                _this2.node.notifyActivenessUpdate(p ? p.isActive && _this2.node.enabled : _this2.node.enabled);
		            });
		            this.node["_enabled"] = this.getAttribute("enabled");
		            this.node["_isActive"] = this.node.parent ? this.node.parent.isActive && this.enabled : this.enabled;
		        }
		    }]);
		
		    return GrimoireComponent;
		}(_Component3.default);
		
		GrimoireComponent.attributes = {
		    id: {
		        converter: "String",
		        default: null,
		        readonly: false
		    },
		    class: {
		        converter: "StringArray",
		        default: null,
		        readonly: false
		    },
		    enabled: {
		        converter: "Boolean",
		        default: true,
		        readonly: false
		    }
		};
		exports.default = GrimoireComponent;
	
	/***/ },
	/* 31 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.default = StringArrayConverter;
		function StringArrayConverter(val) {
		    if (Array.isArray(val) || !val) {
		        return val;
		    }
		    if (typeof val === "string") {
		        return val.split(" ");
		    }
		}
	
	/***/ },
	/* 32 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.default = StringConverter;
		function StringConverter(val) {
		    if (typeof val === "string") {
		        return val;
		    } else if (!val) {
		        return val;
		    } else if (typeof val.toString === "function") {
		        return val.toString();
		    }
		}
	
	/***/ },
	/* 33 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var NSSet = function () {
		    function NSSet() {
		        _classCallCheck(this, NSSet);
		
		        this._contentArray = [];
		    }
		
		    _createClass(NSSet, [{
		        key: "push",
		        value: function push(item) {
		            var index = this._contentArray.findIndex(function (id) {
		                return id.fqn === item.fqn;
		            });
		            if (index === -1) {
		                this._contentArray.push(item);
		            }
		            return this;
		        }
		    }, {
		        key: "pushArray",
		        value: function pushArray(item) {
		            var _this = this;
		
		            item.forEach(function (v) {
		                _this.push(v);
		            });
		            return this;
		        }
		    }, {
		        key: "values",
		        value: function values() {
		            return this._contentArray.values();
		        }
		    }, {
		        key: "toArray",
		        value: function toArray() {
		            var ret = [];
		            for (var key in this._contentArray) {
		                ret.push(this._contentArray[key]);
		            }
		            return ret;
		        }
		    }, {
		        key: "clone",
		        value: function clone() {
		            var newSet = new NSSet();
		            var _iteratorNormalCompletion = true;
		            var _didIteratorError = false;
		            var _iteratorError = undefined;
		
		            try {
		                for (var _iterator = this._contentArray[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
		                    var i = _step.value;
		
		                    newSet.push(i);
		                }
		            } catch (err) {
		                _didIteratorError = true;
		                _iteratorError = err;
		            } finally {
		                try {
		                    if (!_iteratorNormalCompletion && _iterator.return) {
		                        _iterator.return();
		                    }
		                } finally {
		                    if (_didIteratorError) {
		                        throw _iteratorError;
		                    }
		                }
		            }
		
		            return newSet;
		        }
		    }, {
		        key: "merge",
		        value: function merge(other) {
		            var _iteratorNormalCompletion2 = true;
		            var _didIteratorError2 = false;
		            var _iteratorError2 = undefined;
		
		            try {
		                for (var _iterator2 = other._contentArray[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
		                    var elem = _step2.value;
		
		                    this.push(elem);
		                }
		            } catch (err) {
		                _didIteratorError2 = true;
		                _iteratorError2 = err;
		            } finally {
		                try {
		                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
		                        _iterator2.return();
		                    }
		                } finally {
		                    if (_didIteratorError2) {
		                        throw _iteratorError2;
		                    }
		                }
		            }
		
		            return this;
		        }
		    }, {
		        key: "forEach",
		        value: function forEach(func) {
		            this._contentArray.forEach(func);
		        }
		    }], [{
		        key: "fromArray",
		        value: function fromArray(array) {
		            var nSet = new NSSet();
		            nSet.pushArray(array);
		            return nSet;
		        }
		    }]);
		
		    return NSSet;
		}();
		
		exports.default = NSSet;
	
	/***/ },
	/* 34 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Ensure = __webpack_require__(2);
		
		var _Ensure2 = _interopRequireDefault(_Ensure);
		
		var _NSIdentity = __webpack_require__(11);
		
		var _NSIdentity2 = _interopRequireDefault(_NSIdentity);
		
		var _GrimoireInterface = __webpack_require__(3);
		
		var _GrimoireInterface2 = _interopRequireDefault(_GrimoireInterface);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var NodeDeclaration = function () {
		    function NodeDeclaration(name, defaultComponents, defaultAttributes, superNode, freezeAttributes) {
		        _classCallCheck(this, NodeDeclaration);
		
		        this.name = name;
		        this.defaultComponents = defaultComponents;
		        this.defaultAttributes = defaultAttributes;
		        this.superNode = superNode;
		        this.freezeAttributes = freezeAttributes;
		        this.freezeAttributes = this.freezeAttributes ? this.freezeAttributes : [];
		        if (!this.superNode && this.name.name !== "grimoire-node-base") {
		            this.superNode = _NSIdentity2.default.createOnDefaultNS("grimoire-node-base");
		        }
		    }
		
		    _createClass(NodeDeclaration, [{
		        key: "addDefaultComponent",
		        value: function addDefaultComponent(componentName) {
		            var componentId = _Ensure2.default.ensureTobeNSIdentity(componentName);
		            this.defaultComponents.push(componentId);
		            if (this._defaultComponentsActual) {
		                this._defaultComponentsActual.push(componentId);
		            }
		        }
		    }, {
		        key: "_resolveInherites",
		        value: function _resolveInherites() {
		            if (!this.superNode) {
		                this._defaultComponentsActual = this.defaultComponents;
		                this._defaultAttributesActual = this.defaultAttributes;
		                return;
		            }
		            var superNode = _GrimoireInterface2.default.nodeDeclarations.get(this.superNode);
		            var inheritedDefaultComponents = superNode.defaultComponentsActual;
		            var inheritedDefaultAttribute = superNode.defaultAttributesActual;
		            this._defaultComponentsActual = inheritedDefaultComponents.clone().merge(this.defaultComponents);
		            this._defaultAttributesActual = inheritedDefaultAttribute.clone().pushDictionary(this.defaultAttributes);
		        }
		    }, {
		        key: "defaultComponentsActual",
		        get: function get() {
		            if (!this._defaultComponentsActual) {
		                this._resolveInherites();
		            }
		            return this._defaultComponentsActual;
		        }
		    }, {
		        key: "defaultAttributesActual",
		        get: function get() {
		            if (!this._defaultAttributesActual) {
		                this._resolveInherites();
		            }
		            return this._defaultAttributesActual;
		        }
		    }]);
		
		    return NodeDeclaration;
		}();
		
		exports.default = NodeDeclaration;
	
	/***/ },
	/* 35 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		exports.default = function () {
		    GrimoireInitializer.initialize();
		    _GrimoireInterface2.default.noConflictPreserve = window["gr"];
		    return window["gr"] = window["GrimoireJS"] = _GrimoireInterface2.default; // TODO gr should implements noConflict
		};
		
		var _GrimoireInterface = __webpack_require__(3);
		
		var _GrimoireInterface2 = _interopRequireDefault(_GrimoireInterface);
		
		var _GomlLoader = __webpack_require__(5);
		
		var _GomlLoader2 = _interopRequireDefault(_GomlLoader);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
		    return new (P || (P = Promise))(function (resolve, reject) {
		        function fulfilled(value) {
		            try {
		                step(generator.next(value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function rejected(value) {
		            try {
		                step(generator["throw"](value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function step(result) {
		            result.done ? resolve(result.value) : new P(function (resolve) {
		                resolve(result.value);
		            }).then(fulfilled, rejected);
		        }
		        step((generator = generator.apply(thisArg, _arguments || [])).next());
		    });
		};
		
		/**
		 * Provides procedures for initializing.
		 */
		var GrimoireInitializer = function () {
		    function GrimoireInitializer() {
		        _classCallCheck(this, GrimoireInitializer);
		    }
		
		    _createClass(GrimoireInitializer, null, [{
		        key: "initialize",
		
		        /**
		         * Start initializing
		         * @return {Promise<void>} The promise which will be resolved when all of the Goml script was loaded.
		         */
		        value: function initialize() {
		            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
		                return regeneratorRuntime.wrap(function _callee$(_context) {
		                    while (1) {
		                        switch (_context.prev = _context.next) {
		                            case 0:
		                                _context.prev = 0;
		
		                                GrimoireInitializer._copyGLConstants();
		                                _GrimoireInterface2.default.initialize();
		                                _context.next = 5;
		                                return GrimoireInitializer._waitForDOMLoading();
		
		                            case 5:
		                                GrimoireInitializer._logVersions();
		                                _context.next = 8;
		                                return _GrimoireInterface2.default.resolvePlugins();
		
		                            case 8:
		                                _context.next = 10;
		                                return _GomlLoader2.default.loadForPage();
		
		                            case 10:
		                                _context.next = 15;
		                                break;
		
		                            case 12:
		                                _context.prev = 12;
		                                _context.t0 = _context["catch"](0);
		
		                                console.error(_context.t0);
		
		                            case 15:
		                            case "end":
		                                return _context.stop();
		                        }
		                    }
		                }, _callee, this, [[0, 12]]);
		            }));
		        }
		        /**
		         * Ensure WebGLRenderingContext.[CONSTANTS] is exisiting.
		         * Some of the browsers contains them in prototype.
		         */
		
		    }, {
		        key: "_copyGLConstants",
		        value: function _copyGLConstants() {
		            if (WebGLRenderingContext.ONE) {
		                // Assume the CONSTANTS are already in WebGLRenderingContext
		                // Chrome,Firefox,IE,Edge...
		                return;
		            }
		            // Otherwise like ""Safari""
		            for (var propName in WebGLRenderingContext.prototype) {
		                if (/^[A-Z]/.test(propName)) {
		                    var property = WebGLRenderingContext.prototype[propName];
		                    WebGLRenderingContext[propName] = property;
		                }
		            }
		        }
		        /**
		         * Obtain the promise object which will be resolved when DOMContentLoaded event was rised.
		         * @return {Promise<void>} the promise
		         */
		
		    }, {
		        key: "_waitForDOMLoading",
		        value: function _waitForDOMLoading() {
		            return new Promise(function (resolve) {
		                window.addEventListener("DOMContentLoaded", function () {
		                    resolve();
		                });
		            });
		        }
		    }, {
		        key: "_logVersions",
		        value: function _logVersions() {
		            var gr = _GrimoireInterface2.default;
		            if (!gr.debug) {
		                return;
		            }
		            var log = "%cGrimoire.js v" + gr["__VERSION__"] + "\nplugins:\n\n";
		            var i = 1;
		            for (var key in gr.lib) {
		                var plugin = gr.lib[key];
		                log += "  " + i + " : " + (plugin.__NAME__ || key) + "@" + plugin.__VERSION__ + "\n";
		                i++;
		            }
		            log += "\nTo suppress this message,please inject a line \"gr.debug = false;\" on the initializing timing.";
		            console.log(log, "color:#44F;font-weight:bold;");
		        }
		    }]);
		
		    return GrimoireInitializer;
		}();
		/**
		 * Just start the process.
		 */
		
		
		;
	
	/***/ }
	/******/ ])
	});
	;
	//# sourceMappingURL=index.js.map

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory();
		else if(typeof define === 'function' && define.amd)
			define([], factory);
		else {
			var a = factory();
			for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
		}
	})(this, function() {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	/******/
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;
	/******/
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			exports: {},
	/******/ 			id: moduleId,
	/******/ 			loaded: false
	/******/ 		};
	/******/
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	/******/
	/******/ 		// Flag the module as loaded
	/******/ 		module.loaded = true;
	/******/
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _AABB = __webpack_require__(1);
		
		var _AABB2 = _interopRequireDefault(_AABB);
		
		var _Color = __webpack_require__(14);
		
		var _Color2 = _interopRequireDefault(_Color);
		
		var _Color3 = __webpack_require__(15);
		
		var _Color4 = _interopRequireDefault(_Color3);
		
		var _Colors = __webpack_require__(17);
		
		var _Colors2 = _interopRequireDefault(_Colors);
		
		var _Angle2DConverter = __webpack_require__(18);
		
		var _Angle2DConverter2 = _interopRequireDefault(_Angle2DConverter);
		
		var _Color3Converter = __webpack_require__(20);
		
		var _Color3Converter2 = _interopRequireDefault(_Color3Converter);
		
		var _Color4Converter = __webpack_require__(21);
		
		var _Color4Converter2 = _interopRequireDefault(_Color4Converter);
		
		var _Rotation3Converter = __webpack_require__(22);
		
		var _Rotation3Converter2 = _interopRequireDefault(_Rotation3Converter);
		
		var _Vector2Converter = __webpack_require__(26);
		
		var _Vector2Converter2 = _interopRequireDefault(_Vector2Converter);
		
		var _Vector3Converter = __webpack_require__(28);
		
		var _Vector3Converter2 = _interopRequireDefault(_Vector3Converter);
		
		var _Vector4Converter = __webpack_require__(29);
		
		var _Vector4Converter2 = _interopRequireDefault(_Vector4Converter);
		
		var _GLM = __webpack_require__(30);
		
		var _GLM2 = _interopRequireDefault(_GLM);
		
		var _Matrix = __webpack_require__(24);
		
		var _Matrix2 = _interopRequireDefault(_Matrix);
		
		var _MatrixBase = __webpack_require__(25);
		
		var _MatrixBase2 = _interopRequireDefault(_MatrixBase);
		
		var _Quaternion = __webpack_require__(23);
		
		var _Quaternion2 = _interopRequireDefault(_Quaternion);
		
		var _Rectangle = __webpack_require__(31);
		
		var _Rectangle2 = _interopRequireDefault(_Rectangle);
		
		var _Angle2DParser = __webpack_require__(19);
		
		var _Angle2DParser2 = _interopRequireDefault(_Angle2DParser);
		
		var _Vector = __webpack_require__(27);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		var _Vector3 = __webpack_require__(2);
		
		var _Vector4 = _interopRequireDefault(_Vector3);
		
		var _Vector5 = __webpack_require__(16);
		
		var _Vector6 = _interopRequireDefault(_Vector5);
		
		var _VectorBase = __webpack_require__(3);
		
		var _VectorBase2 = _interopRequireDefault(_VectorBase);
		
		var _main = __webpack_require__(32);
		
		var _main2 = _interopRequireDefault(_main);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		var __VERSION__ = "1.10.0";
		var __NAME__ = "grimoirejs-math";
		
		var __EXPOSE__ = {
		    "AABB": _AABB2.default,
		    "Color3": _Color2.default,
		    "Color4": _Color4.default,
		    "Colors": _Colors2.default,
		    "Converters": {
		        "Angle2DConverter": _Angle2DConverter2.default,
		        "Color3Converter": _Color3Converter2.default,
		        "Color4Converter": _Color4Converter2.default,
		        "Rotation3Converter": _Rotation3Converter2.default,
		        "Vector2Converter": _Vector2Converter2.default,
		        "Vector3Converter": _Vector3Converter2.default,
		        "Vector4Converter": _Vector4Converter2.default
		    },
		    "GLM": _GLM2.default,
		    "Matrix": _Matrix2.default,
		    "MatrixBase": _MatrixBase2.default,
		    "Quaternion": _Quaternion2.default,
		    "Rectangle": _Rectangle2.default,
		    "Util": {
		        "Angle2DParser": _Angle2DParser2.default
		    },
		    "Vector2": _Vector2.default,
		    "Vector3": _Vector4.default,
		    "Vector4": _Vector6.default,
		    "VectorBase": _VectorBase2.default
		};
		var __BASE__ = (0, _main2.default)();
		Object.assign(__EXPOSE__, {
		    __VERSION__: __VERSION__,
		    __NAME__: __NAME__
		});
		Object.assign(__BASE__ || {}, __EXPOSE__);
		window["GrimoireJS"].lib.math = __EXPOSE__;
		exports.default = __BASE__;
	
	/***/ },
	/* 1 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); ///<reference path="./gl-matrix.d.ts"/>
		
		
		var _Vector = __webpack_require__(2);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		 * Axis-Aligned Bounding Box implementation
		 */
		var AABB = function () {
		    function AABB(initialPoints) {
		        var _this = this;
		
		        _classCallCheck(this, AABB);
		
		        if (initialPoints) {
		            initialPoints.forEach(function (f) {
		                return _this.expand(f);
		            });
		        }
		    }
		    /**
		     * Width of this AABB
		     */
		
		
		    _createClass(AABB, [{
		        key: "expand",
		
		        /**
		         * Calculate new bounding box with considering the new point is included.
		         * @param  {Vector3} newPoint the point that will be considered that it should be in this bounding box.
		         */
		        value: function expand(newPoint) {
		            if (this.pointLBF == null) {
		                // assume this is first time to be used this AABB instance
		                this.pointLBF = _Vector2.default.copy(newPoint);
		                this.pointRTN = _Vector2.default.copy(newPoint);
		            }
		            this.pointLBF = _Vector2.default.min(newPoint, this.pointLBF);
		            this.pointRTN = _Vector2.default.max(newPoint, this.pointRTN);
		            this._center = null;
		            return this;
		        }
		        /**
		         * Clean up this AABB with initial value.
		         */
		
		    }, {
		        key: "clear",
		        value: function clear() {
		            this.pointLBF = null;
		            this.pointRTN = null;
		            this._center = null;
		        }
		    }, {
		        key: "Width",
		        get: function get() {
		            return Math.abs(this.pointLBF.X - this.pointRTN.X);
		        }
		        /**
		         * Height of this AABB
		         */
		
		    }, {
		        key: "Height",
		        get: function get() {
		            return Math.abs(this.pointLBF.Y - this.pointRTN.Y);
		        }
		        /**
		         * Distance of this AABB
		         */
		
		    }, {
		        key: "Distance",
		        get: function get() {
		            return Math.abs(this.pointLBF.Z - this.pointRTN.Z);
		        }
		    }, {
		        key: "Center",
		        get: function get() {
		            return this._center ? this._center : this._center = _Vector2.default.add(this.pointLBF, this.pointRTN).multiplyWith(0.5);
		        }
		    }]);
		
		    return AABB;
		}();
		
		exports.default = AABB;
	
	/***/ },
	/* 2 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _VectorBase2 = __webpack_require__(3);
		
		var _VectorBase3 = _interopRequireDefault(_VectorBase2);
		
		var _glMatrix = __webpack_require__(4);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } ///<reference path="./gl-matrix.d.ts"/>
		
		
		var Vector3 = function (_VectorBase) {
		    _inherits(Vector3, _VectorBase);
		
		    _createClass(Vector3, null, [{
		        key: "copy",
		        value: function copy(source) {
		            return new Vector3(source.X, source.Y, source.Z);
		        }
		    }, {
		        key: "dot",
		        value: function dot(v1, v2) {
		            return _glMatrix.vec3.dot(v1.rawElements, v2.rawElements);
		        }
		    }, {
		        key: "add",
		        value: function add(v1, v2) {
		            var newVec = _glMatrix.vec3.create();
		            return new Vector3(_glMatrix.vec3.add(newVec, v1.rawElements, v2.rawElements));
		        }
		    }, {
		        key: "subtract",
		        value: function subtract(v1, v2) {
		            var newVec = _glMatrix.vec3.create();
		            return new Vector3(_glMatrix.vec3.sub(newVec, v1.rawElements, v2.rawElements));
		        }
		    }, {
		        key: "multiply",
		        value: function multiply(s, v) {
		            var newVec = _glMatrix.vec3.create();
		            return new Vector3(_glMatrix.vec3.scale(newVec, v.rawElements, s));
		        }
		    }, {
		        key: "negate",
		        value: function negate(v1) {
		            return Vector3.multiply(-1, v1);
		        }
		    }, {
		        key: "equals",
		        value: function equals(v1, v2) {
		            return _VectorBase3.default.__elementEquals(v1, v2);
		        }
		    }, {
		        key: "nearlyEquals",
		        value: function nearlyEquals(v1, v2) {
		            return _VectorBase3.default.__nearlyElementEquals(v1, v2);
		        }
		    }, {
		        key: "normalize",
		        value: function normalize(v1) {
		            var newVec = _glMatrix.vec3.create();
		            return new Vector3(_glMatrix.vec3.normalize(newVec, v1.rawElements));
		        }
		    }, {
		        key: "cross",
		        value: function cross(v1, v2) {
		            var newVec = _glMatrix.vec3.create();
		            return new Vector3(_glMatrix.vec3.cross(newVec, v1.rawElements, v2.rawElements));
		        }
		    }, {
		        key: "min",
		        value: function min(v1, v2) {
		            return new Vector3(_VectorBase3.default.__fromGenerationFunction(v1, v2, function (i, _v1, _v2) {
		                return Math.min(_v1.rawElements[i], _v2.rawElements[i]);
		            }));
		        }
		    }, {
		        key: "max",
		        value: function max(v1, v2) {
		            return new Vector3(_VectorBase3.default.__fromGenerationFunction(v1, v2, function (i, _v1, _v2) {
		                return Math.max(_v1.rawElements[i], _v2.rawElements[i]);
		            }));
		        }
		    }, {
		        key: "angle",
		        value: function angle(v1, v2) {
		            return Math.acos(Vector3.dot(v1.normalized, v2.normalized));
		        }
		    }, {
		        key: "parse",
		        value: function parse(str) {
		            var parseResult = _VectorBase3.default.__parse(str);
		            var elements = parseResult.elements;
		            if (!elements || elements.length !== 1 && elements.length !== 3) {
		                return undefined;
		            }
		            var result = void 0;
		            if (elements.length === 1) {
		                result = new Vector3(elements[0], elements[0], elements[0]);
		            } else {
		                result = new Vector3(elements[0], elements[1], elements[2]);
		            }
		            if (parseResult.needNormalize) {
		                result = result.normalizeThis();
		            }
		            if (parseResult.coefficient) {
		                result = result.multiplyWith(parseResult.coefficient);
		            }
		            if (parseResult.needNegate) {
		                result = result.negateThis();
		            }
		            return result;
		        }
		    }, {
		        key: "XUnit",
		        get: function get() {
		            return new Vector3(1, 0, 0);
		        }
		    }, {
		        key: "YUnit",
		        get: function get() {
		            return new Vector3(0, 1, 0);
		        }
		    }, {
		        key: "ZUnit",
		        get: function get() {
		            return new Vector3(0, 0, 1);
		        }
		    }, {
		        key: "Zero",
		        get: function get() {
		            return new Vector3(0, 0, 0);
		        }
		    }, {
		        key: "One",
		        get: function get() {
		            return new Vector3(1, 1, 1);
		        }
		    }]);
		
		    function Vector3(x, y, z) {
		        _classCallCheck(this, Vector3);
		
		        var _this = _possibleConstructorReturn(this, (Vector3.__proto__ || Object.getPrototypeOf(Vector3)).call(this));
		
		        if (typeof y === "undefined") {
		            _this.rawElements = x;
		            return _possibleConstructorReturn(_this);
		        }
		        _this.rawElements = [x, y, z];
		        return _this;
		    }
		
		    _createClass(Vector3, [{
		        key: "normalizeThis",
		        value: function normalizeThis() {
		            return Vector3.normalize(this);
		        }
		    }, {
		        key: "dotWith",
		        value: function dotWith(v) {
		            return Vector3.dot(this, v);
		        }
		    }, {
		        key: "addWith",
		        value: function addWith(v) {
		            return Vector3.add(this, v);
		        }
		    }, {
		        key: "subtractWith",
		        value: function subtractWith(v) {
		            return Vector3.subtract(this, v);
		        }
		    }, {
		        key: "multiplyWith",
		        value: function multiplyWith(s) {
		            return Vector3.multiply(s, this);
		        }
		    }, {
		        key: "negateThis",
		        value: function negateThis() {
		            return Vector3.negate(this);
		        }
		    }, {
		        key: "equalWith",
		        value: function equalWith(v) {
		            return Vector3.equals(this, v);
		        }
		    }, {
		        key: "nearlyEqualWith",
		        value: function nearlyEqualWith(v) {
		            return Vector3.nearlyEquals(this, v);
		        }
		    }, {
		        key: "crossWith",
		        value: function crossWith(v) {
		            return Vector3.cross(this, v);
		        }
		    }, {
		        key: "toString",
		        value: function toString() {
		            return "(" + this.X + ", " + this.Y + ", " + this.Z + ")";
		        }
		    }, {
		        key: "toDisplayString",
		        value: function toDisplayString() {
		            return "Vector3" + this.toString();
		        }
		    }, {
		        key: "normalized",
		        get: function get() {
		            return this.multiplyWith(1 / this.magnitude);
		        }
		    }, {
		        key: "X",
		        get: function get() {
		            return this.rawElements[0];
		        },
		        set: function set(x) {
		            this.rawElements[0] = +x;
		        }
		    }, {
		        key: "Y",
		        get: function get() {
		            return this.rawElements[1];
		        },
		        set: function set(y) {
		            this.rawElements[1] = +y;
		        }
		    }, {
		        key: "Z",
		        get: function get() {
		            return this.rawElements[2];
		        },
		        set: function set(z) {
		            this.rawElements[2] = +z;
		        }
		    }, {
		        key: "ElementCount",
		        get: function get() {
		            return 3;
		        }
		    }]);
		
		    return Vector3;
		}(_VectorBase3.default);
		
		exports.default = Vector3;
	
	/***/ },
	/* 3 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		///<reference path="./gl-matrix.d.ts"/>
		var VectorBase = function () {
		    function VectorBase() {
		        _classCallCheck(this, VectorBase);
		
		        this._magnitudeSquaredCache = -1;
		        this._magnitudeCache = -1;
		    }
		
		    _createClass(VectorBase, [{
		        key: "magnitude",
		        get: function get() {
		            if (this._magnitudeCache < 0) {
		                this._magnitudeCache = Math.sqrt(this.sqrMagnitude);
		            }
		            return this._magnitudeCache;
		        }
		    }, {
		        key: "ElementCount",
		        get: function get() {
		            return 0;
		        }
		    }, {
		        key: "sqrMagnitude",
		        get: function get() {
		            if (this._magnitudeSquaredCache < 0) {
		                var sum = 0;
		                var r = this.rawElements;
		                for (var i = 0; i < this.ElementCount; i++) {
		                    sum += r[i] * r[i];
		                }
		                this._magnitudeSquaredCache = sum;
		            }
		            return this._magnitudeSquaredCache;
		        }
		    }], [{
		        key: "__elementEquals",
		        value: function __elementEquals(v1, v2) {
		            if (v1.ElementCount !== v2.ElementCount) {
		                return false;
		            }
		            for (var i = 0; i < v1.ElementCount; i++) {
		                if (v1.rawElements[i] !== v2.rawElements[i]) {
		                    return false;
		                }
		            }
		            return true;
		        }
		    }, {
		        key: "__nearlyElementEquals",
		        value: function __nearlyElementEquals(v1, v2) {
		            if (v1.ElementCount !== v2.ElementCount) {
		                return false;
		            }
		            var error = 0.01;
		            for (var i = 0; i < v1.ElementCount; i++) {
		                if (Math.abs(v1.rawElements[i] - v2.rawElements[i]) > error) {
		                    return false;
		                }
		            }
		            return true;
		        }
		    }, {
		        key: "__fromGenerationFunction",
		        value: function __fromGenerationFunction(v1, v2, gen) {
		            var f = new Float32Array(v1.ElementCount);
		            for (var i = 0; i < f.length; i++) {
		                f[i] = gen(i, v1, v2);
		            }
		            return f;
		        }
		    }, {
		        key: "__parse",
		        value: function __parse(str) {
		            var checkRegex = /(-?)([\d,Ee\+\-\.]+)?(n)?\(([-\d,Ee\+\.\s]+)\)/g;
		            var matches = checkRegex.exec(str);
		            if (matches) {
		                if (!matches[4]) {
		                    throw new Error("The specified string '" + str + "' is not containing braced vector.");
		                }
		                return {
		                    needNormalize: matches[3] === "n",
		                    needNegate: matches[1] === "-",
		                    coefficient: parseFloat(matches[2]),
		                    elements: VectorBase._parseRawVector(matches[4])
		                };
		            } else {
		                // Assume this is simplified format.
		                return {
		                    needNormalize: false,
		                    needNegate: false,
		                    elements: VectorBase._parseRawVector(str),
		                    coefficient: undefined
		                };
		            }
		        }
		    }, {
		        key: "_parseRawVector",
		        value: function _parseRawVector(str) {
		            var splitted = str.split(",");
		            var result = new Array(splitted.length);
		            for (var i = 0; i < splitted.length; i++) {
		                result[i] = parseFloat(splitted[i]);
		                if (isNaN(result[i])) {
		                    throw new Error("Unexpected vector string " + str);
		                }
		            }
		            return result;
		        }
		    }]);
		
		    return VectorBase;
		}();
		
		exports.default = VectorBase;
	
	/***/ },
	/* 4 */
	/***/ function(module, exports, __webpack_require__) {
	
		/**
		 * @fileoverview gl-matrix - High performance matrix and vector operations
		 * @author Brandon Jones
		 * @author Colin MacKenzie IV
		 * @version 2.3.2
		 */
		
		/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
		
		Permission is hereby granted, free of charge, to any person obtaining a copy
		of this software and associated documentation files (the "Software"), to deal
		in the Software without restriction, including without limitation the rights
		to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		copies of the Software, and to permit persons to whom the Software is
		furnished to do so, subject to the following conditions:
		
		The above copyright notice and this permission notice shall be included in
		all copies or substantial portions of the Software.
		
		THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		THE SOFTWARE. */
		// END HEADER
		
		exports.glMatrix = __webpack_require__(5);
		exports.mat2 = __webpack_require__(6);
		exports.mat2d = __webpack_require__(7);
		exports.mat3 = __webpack_require__(8);
		exports.mat4 = __webpack_require__(9);
		exports.quat = __webpack_require__(10);
		exports.vec2 = __webpack_require__(13);
		exports.vec3 = __webpack_require__(11);
		exports.vec4 = __webpack_require__(12);
	
	/***/ },
	/* 5 */
	/***/ function(module, exports) {
	
		/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
		
		Permission is hereby granted, free of charge, to any person obtaining a copy
		of this software and associated documentation files (the "Software"), to deal
		in the Software without restriction, including without limitation the rights
		to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		copies of the Software, and to permit persons to whom the Software is
		furnished to do so, subject to the following conditions:
		
		The above copyright notice and this permission notice shall be included in
		all copies or substantial portions of the Software.
		
		THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		THE SOFTWARE. */
		
		/**
		 * @class Common utilities
		 * @name glMatrix
		 */
		var glMatrix = {};
		
		// Configuration Constants
		glMatrix.EPSILON = 0.000001;
		glMatrix.ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;
		glMatrix.RANDOM = Math.random;
		glMatrix.ENABLE_SIMD = false;
		
		// Capability detection
		glMatrix.SIMD_AVAILABLE = (glMatrix.ARRAY_TYPE === Float32Array) && ('SIMD' in this);
		glMatrix.USE_SIMD = glMatrix.ENABLE_SIMD && glMatrix.SIMD_AVAILABLE;
		
		/**
		 * Sets the type of array used when creating new vectors and matrices
		 *
		 * @param {Type} type Array type, such as Float32Array or Array
		 */
		glMatrix.setMatrixArrayType = function(type) {
		    glMatrix.ARRAY_TYPE = type;
		}
		
		var degree = Math.PI / 180;
		
		/**
		* Convert Degree To Radian
		*
		* @param {Number} Angle in Degrees
		*/
		glMatrix.toRadian = function(a){
		     return a * degree;
		}
		
		/**
		 * Tests whether or not the arguments have approximately the same value, within an absolute
		 * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less 
		 * than or equal to 1.0, and a relative tolerance is used for larger values)
		 * 
		 * @param {Number} a The first number to test.
		 * @param {Number} b The second number to test.
		 * @returns {Boolean} True if the numbers are approximately equal, false otherwise.
		 */
		glMatrix.equals = function(a, b) {
			return Math.abs(a - b) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));
		}
		
		module.exports = glMatrix;
	
	
	/***/ },
	/* 6 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
		
		Permission is hereby granted, free of charge, to any person obtaining a copy
		of this software and associated documentation files (the "Software"), to deal
		in the Software without restriction, including without limitation the rights
		to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		copies of the Software, and to permit persons to whom the Software is
		furnished to do so, subject to the following conditions:
		
		The above copyright notice and this permission notice shall be included in
		all copies or substantial portions of the Software.
		
		THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		THE SOFTWARE. */
		
		var glMatrix = __webpack_require__(5);
		
		/**
		 * @class 2x2 Matrix
		 * @name mat2
		 */
		var mat2 = {};
		
		/**
		 * Creates a new identity mat2
		 *
		 * @returns {mat2} a new 2x2 matrix
		 */
		mat2.create = function() {
		    var out = new glMatrix.ARRAY_TYPE(4);
		    out[0] = 1;
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 1;
		    return out;
		};
		
		/**
		 * Creates a new mat2 initialized with values from an existing matrix
		 *
		 * @param {mat2} a matrix to clone
		 * @returns {mat2} a new 2x2 matrix
		 */
		mat2.clone = function(a) {
		    var out = new glMatrix.ARRAY_TYPE(4);
		    out[0] = a[0];
		    out[1] = a[1];
		    out[2] = a[2];
		    out[3] = a[3];
		    return out;
		};
		
		/**
		 * Copy the values from one mat2 to another
		 *
		 * @param {mat2} out the receiving matrix
		 * @param {mat2} a the source matrix
		 * @returns {mat2} out
		 */
		mat2.copy = function(out, a) {
		    out[0] = a[0];
		    out[1] = a[1];
		    out[2] = a[2];
		    out[3] = a[3];
		    return out;
		};
		
		/**
		 * Set a mat2 to the identity matrix
		 *
		 * @param {mat2} out the receiving matrix
		 * @returns {mat2} out
		 */
		mat2.identity = function(out) {
		    out[0] = 1;
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 1;
		    return out;
		};
		
		/**
		 * Create a new mat2 with the given values
		 *
		 * @param {Number} m00 Component in column 0, row 0 position (index 0)
		 * @param {Number} m01 Component in column 0, row 1 position (index 1)
		 * @param {Number} m10 Component in column 1, row 0 position (index 2)
		 * @param {Number} m11 Component in column 1, row 1 position (index 3)
		 * @returns {mat2} out A new 2x2 matrix
		 */
		mat2.fromValues = function(m00, m01, m10, m11) {
		    var out = new glMatrix.ARRAY_TYPE(4);
		    out[0] = m00;
		    out[1] = m01;
		    out[2] = m10;
		    out[3] = m11;
		    return out;
		};
		
		/**
		 * Set the components of a mat2 to the given values
		 *
		 * @param {mat2} out the receiving matrix
		 * @param {Number} m00 Component in column 0, row 0 position (index 0)
		 * @param {Number} m01 Component in column 0, row 1 position (index 1)
		 * @param {Number} m10 Component in column 1, row 0 position (index 2)
		 * @param {Number} m11 Component in column 1, row 1 position (index 3)
		 * @returns {mat2} out
		 */
		mat2.set = function(out, m00, m01, m10, m11) {
		    out[0] = m00;
		    out[1] = m01;
		    out[2] = m10;
		    out[3] = m11;
		    return out;
		};
		
		
		/**
		 * Transpose the values of a mat2
		 *
		 * @param {mat2} out the receiving matrix
		 * @param {mat2} a the source matrix
		 * @returns {mat2} out
		 */
		mat2.transpose = function(out, a) {
		    // If we are transposing ourselves we can skip a few steps but have to cache some values
		    if (out === a) {
		        var a1 = a[1];
		        out[1] = a[2];
		        out[2] = a1;
		    } else {
		        out[0] = a[0];
		        out[1] = a[2];
		        out[2] = a[1];
		        out[3] = a[3];
		    }
		    
		    return out;
		};
		
		/**
		 * Inverts a mat2
		 *
		 * @param {mat2} out the receiving matrix
		 * @param {mat2} a the source matrix
		 * @returns {mat2} out
		 */
		mat2.invert = function(out, a) {
		    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],
		
		        // Calculate the determinant
		        det = a0 * a3 - a2 * a1;
		
		    if (!det) {
		        return null;
		    }
		    det = 1.0 / det;
		    
		    out[0] =  a3 * det;
		    out[1] = -a1 * det;
		    out[2] = -a2 * det;
		    out[3] =  a0 * det;
		
		    return out;
		};
		
		/**
		 * Calculates the adjugate of a mat2
		 *
		 * @param {mat2} out the receiving matrix
		 * @param {mat2} a the source matrix
		 * @returns {mat2} out
		 */
		mat2.adjoint = function(out, a) {
		    // Caching this value is nessecary if out == a
		    var a0 = a[0];
		    out[0] =  a[3];
		    out[1] = -a[1];
		    out[2] = -a[2];
		    out[3] =  a0;
		
		    return out;
		};
		
		/**
		 * Calculates the determinant of a mat2
		 *
		 * @param {mat2} a the source matrix
		 * @returns {Number} determinant of a
		 */
		mat2.determinant = function (a) {
		    return a[0] * a[3] - a[2] * a[1];
		};
		
		/**
		 * Multiplies two mat2's
		 *
		 * @param {mat2} out the receiving matrix
		 * @param {mat2} a the first operand
		 * @param {mat2} b the second operand
		 * @returns {mat2} out
		 */
		mat2.multiply = function (out, a, b) {
		    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];
		    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
		    out[0] = a0 * b0 + a2 * b1;
		    out[1] = a1 * b0 + a3 * b1;
		    out[2] = a0 * b2 + a2 * b3;
		    out[3] = a1 * b2 + a3 * b3;
		    return out;
		};
		
		/**
		 * Alias for {@link mat2.multiply}
		 * @function
		 */
		mat2.mul = mat2.multiply;
		
		/**
		 * Rotates a mat2 by the given angle
		 *
		 * @param {mat2} out the receiving matrix
		 * @param {mat2} a the matrix to rotate
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat2} out
		 */
		mat2.rotate = function (out, a, rad) {
		    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],
		        s = Math.sin(rad),
		        c = Math.cos(rad);
		    out[0] = a0 *  c + a2 * s;
		    out[1] = a1 *  c + a3 * s;
		    out[2] = a0 * -s + a2 * c;
		    out[3] = a1 * -s + a3 * c;
		    return out;
		};
		
		/**
		 * Scales the mat2 by the dimensions in the given vec2
		 *
		 * @param {mat2} out the receiving matrix
		 * @param {mat2} a the matrix to rotate
		 * @param {vec2} v the vec2 to scale the matrix by
		 * @returns {mat2} out
		 **/
		mat2.scale = function(out, a, v) {
		    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],
		        v0 = v[0], v1 = v[1];
		    out[0] = a0 * v0;
		    out[1] = a1 * v0;
		    out[2] = a2 * v1;
		    out[3] = a3 * v1;
		    return out;
		};
		
		/**
		 * Creates a matrix from a given angle
		 * This is equivalent to (but much faster than):
		 *
		 *     mat2.identity(dest);
		 *     mat2.rotate(dest, dest, rad);
		 *
		 * @param {mat2} out mat2 receiving operation result
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat2} out
		 */
		mat2.fromRotation = function(out, rad) {
		    var s = Math.sin(rad),
		        c = Math.cos(rad);
		    out[0] = c;
		    out[1] = s;
		    out[2] = -s;
		    out[3] = c;
		    return out;
		}
		
		/**
		 * Creates a matrix from a vector scaling
		 * This is equivalent to (but much faster than):
		 *
		 *     mat2.identity(dest);
		 *     mat2.scale(dest, dest, vec);
		 *
		 * @param {mat2} out mat2 receiving operation result
		 * @param {vec2} v Scaling vector
		 * @returns {mat2} out
		 */
		mat2.fromScaling = function(out, v) {
		    out[0] = v[0];
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = v[1];
		    return out;
		}
		
		/**
		 * Returns a string representation of a mat2
		 *
		 * @param {mat2} mat matrix to represent as a string
		 * @returns {String} string representation of the matrix
		 */
		mat2.str = function (a) {
		    return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';
		};
		
		/**
		 * Returns Frobenius norm of a mat2
		 *
		 * @param {mat2} a the matrix to calculate Frobenius norm of
		 * @returns {Number} Frobenius norm
		 */
		mat2.frob = function (a) {
		    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2)))
		};
		
		/**
		 * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix
		 * @param {mat2} L the lower triangular matrix 
		 * @param {mat2} D the diagonal matrix 
		 * @param {mat2} U the upper triangular matrix 
		 * @param {mat2} a the input matrix to factorize
		 */
		
		mat2.LDU = function (L, D, U, a) { 
		    L[2] = a[2]/a[0]; 
		    U[0] = a[0]; 
		    U[1] = a[1]; 
		    U[3] = a[3] - L[2] * U[1]; 
		    return [L, D, U];       
		}; 
		
		/**
		 * Adds two mat2's
		 *
		 * @param {mat2} out the receiving matrix
		 * @param {mat2} a the first operand
		 * @param {mat2} b the second operand
		 * @returns {mat2} out
		 */
		mat2.add = function(out, a, b) {
		    out[0] = a[0] + b[0];
		    out[1] = a[1] + b[1];
		    out[2] = a[2] + b[2];
		    out[3] = a[3] + b[3];
		    return out;
		};
		
		/**
		 * Subtracts matrix b from matrix a
		 *
		 * @param {mat2} out the receiving matrix
		 * @param {mat2} a the first operand
		 * @param {mat2} b the second operand
		 * @returns {mat2} out
		 */
		mat2.subtract = function(out, a, b) {
		    out[0] = a[0] - b[0];
		    out[1] = a[1] - b[1];
		    out[2] = a[2] - b[2];
		    out[3] = a[3] - b[3];
		    return out;
		};
		
		/**
		 * Alias for {@link mat2.subtract}
		 * @function
		 */
		mat2.sub = mat2.subtract;
		
		/**
		 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
		 *
		 * @param {mat2} a The first matrix.
		 * @param {mat2} b The second matrix.
		 * @returns {Boolean} True if the matrices are equal, false otherwise.
		 */
		mat2.exactEquals = function (a, b) {
		    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];
		};
		
		/**
		 * Returns whether or not the matrices have approximately the same elements in the same position.
		 *
		 * @param {mat2} a The first matrix.
		 * @param {mat2} b The second matrix.
		 * @returns {Boolean} True if the matrices are equal, false otherwise.
		 */
		mat2.equals = function (a, b) {
		    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];
		    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
		    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
		            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
		            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
		            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));
		};
		
		/**
		 * Multiply each element of the matrix by a scalar.
		 *
		 * @param {mat2} out the receiving matrix
		 * @param {mat2} a the matrix to scale
		 * @param {Number} b amount to scale the matrix's elements by
		 * @returns {mat2} out
		 */
		mat2.multiplyScalar = function(out, a, b) {
		    out[0] = a[0] * b;
		    out[1] = a[1] * b;
		    out[2] = a[2] * b;
		    out[3] = a[3] * b;
		    return out;
		};
		
		/**
		 * Adds two mat2's after multiplying each element of the second operand by a scalar value.
		 *
		 * @param {mat2} out the receiving vector
		 * @param {mat2} a the first operand
		 * @param {mat2} b the second operand
		 * @param {Number} scale the amount to scale b's elements by before adding
		 * @returns {mat2} out
		 */
		mat2.multiplyScalarAndAdd = function(out, a, b, scale) {
		    out[0] = a[0] + (b[0] * scale);
		    out[1] = a[1] + (b[1] * scale);
		    out[2] = a[2] + (b[2] * scale);
		    out[3] = a[3] + (b[3] * scale);
		    return out;
		};
		
		module.exports = mat2;
	
	
	/***/ },
	/* 7 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
		
		Permission is hereby granted, free of charge, to any person obtaining a copy
		of this software and associated documentation files (the "Software"), to deal
		in the Software without restriction, including without limitation the rights
		to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		copies of the Software, and to permit persons to whom the Software is
		furnished to do so, subject to the following conditions:
		
		The above copyright notice and this permission notice shall be included in
		all copies or substantial portions of the Software.
		
		THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		THE SOFTWARE. */
		
		var glMatrix = __webpack_require__(5);
		
		/**
		 * @class 2x3 Matrix
		 * @name mat2d
		 * 
		 * @description 
		 * A mat2d contains six elements defined as:
		 * <pre>
		 * [a, c, tx,
		 *  b, d, ty]
		 * </pre>
		 * This is a short form for the 3x3 matrix:
		 * <pre>
		 * [a, c, tx,
		 *  b, d, ty,
		 *  0, 0, 1]
		 * </pre>
		 * The last row is ignored so the array is shorter and operations are faster.
		 */
		var mat2d = {};
		
		/**
		 * Creates a new identity mat2d
		 *
		 * @returns {mat2d} a new 2x3 matrix
		 */
		mat2d.create = function() {
		    var out = new glMatrix.ARRAY_TYPE(6);
		    out[0] = 1;
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 1;
		    out[4] = 0;
		    out[5] = 0;
		    return out;
		};
		
		/**
		 * Creates a new mat2d initialized with values from an existing matrix
		 *
		 * @param {mat2d} a matrix to clone
		 * @returns {mat2d} a new 2x3 matrix
		 */
		mat2d.clone = function(a) {
		    var out = new glMatrix.ARRAY_TYPE(6);
		    out[0] = a[0];
		    out[1] = a[1];
		    out[2] = a[2];
		    out[3] = a[3];
		    out[4] = a[4];
		    out[5] = a[5];
		    return out;
		};
		
		/**
		 * Copy the values from one mat2d to another
		 *
		 * @param {mat2d} out the receiving matrix
		 * @param {mat2d} a the source matrix
		 * @returns {mat2d} out
		 */
		mat2d.copy = function(out, a) {
		    out[0] = a[0];
		    out[1] = a[1];
		    out[2] = a[2];
		    out[3] = a[3];
		    out[4] = a[4];
		    out[5] = a[5];
		    return out;
		};
		
		/**
		 * Set a mat2d to the identity matrix
		 *
		 * @param {mat2d} out the receiving matrix
		 * @returns {mat2d} out
		 */
		mat2d.identity = function(out) {
		    out[0] = 1;
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 1;
		    out[4] = 0;
		    out[5] = 0;
		    return out;
		};
		
		/**
		 * Create a new mat2d with the given values
		 *
		 * @param {Number} a Component A (index 0)
		 * @param {Number} b Component B (index 1)
		 * @param {Number} c Component C (index 2)
		 * @param {Number} d Component D (index 3)
		 * @param {Number} tx Component TX (index 4)
		 * @param {Number} ty Component TY (index 5)
		 * @returns {mat2d} A new mat2d
		 */
		mat2d.fromValues = function(a, b, c, d, tx, ty) {
		    var out = new glMatrix.ARRAY_TYPE(6);
		    out[0] = a;
		    out[1] = b;
		    out[2] = c;
		    out[3] = d;
		    out[4] = tx;
		    out[5] = ty;
		    return out;
		};
		
		/**
		 * Set the components of a mat2d to the given values
		 *
		 * @param {mat2d} out the receiving matrix
		 * @param {Number} a Component A (index 0)
		 * @param {Number} b Component B (index 1)
		 * @param {Number} c Component C (index 2)
		 * @param {Number} d Component D (index 3)
		 * @param {Number} tx Component TX (index 4)
		 * @param {Number} ty Component TY (index 5)
		 * @returns {mat2d} out
		 */
		mat2d.set = function(out, a, b, c, d, tx, ty) {
		    out[0] = a;
		    out[1] = b;
		    out[2] = c;
		    out[3] = d;
		    out[4] = tx;
		    out[5] = ty;
		    return out;
		};
		
		/**
		 * Inverts a mat2d
		 *
		 * @param {mat2d} out the receiving matrix
		 * @param {mat2d} a the source matrix
		 * @returns {mat2d} out
		 */
		mat2d.invert = function(out, a) {
		    var aa = a[0], ab = a[1], ac = a[2], ad = a[3],
		        atx = a[4], aty = a[5];
		
		    var det = aa * ad - ab * ac;
		    if(!det){
		        return null;
		    }
		    det = 1.0 / det;
		
		    out[0] = ad * det;
		    out[1] = -ab * det;
		    out[2] = -ac * det;
		    out[3] = aa * det;
		    out[4] = (ac * aty - ad * atx) * det;
		    out[5] = (ab * atx - aa * aty) * det;
		    return out;
		};
		
		/**
		 * Calculates the determinant of a mat2d
		 *
		 * @param {mat2d} a the source matrix
		 * @returns {Number} determinant of a
		 */
		mat2d.determinant = function (a) {
		    return a[0] * a[3] - a[1] * a[2];
		};
		
		/**
		 * Multiplies two mat2d's
		 *
		 * @param {mat2d} out the receiving matrix
		 * @param {mat2d} a the first operand
		 * @param {mat2d} b the second operand
		 * @returns {mat2d} out
		 */
		mat2d.multiply = function (out, a, b) {
		    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],
		        b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];
		    out[0] = a0 * b0 + a2 * b1;
		    out[1] = a1 * b0 + a3 * b1;
		    out[2] = a0 * b2 + a2 * b3;
		    out[3] = a1 * b2 + a3 * b3;
		    out[4] = a0 * b4 + a2 * b5 + a4;
		    out[5] = a1 * b4 + a3 * b5 + a5;
		    return out;
		};
		
		/**
		 * Alias for {@link mat2d.multiply}
		 * @function
		 */
		mat2d.mul = mat2d.multiply;
		
		/**
		 * Rotates a mat2d by the given angle
		 *
		 * @param {mat2d} out the receiving matrix
		 * @param {mat2d} a the matrix to rotate
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat2d} out
		 */
		mat2d.rotate = function (out, a, rad) {
		    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],
		        s = Math.sin(rad),
		        c = Math.cos(rad);
		    out[0] = a0 *  c + a2 * s;
		    out[1] = a1 *  c + a3 * s;
		    out[2] = a0 * -s + a2 * c;
		    out[3] = a1 * -s + a3 * c;
		    out[4] = a4;
		    out[5] = a5;
		    return out;
		};
		
		/**
		 * Scales the mat2d by the dimensions in the given vec2
		 *
		 * @param {mat2d} out the receiving matrix
		 * @param {mat2d} a the matrix to translate
		 * @param {vec2} v the vec2 to scale the matrix by
		 * @returns {mat2d} out
		 **/
		mat2d.scale = function(out, a, v) {
		    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],
		        v0 = v[0], v1 = v[1];
		    out[0] = a0 * v0;
		    out[1] = a1 * v0;
		    out[2] = a2 * v1;
		    out[3] = a3 * v1;
		    out[4] = a4;
		    out[5] = a5;
		    return out;
		};
		
		/**
		 * Translates the mat2d by the dimensions in the given vec2
		 *
		 * @param {mat2d} out the receiving matrix
		 * @param {mat2d} a the matrix to translate
		 * @param {vec2} v the vec2 to translate the matrix by
		 * @returns {mat2d} out
		 **/
		mat2d.translate = function(out, a, v) {
		    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5],
		        v0 = v[0], v1 = v[1];
		    out[0] = a0;
		    out[1] = a1;
		    out[2] = a2;
		    out[3] = a3;
		    out[4] = a0 * v0 + a2 * v1 + a4;
		    out[5] = a1 * v0 + a3 * v1 + a5;
		    return out;
		};
		
		/**
		 * Creates a matrix from a given angle
		 * This is equivalent to (but much faster than):
		 *
		 *     mat2d.identity(dest);
		 *     mat2d.rotate(dest, dest, rad);
		 *
		 * @param {mat2d} out mat2d receiving operation result
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat2d} out
		 */
		mat2d.fromRotation = function(out, rad) {
		    var s = Math.sin(rad), c = Math.cos(rad);
		    out[0] = c;
		    out[1] = s;
		    out[2] = -s;
		    out[3] = c;
		    out[4] = 0;
		    out[5] = 0;
		    return out;
		}
		
		/**
		 * Creates a matrix from a vector scaling
		 * This is equivalent to (but much faster than):
		 *
		 *     mat2d.identity(dest);
		 *     mat2d.scale(dest, dest, vec);
		 *
		 * @param {mat2d} out mat2d receiving operation result
		 * @param {vec2} v Scaling vector
		 * @returns {mat2d} out
		 */
		mat2d.fromScaling = function(out, v) {
		    out[0] = v[0];
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = v[1];
		    out[4] = 0;
		    out[5] = 0;
		    return out;
		}
		
		/**
		 * Creates a matrix from a vector translation
		 * This is equivalent to (but much faster than):
		 *
		 *     mat2d.identity(dest);
		 *     mat2d.translate(dest, dest, vec);
		 *
		 * @param {mat2d} out mat2d receiving operation result
		 * @param {vec2} v Translation vector
		 * @returns {mat2d} out
		 */
		mat2d.fromTranslation = function(out, v) {
		    out[0] = 1;
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 1;
		    out[4] = v[0];
		    out[5] = v[1];
		    return out;
		}
		
		/**
		 * Returns a string representation of a mat2d
		 *
		 * @param {mat2d} a matrix to represent as a string
		 * @returns {String} string representation of the matrix
		 */
		mat2d.str = function (a) {
		    return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + 
		                    a[3] + ', ' + a[4] + ', ' + a[5] + ')';
		};
		
		/**
		 * Returns Frobenius norm of a mat2d
		 *
		 * @param {mat2d} a the matrix to calculate Frobenius norm of
		 * @returns {Number} Frobenius norm
		 */
		mat2d.frob = function (a) { 
		    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1))
		}; 
		
		/**
		 * Adds two mat2d's
		 *
		 * @param {mat2d} out the receiving matrix
		 * @param {mat2d} a the first operand
		 * @param {mat2d} b the second operand
		 * @returns {mat2d} out
		 */
		mat2d.add = function(out, a, b) {
		    out[0] = a[0] + b[0];
		    out[1] = a[1] + b[1];
		    out[2] = a[2] + b[2];
		    out[3] = a[3] + b[3];
		    out[4] = a[4] + b[4];
		    out[5] = a[5] + b[5];
		    return out;
		};
		
		/**
		 * Subtracts matrix b from matrix a
		 *
		 * @param {mat2d} out the receiving matrix
		 * @param {mat2d} a the first operand
		 * @param {mat2d} b the second operand
		 * @returns {mat2d} out
		 */
		mat2d.subtract = function(out, a, b) {
		    out[0] = a[0] - b[0];
		    out[1] = a[1] - b[1];
		    out[2] = a[2] - b[2];
		    out[3] = a[3] - b[3];
		    out[4] = a[4] - b[4];
		    out[5] = a[5] - b[5];
		    return out;
		};
		
		/**
		 * Alias for {@link mat2d.subtract}
		 * @function
		 */
		mat2d.sub = mat2d.subtract;
		
		/**
		 * Multiply each element of the matrix by a scalar.
		 *
		 * @param {mat2d} out the receiving matrix
		 * @param {mat2d} a the matrix to scale
		 * @param {Number} b amount to scale the matrix's elements by
		 * @returns {mat2d} out
		 */
		mat2d.multiplyScalar = function(out, a, b) {
		    out[0] = a[0] * b;
		    out[1] = a[1] * b;
		    out[2] = a[2] * b;
		    out[3] = a[3] * b;
		    out[4] = a[4] * b;
		    out[5] = a[5] * b;
		    return out;
		};
		
		/**
		 * Adds two mat2d's after multiplying each element of the second operand by a scalar value.
		 *
		 * @param {mat2d} out the receiving vector
		 * @param {mat2d} a the first operand
		 * @param {mat2d} b the second operand
		 * @param {Number} scale the amount to scale b's elements by before adding
		 * @returns {mat2d} out
		 */
		mat2d.multiplyScalarAndAdd = function(out, a, b, scale) {
		    out[0] = a[0] + (b[0] * scale);
		    out[1] = a[1] + (b[1] * scale);
		    out[2] = a[2] + (b[2] * scale);
		    out[3] = a[3] + (b[3] * scale);
		    out[4] = a[4] + (b[4] * scale);
		    out[5] = a[5] + (b[5] * scale);
		    return out;
		};
		
		/**
		 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
		 *
		 * @param {mat2d} a The first matrix.
		 * @param {mat2d} b The second matrix.
		 * @returns {Boolean} True if the matrices are equal, false otherwise.
		 */
		mat2d.exactEquals = function (a, b) {
		    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];
		};
		
		/**
		 * Returns whether or not the matrices have approximately the same elements in the same position.
		 *
		 * @param {mat2d} a The first matrix.
		 * @param {mat2d} b The second matrix.
		 * @returns {Boolean} True if the matrices are equal, false otherwise.
		 */
		mat2d.equals = function (a, b) {
		    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5];
		    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5];
		    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
		            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
		            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
		            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&
		            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&
		            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)));
		};
		
		module.exports = mat2d;
	
	
	/***/ },
	/* 8 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
		
		Permission is hereby granted, free of charge, to any person obtaining a copy
		of this software and associated documentation files (the "Software"), to deal
		in the Software without restriction, including without limitation the rights
		to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		copies of the Software, and to permit persons to whom the Software is
		furnished to do so, subject to the following conditions:
		
		The above copyright notice and this permission notice shall be included in
		all copies or substantial portions of the Software.
		
		THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		THE SOFTWARE. */
		
		var glMatrix = __webpack_require__(5);
		
		/**
		 * @class 3x3 Matrix
		 * @name mat3
		 */
		var mat3 = {};
		
		/**
		 * Creates a new identity mat3
		 *
		 * @returns {mat3} a new 3x3 matrix
		 */
		mat3.create = function() {
		    var out = new glMatrix.ARRAY_TYPE(9);
		    out[0] = 1;
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 0;
		    out[4] = 1;
		    out[5] = 0;
		    out[6] = 0;
		    out[7] = 0;
		    out[8] = 1;
		    return out;
		};
		
		/**
		 * Copies the upper-left 3x3 values into the given mat3.
		 *
		 * @param {mat3} out the receiving 3x3 matrix
		 * @param {mat4} a   the source 4x4 matrix
		 * @returns {mat3} out
		 */
		mat3.fromMat4 = function(out, a) {
		    out[0] = a[0];
		    out[1] = a[1];
		    out[2] = a[2];
		    out[3] = a[4];
		    out[4] = a[5];
		    out[5] = a[6];
		    out[6] = a[8];
		    out[7] = a[9];
		    out[8] = a[10];
		    return out;
		};
		
		/**
		 * Creates a new mat3 initialized with values from an existing matrix
		 *
		 * @param {mat3} a matrix to clone
		 * @returns {mat3} a new 3x3 matrix
		 */
		mat3.clone = function(a) {
		    var out = new glMatrix.ARRAY_TYPE(9);
		    out[0] = a[0];
		    out[1] = a[1];
		    out[2] = a[2];
		    out[3] = a[3];
		    out[4] = a[4];
		    out[5] = a[5];
		    out[6] = a[6];
		    out[7] = a[7];
		    out[8] = a[8];
		    return out;
		};
		
		/**
		 * Copy the values from one mat3 to another
		 *
		 * @param {mat3} out the receiving matrix
		 * @param {mat3} a the source matrix
		 * @returns {mat3} out
		 */
		mat3.copy = function(out, a) {
		    out[0] = a[0];
		    out[1] = a[1];
		    out[2] = a[2];
		    out[3] = a[3];
		    out[4] = a[4];
		    out[5] = a[5];
		    out[6] = a[6];
		    out[7] = a[7];
		    out[8] = a[8];
		    return out;
		};
		
		/**
		 * Create a new mat3 with the given values
		 *
		 * @param {Number} m00 Component in column 0, row 0 position (index 0)
		 * @param {Number} m01 Component in column 0, row 1 position (index 1)
		 * @param {Number} m02 Component in column 0, row 2 position (index 2)
		 * @param {Number} m10 Component in column 1, row 0 position (index 3)
		 * @param {Number} m11 Component in column 1, row 1 position (index 4)
		 * @param {Number} m12 Component in column 1, row 2 position (index 5)
		 * @param {Number} m20 Component in column 2, row 0 position (index 6)
		 * @param {Number} m21 Component in column 2, row 1 position (index 7)
		 * @param {Number} m22 Component in column 2, row 2 position (index 8)
		 * @returns {mat3} A new mat3
		 */
		mat3.fromValues = function(m00, m01, m02, m10, m11, m12, m20, m21, m22) {
		    var out = new glMatrix.ARRAY_TYPE(9);
		    out[0] = m00;
		    out[1] = m01;
		    out[2] = m02;
		    out[3] = m10;
		    out[4] = m11;
		    out[5] = m12;
		    out[6] = m20;
		    out[7] = m21;
		    out[8] = m22;
		    return out;
		};
		
		/**
		 * Set the components of a mat3 to the given values
		 *
		 * @param {mat3} out the receiving matrix
		 * @param {Number} m00 Component in column 0, row 0 position (index 0)
		 * @param {Number} m01 Component in column 0, row 1 position (index 1)
		 * @param {Number} m02 Component in column 0, row 2 position (index 2)
		 * @param {Number} m10 Component in column 1, row 0 position (index 3)
		 * @param {Number} m11 Component in column 1, row 1 position (index 4)
		 * @param {Number} m12 Component in column 1, row 2 position (index 5)
		 * @param {Number} m20 Component in column 2, row 0 position (index 6)
		 * @param {Number} m21 Component in column 2, row 1 position (index 7)
		 * @param {Number} m22 Component in column 2, row 2 position (index 8)
		 * @returns {mat3} out
		 */
		mat3.set = function(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {
		    out[0] = m00;
		    out[1] = m01;
		    out[2] = m02;
		    out[3] = m10;
		    out[4] = m11;
		    out[5] = m12;
		    out[6] = m20;
		    out[7] = m21;
		    out[8] = m22;
		    return out;
		};
		
		/**
		 * Set a mat3 to the identity matrix
		 *
		 * @param {mat3} out the receiving matrix
		 * @returns {mat3} out
		 */
		mat3.identity = function(out) {
		    out[0] = 1;
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 0;
		    out[4] = 1;
		    out[5] = 0;
		    out[6] = 0;
		    out[7] = 0;
		    out[8] = 1;
		    return out;
		};
		
		/**
		 * Transpose the values of a mat3
		 *
		 * @param {mat3} out the receiving matrix
		 * @param {mat3} a the source matrix
		 * @returns {mat3} out
		 */
		mat3.transpose = function(out, a) {
		    // If we are transposing ourselves we can skip a few steps but have to cache some values
		    if (out === a) {
		        var a01 = a[1], a02 = a[2], a12 = a[5];
		        out[1] = a[3];
		        out[2] = a[6];
		        out[3] = a01;
		        out[5] = a[7];
		        out[6] = a02;
		        out[7] = a12;
		    } else {
		        out[0] = a[0];
		        out[1] = a[3];
		        out[2] = a[6];
		        out[3] = a[1];
		        out[4] = a[4];
		        out[5] = a[7];
		        out[6] = a[2];
		        out[7] = a[5];
		        out[8] = a[8];
		    }
		    
		    return out;
		};
		
		/**
		 * Inverts a mat3
		 *
		 * @param {mat3} out the receiving matrix
		 * @param {mat3} a the source matrix
		 * @returns {mat3} out
		 */
		mat3.invert = function(out, a) {
		    var a00 = a[0], a01 = a[1], a02 = a[2],
		        a10 = a[3], a11 = a[4], a12 = a[5],
		        a20 = a[6], a21 = a[7], a22 = a[8],
		
		        b01 = a22 * a11 - a12 * a21,
		        b11 = -a22 * a10 + a12 * a20,
		        b21 = a21 * a10 - a11 * a20,
		
		        // Calculate the determinant
		        det = a00 * b01 + a01 * b11 + a02 * b21;
		
		    if (!det) { 
		        return null; 
		    }
		    det = 1.0 / det;
		
		    out[0] = b01 * det;
		    out[1] = (-a22 * a01 + a02 * a21) * det;
		    out[2] = (a12 * a01 - a02 * a11) * det;
		    out[3] = b11 * det;
		    out[4] = (a22 * a00 - a02 * a20) * det;
		    out[5] = (-a12 * a00 + a02 * a10) * det;
		    out[6] = b21 * det;
		    out[7] = (-a21 * a00 + a01 * a20) * det;
		    out[8] = (a11 * a00 - a01 * a10) * det;
		    return out;
		};
		
		/**
		 * Calculates the adjugate of a mat3
		 *
		 * @param {mat3} out the receiving matrix
		 * @param {mat3} a the source matrix
		 * @returns {mat3} out
		 */
		mat3.adjoint = function(out, a) {
		    var a00 = a[0], a01 = a[1], a02 = a[2],
		        a10 = a[3], a11 = a[4], a12 = a[5],
		        a20 = a[6], a21 = a[7], a22 = a[8];
		
		    out[0] = (a11 * a22 - a12 * a21);
		    out[1] = (a02 * a21 - a01 * a22);
		    out[2] = (a01 * a12 - a02 * a11);
		    out[3] = (a12 * a20 - a10 * a22);
		    out[4] = (a00 * a22 - a02 * a20);
		    out[5] = (a02 * a10 - a00 * a12);
		    out[6] = (a10 * a21 - a11 * a20);
		    out[7] = (a01 * a20 - a00 * a21);
		    out[8] = (a00 * a11 - a01 * a10);
		    return out;
		};
		
		/**
		 * Calculates the determinant of a mat3
		 *
		 * @param {mat3} a the source matrix
		 * @returns {Number} determinant of a
		 */
		mat3.determinant = function (a) {
		    var a00 = a[0], a01 = a[1], a02 = a[2],
		        a10 = a[3], a11 = a[4], a12 = a[5],
		        a20 = a[6], a21 = a[7], a22 = a[8];
		
		    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);
		};
		
		/**
		 * Multiplies two mat3's
		 *
		 * @param {mat3} out the receiving matrix
		 * @param {mat3} a the first operand
		 * @param {mat3} b the second operand
		 * @returns {mat3} out
		 */
		mat3.multiply = function (out, a, b) {
		    var a00 = a[0], a01 = a[1], a02 = a[2],
		        a10 = a[3], a11 = a[4], a12 = a[5],
		        a20 = a[6], a21 = a[7], a22 = a[8],
		
		        b00 = b[0], b01 = b[1], b02 = b[2],
		        b10 = b[3], b11 = b[4], b12 = b[5],
		        b20 = b[6], b21 = b[7], b22 = b[8];
		
		    out[0] = b00 * a00 + b01 * a10 + b02 * a20;
		    out[1] = b00 * a01 + b01 * a11 + b02 * a21;
		    out[2] = b00 * a02 + b01 * a12 + b02 * a22;
		
		    out[3] = b10 * a00 + b11 * a10 + b12 * a20;
		    out[4] = b10 * a01 + b11 * a11 + b12 * a21;
		    out[5] = b10 * a02 + b11 * a12 + b12 * a22;
		
		    out[6] = b20 * a00 + b21 * a10 + b22 * a20;
		    out[7] = b20 * a01 + b21 * a11 + b22 * a21;
		    out[8] = b20 * a02 + b21 * a12 + b22 * a22;
		    return out;
		};
		
		/**
		 * Alias for {@link mat3.multiply}
		 * @function
		 */
		mat3.mul = mat3.multiply;
		
		/**
		 * Translate a mat3 by the given vector
		 *
		 * @param {mat3} out the receiving matrix
		 * @param {mat3} a the matrix to translate
		 * @param {vec2} v vector to translate by
		 * @returns {mat3} out
		 */
		mat3.translate = function(out, a, v) {
		    var a00 = a[0], a01 = a[1], a02 = a[2],
		        a10 = a[3], a11 = a[4], a12 = a[5],
		        a20 = a[6], a21 = a[7], a22 = a[8],
		        x = v[0], y = v[1];
		
		    out[0] = a00;
		    out[1] = a01;
		    out[2] = a02;
		
		    out[3] = a10;
		    out[4] = a11;
		    out[5] = a12;
		
		    out[6] = x * a00 + y * a10 + a20;
		    out[7] = x * a01 + y * a11 + a21;
		    out[8] = x * a02 + y * a12 + a22;
		    return out;
		};
		
		/**
		 * Rotates a mat3 by the given angle
		 *
		 * @param {mat3} out the receiving matrix
		 * @param {mat3} a the matrix to rotate
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat3} out
		 */
		mat3.rotate = function (out, a, rad) {
		    var a00 = a[0], a01 = a[1], a02 = a[2],
		        a10 = a[3], a11 = a[4], a12 = a[5],
		        a20 = a[6], a21 = a[7], a22 = a[8],
		
		        s = Math.sin(rad),
		        c = Math.cos(rad);
		
		    out[0] = c * a00 + s * a10;
		    out[1] = c * a01 + s * a11;
		    out[2] = c * a02 + s * a12;
		
		    out[3] = c * a10 - s * a00;
		    out[4] = c * a11 - s * a01;
		    out[5] = c * a12 - s * a02;
		
		    out[6] = a20;
		    out[7] = a21;
		    out[8] = a22;
		    return out;
		};
		
		/**
		 * Scales the mat3 by the dimensions in the given vec2
		 *
		 * @param {mat3} out the receiving matrix
		 * @param {mat3} a the matrix to rotate
		 * @param {vec2} v the vec2 to scale the matrix by
		 * @returns {mat3} out
		 **/
		mat3.scale = function(out, a, v) {
		    var x = v[0], y = v[1];
		
		    out[0] = x * a[0];
		    out[1] = x * a[1];
		    out[2] = x * a[2];
		
		    out[3] = y * a[3];
		    out[4] = y * a[4];
		    out[5] = y * a[5];
		
		    out[6] = a[6];
		    out[7] = a[7];
		    out[8] = a[8];
		    return out;
		};
		
		/**
		 * Creates a matrix from a vector translation
		 * This is equivalent to (but much faster than):
		 *
		 *     mat3.identity(dest);
		 *     mat3.translate(dest, dest, vec);
		 *
		 * @param {mat3} out mat3 receiving operation result
		 * @param {vec2} v Translation vector
		 * @returns {mat3} out
		 */
		mat3.fromTranslation = function(out, v) {
		    out[0] = 1;
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 0;
		    out[4] = 1;
		    out[5] = 0;
		    out[6] = v[0];
		    out[7] = v[1];
		    out[8] = 1;
		    return out;
		}
		
		/**
		 * Creates a matrix from a given angle
		 * This is equivalent to (but much faster than):
		 *
		 *     mat3.identity(dest);
		 *     mat3.rotate(dest, dest, rad);
		 *
		 * @param {mat3} out mat3 receiving operation result
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat3} out
		 */
		mat3.fromRotation = function(out, rad) {
		    var s = Math.sin(rad), c = Math.cos(rad);
		
		    out[0] = c;
		    out[1] = s;
		    out[2] = 0;
		
		    out[3] = -s;
		    out[4] = c;
		    out[5] = 0;
		
		    out[6] = 0;
		    out[7] = 0;
		    out[8] = 1;
		    return out;
		}
		
		/**
		 * Creates a matrix from a vector scaling
		 * This is equivalent to (but much faster than):
		 *
		 *     mat3.identity(dest);
		 *     mat3.scale(dest, dest, vec);
		 *
		 * @param {mat3} out mat3 receiving operation result
		 * @param {vec2} v Scaling vector
		 * @returns {mat3} out
		 */
		mat3.fromScaling = function(out, v) {
		    out[0] = v[0];
		    out[1] = 0;
		    out[2] = 0;
		
		    out[3] = 0;
		    out[4] = v[1];
		    out[5] = 0;
		
		    out[6] = 0;
		    out[7] = 0;
		    out[8] = 1;
		    return out;
		}
		
		/**
		 * Copies the values from a mat2d into a mat3
		 *
		 * @param {mat3} out the receiving matrix
		 * @param {mat2d} a the matrix to copy
		 * @returns {mat3} out
		 **/
		mat3.fromMat2d = function(out, a) {
		    out[0] = a[0];
		    out[1] = a[1];
		    out[2] = 0;
		
		    out[3] = a[2];
		    out[4] = a[3];
		    out[5] = 0;
		
		    out[6] = a[4];
		    out[7] = a[5];
		    out[8] = 1;
		    return out;
		};
		
		/**
		* Calculates a 3x3 matrix from the given quaternion
		*
		* @param {mat3} out mat3 receiving operation result
		* @param {quat} q Quaternion to create matrix from
		*
		* @returns {mat3} out
		*/
		mat3.fromQuat = function (out, q) {
		    var x = q[0], y = q[1], z = q[2], w = q[3],
		        x2 = x + x,
		        y2 = y + y,
		        z2 = z + z,
		
		        xx = x * x2,
		        yx = y * x2,
		        yy = y * y2,
		        zx = z * x2,
		        zy = z * y2,
		        zz = z * z2,
		        wx = w * x2,
		        wy = w * y2,
		        wz = w * z2;
		
		    out[0] = 1 - yy - zz;
		    out[3] = yx - wz;
		    out[6] = zx + wy;
		
		    out[1] = yx + wz;
		    out[4] = 1 - xx - zz;
		    out[7] = zy - wx;
		
		    out[2] = zx - wy;
		    out[5] = zy + wx;
		    out[8] = 1 - xx - yy;
		
		    return out;
		};
		
		/**
		* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix
		*
		* @param {mat3} out mat3 receiving operation result
		* @param {mat4} a Mat4 to derive the normal matrix from
		*
		* @returns {mat3} out
		*/
		mat3.normalFromMat4 = function (out, a) {
		    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
		        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
		        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
		        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],
		
		        b00 = a00 * a11 - a01 * a10,
		        b01 = a00 * a12 - a02 * a10,
		        b02 = a00 * a13 - a03 * a10,
		        b03 = a01 * a12 - a02 * a11,
		        b04 = a01 * a13 - a03 * a11,
		        b05 = a02 * a13 - a03 * a12,
		        b06 = a20 * a31 - a21 * a30,
		        b07 = a20 * a32 - a22 * a30,
		        b08 = a20 * a33 - a23 * a30,
		        b09 = a21 * a32 - a22 * a31,
		        b10 = a21 * a33 - a23 * a31,
		        b11 = a22 * a33 - a23 * a32,
		
		        // Calculate the determinant
		        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		
		    if (!det) { 
		        return null; 
		    }
		    det = 1.0 / det;
		
		    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;
		    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;
		    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;
		
		    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;
		    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;
		    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;
		
		    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;
		    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;
		    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;
		
		    return out;
		};
		
		/**
		 * Returns a string representation of a mat3
		 *
		 * @param {mat3} mat matrix to represent as a string
		 * @returns {String} string representation of the matrix
		 */
		mat3.str = function (a) {
		    return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + 
		                    a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + 
		                    a[6] + ', ' + a[7] + ', ' + a[8] + ')';
		};
		
		/**
		 * Returns Frobenius norm of a mat3
		 *
		 * @param {mat3} a the matrix to calculate Frobenius norm of
		 * @returns {Number} Frobenius norm
		 */
		mat3.frob = function (a) {
		    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2)))
		};
		
		/**
		 * Adds two mat3's
		 *
		 * @param {mat3} out the receiving matrix
		 * @param {mat3} a the first operand
		 * @param {mat3} b the second operand
		 * @returns {mat3} out
		 */
		mat3.add = function(out, a, b) {
		    out[0] = a[0] + b[0];
		    out[1] = a[1] + b[1];
		    out[2] = a[2] + b[2];
		    out[3] = a[3] + b[3];
		    out[4] = a[4] + b[4];
		    out[5] = a[5] + b[5];
		    out[6] = a[6] + b[6];
		    out[7] = a[7] + b[7];
		    out[8] = a[8] + b[8];
		    return out;
		};
		
		/**
		 * Subtracts matrix b from matrix a
		 *
		 * @param {mat3} out the receiving matrix
		 * @param {mat3} a the first operand
		 * @param {mat3} b the second operand
		 * @returns {mat3} out
		 */
		mat3.subtract = function(out, a, b) {
		    out[0] = a[0] - b[0];
		    out[1] = a[1] - b[1];
		    out[2] = a[2] - b[2];
		    out[3] = a[3] - b[3];
		    out[4] = a[4] - b[4];
		    out[5] = a[5] - b[5];
		    out[6] = a[6] - b[6];
		    out[7] = a[7] - b[7];
		    out[8] = a[8] - b[8];
		    return out;
		};
		
		/**
		 * Alias for {@link mat3.subtract}
		 * @function
		 */
		mat3.sub = mat3.subtract;
		
		/**
		 * Multiply each element of the matrix by a scalar.
		 *
		 * @param {mat3} out the receiving matrix
		 * @param {mat3} a the matrix to scale
		 * @param {Number} b amount to scale the matrix's elements by
		 * @returns {mat3} out
		 */
		mat3.multiplyScalar = function(out, a, b) {
		    out[0] = a[0] * b;
		    out[1] = a[1] * b;
		    out[2] = a[2] * b;
		    out[3] = a[3] * b;
		    out[4] = a[4] * b;
		    out[5] = a[5] * b;
		    out[6] = a[6] * b;
		    out[7] = a[7] * b;
		    out[8] = a[8] * b;
		    return out;
		};
		
		/**
		 * Adds two mat3's after multiplying each element of the second operand by a scalar value.
		 *
		 * @param {mat3} out the receiving vector
		 * @param {mat3} a the first operand
		 * @param {mat3} b the second operand
		 * @param {Number} scale the amount to scale b's elements by before adding
		 * @returns {mat3} out
		 */
		mat3.multiplyScalarAndAdd = function(out, a, b, scale) {
		    out[0] = a[0] + (b[0] * scale);
		    out[1] = a[1] + (b[1] * scale);
		    out[2] = a[2] + (b[2] * scale);
		    out[3] = a[3] + (b[3] * scale);
		    out[4] = a[4] + (b[4] * scale);
		    out[5] = a[5] + (b[5] * scale);
		    out[6] = a[6] + (b[6] * scale);
		    out[7] = a[7] + (b[7] * scale);
		    out[8] = a[8] + (b[8] * scale);
		    return out;
		};
		
		/*
		 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
		 *
		 * @param {mat3} a The first matrix.
		 * @param {mat3} b The second matrix.
		 * @returns {Boolean} True if the matrices are equal, false otherwise.
		 */
		mat3.exactEquals = function (a, b) {
		    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && 
		           a[3] === b[3] && a[4] === b[4] && a[5] === b[5] &&
		           a[6] === b[6] && a[7] === b[7] && a[8] === b[8];
		};
		
		/**
		 * Returns whether or not the matrices have approximately the same elements in the same position.
		 *
		 * @param {mat3} a The first matrix.
		 * @param {mat3} b The second matrix.
		 * @returns {Boolean} True if the matrices are equal, false otherwise.
		 */
		mat3.equals = function (a, b) {
		    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3], a4 = a[4], a5 = a[5], a6 = a[6], a7 = a[7], a8 = a[8];
		    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = a[6], b7 = b[7], b8 = b[8];
		    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
		            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
		            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
		            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&
		            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&
		            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&
		            Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&
		            Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&
		            Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)));
		};
		
		
		module.exports = mat3;
	
	
	/***/ },
	/* 9 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
		
		Permission is hereby granted, free of charge, to any person obtaining a copy
		of this software and associated documentation files (the "Software"), to deal
		in the Software without restriction, including without limitation the rights
		to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		copies of the Software, and to permit persons to whom the Software is
		furnished to do so, subject to the following conditions:
		
		The above copyright notice and this permission notice shall be included in
		all copies or substantial portions of the Software.
		
		THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		THE SOFTWARE. */
		
		var glMatrix = __webpack_require__(5);
		
		/**
		 * @class 4x4 Matrix
		 * @name mat4
		 */
		var mat4 = {
		  scalar: {},
		  SIMD: {},
		};
		
		/**
		 * Creates a new identity mat4
		 *
		 * @returns {mat4} a new 4x4 matrix
		 */
		mat4.create = function() {
		    var out = new glMatrix.ARRAY_TYPE(16);
		    out[0] = 1;
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 0;
		    out[4] = 0;
		    out[5] = 1;
		    out[6] = 0;
		    out[7] = 0;
		    out[8] = 0;
		    out[9] = 0;
		    out[10] = 1;
		    out[11] = 0;
		    out[12] = 0;
		    out[13] = 0;
		    out[14] = 0;
		    out[15] = 1;
		    return out;
		};
		
		/**
		 * Creates a new mat4 initialized with values from an existing matrix
		 *
		 * @param {mat4} a matrix to clone
		 * @returns {mat4} a new 4x4 matrix
		 */
		mat4.clone = function(a) {
		    var out = new glMatrix.ARRAY_TYPE(16);
		    out[0] = a[0];
		    out[1] = a[1];
		    out[2] = a[2];
		    out[3] = a[3];
		    out[4] = a[4];
		    out[5] = a[5];
		    out[6] = a[6];
		    out[7] = a[7];
		    out[8] = a[8];
		    out[9] = a[9];
		    out[10] = a[10];
		    out[11] = a[11];
		    out[12] = a[12];
		    out[13] = a[13];
		    out[14] = a[14];
		    out[15] = a[15];
		    return out;
		};
		
		/**
		 * Copy the values from one mat4 to another
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the source matrix
		 * @returns {mat4} out
		 */
		mat4.copy = function(out, a) {
		    out[0] = a[0];
		    out[1] = a[1];
		    out[2] = a[2];
		    out[3] = a[3];
		    out[4] = a[4];
		    out[5] = a[5];
		    out[6] = a[6];
		    out[7] = a[7];
		    out[8] = a[8];
		    out[9] = a[9];
		    out[10] = a[10];
		    out[11] = a[11];
		    out[12] = a[12];
		    out[13] = a[13];
		    out[14] = a[14];
		    out[15] = a[15];
		    return out;
		};
		
		/**
		 * Create a new mat4 with the given values
		 *
		 * @param {Number} m00 Component in column 0, row 0 position (index 0)
		 * @param {Number} m01 Component in column 0, row 1 position (index 1)
		 * @param {Number} m02 Component in column 0, row 2 position (index 2)
		 * @param {Number} m03 Component in column 0, row 3 position (index 3)
		 * @param {Number} m10 Component in column 1, row 0 position (index 4)
		 * @param {Number} m11 Component in column 1, row 1 position (index 5)
		 * @param {Number} m12 Component in column 1, row 2 position (index 6)
		 * @param {Number} m13 Component in column 1, row 3 position (index 7)
		 * @param {Number} m20 Component in column 2, row 0 position (index 8)
		 * @param {Number} m21 Component in column 2, row 1 position (index 9)
		 * @param {Number} m22 Component in column 2, row 2 position (index 10)
		 * @param {Number} m23 Component in column 2, row 3 position (index 11)
		 * @param {Number} m30 Component in column 3, row 0 position (index 12)
		 * @param {Number} m31 Component in column 3, row 1 position (index 13)
		 * @param {Number} m32 Component in column 3, row 2 position (index 14)
		 * @param {Number} m33 Component in column 3, row 3 position (index 15)
		 * @returns {mat4} A new mat4
		 */
		mat4.fromValues = function(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
		    var out = new glMatrix.ARRAY_TYPE(16);
		    out[0] = m00;
		    out[1] = m01;
		    out[2] = m02;
		    out[3] = m03;
		    out[4] = m10;
		    out[5] = m11;
		    out[6] = m12;
		    out[7] = m13;
		    out[8] = m20;
		    out[9] = m21;
		    out[10] = m22;
		    out[11] = m23;
		    out[12] = m30;
		    out[13] = m31;
		    out[14] = m32;
		    out[15] = m33;
		    return out;
		};
		
		/**
		 * Set the components of a mat4 to the given values
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {Number} m00 Component in column 0, row 0 position (index 0)
		 * @param {Number} m01 Component in column 0, row 1 position (index 1)
		 * @param {Number} m02 Component in column 0, row 2 position (index 2)
		 * @param {Number} m03 Component in column 0, row 3 position (index 3)
		 * @param {Number} m10 Component in column 1, row 0 position (index 4)
		 * @param {Number} m11 Component in column 1, row 1 position (index 5)
		 * @param {Number} m12 Component in column 1, row 2 position (index 6)
		 * @param {Number} m13 Component in column 1, row 3 position (index 7)
		 * @param {Number} m20 Component in column 2, row 0 position (index 8)
		 * @param {Number} m21 Component in column 2, row 1 position (index 9)
		 * @param {Number} m22 Component in column 2, row 2 position (index 10)
		 * @param {Number} m23 Component in column 2, row 3 position (index 11)
		 * @param {Number} m30 Component in column 3, row 0 position (index 12)
		 * @param {Number} m31 Component in column 3, row 1 position (index 13)
		 * @param {Number} m32 Component in column 3, row 2 position (index 14)
		 * @param {Number} m33 Component in column 3, row 3 position (index 15)
		 * @returns {mat4} out
		 */
		mat4.set = function(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
		    out[0] = m00;
		    out[1] = m01;
		    out[2] = m02;
		    out[3] = m03;
		    out[4] = m10;
		    out[5] = m11;
		    out[6] = m12;
		    out[7] = m13;
		    out[8] = m20;
		    out[9] = m21;
		    out[10] = m22;
		    out[11] = m23;
		    out[12] = m30;
		    out[13] = m31;
		    out[14] = m32;
		    out[15] = m33;
		    return out;
		};
		
		
		/**
		 * Set a mat4 to the identity matrix
		 *
		 * @param {mat4} out the receiving matrix
		 * @returns {mat4} out
		 */
		mat4.identity = function(out) {
		    out[0] = 1;
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 0;
		    out[4] = 0;
		    out[5] = 1;
		    out[6] = 0;
		    out[7] = 0;
		    out[8] = 0;
		    out[9] = 0;
		    out[10] = 1;
		    out[11] = 0;
		    out[12] = 0;
		    out[13] = 0;
		    out[14] = 0;
		    out[15] = 1;
		    return out;
		};
		
		/**
		 * Transpose the values of a mat4 not using SIMD
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the source matrix
		 * @returns {mat4} out
		 */
		mat4.scalar.transpose = function(out, a) {
		    // If we are transposing ourselves we can skip a few steps but have to cache some values
		    if (out === a) {
		        var a01 = a[1], a02 = a[2], a03 = a[3],
		            a12 = a[6], a13 = a[7],
		            a23 = a[11];
		
		        out[1] = a[4];
		        out[2] = a[8];
		        out[3] = a[12];
		        out[4] = a01;
		        out[6] = a[9];
		        out[7] = a[13];
		        out[8] = a02;
		        out[9] = a12;
		        out[11] = a[14];
		        out[12] = a03;
		        out[13] = a13;
		        out[14] = a23;
		    } else {
		        out[0] = a[0];
		        out[1] = a[4];
		        out[2] = a[8];
		        out[3] = a[12];
		        out[4] = a[1];
		        out[5] = a[5];
		        out[6] = a[9];
		        out[7] = a[13];
		        out[8] = a[2];
		        out[9] = a[6];
		        out[10] = a[10];
		        out[11] = a[14];
		        out[12] = a[3];
		        out[13] = a[7];
		        out[14] = a[11];
		        out[15] = a[15];
		    }
		
		    return out;
		};
		
		/**
		 * Transpose the values of a mat4 using SIMD
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the source matrix
		 * @returns {mat4} out
		 */
		mat4.SIMD.transpose = function(out, a) {
		    var a0, a1, a2, a3,
		        tmp01, tmp23,
		        out0, out1, out2, out3;
		
		    a0 = SIMD.Float32x4.load(a, 0);
		    a1 = SIMD.Float32x4.load(a, 4);
		    a2 = SIMD.Float32x4.load(a, 8);
		    a3 = SIMD.Float32x4.load(a, 12);
		
		    tmp01 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);
		    tmp23 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);
		    out0  = SIMD.Float32x4.shuffle(tmp01, tmp23, 0, 2, 4, 6);
		    out1  = SIMD.Float32x4.shuffle(tmp01, tmp23, 1, 3, 5, 7);
		    SIMD.Float32x4.store(out, 0,  out0);
		    SIMD.Float32x4.store(out, 4,  out1);
		
		    tmp01 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);
		    tmp23 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);
		    out2  = SIMD.Float32x4.shuffle(tmp01, tmp23, 0, 2, 4, 6);
		    out3  = SIMD.Float32x4.shuffle(tmp01, tmp23, 1, 3, 5, 7);
		    SIMD.Float32x4.store(out, 8,  out2);
		    SIMD.Float32x4.store(out, 12, out3);
		
		    return out;
		};
		
		/**
		 * Transpse a mat4 using SIMD if available and enabled
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the source matrix
		 * @returns {mat4} out
		 */
		mat4.transpose = glMatrix.USE_SIMD ? mat4.SIMD.transpose : mat4.scalar.transpose;
		
		/**
		 * Inverts a mat4 not using SIMD
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the source matrix
		 * @returns {mat4} out
		 */
		mat4.scalar.invert = function(out, a) {
		    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
		        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
		        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
		        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],
		
		        b00 = a00 * a11 - a01 * a10,
		        b01 = a00 * a12 - a02 * a10,
		        b02 = a00 * a13 - a03 * a10,
		        b03 = a01 * a12 - a02 * a11,
		        b04 = a01 * a13 - a03 * a11,
		        b05 = a02 * a13 - a03 * a12,
		        b06 = a20 * a31 - a21 * a30,
		        b07 = a20 * a32 - a22 * a30,
		        b08 = a20 * a33 - a23 * a30,
		        b09 = a21 * a32 - a22 * a31,
		        b10 = a21 * a33 - a23 * a31,
		        b11 = a22 * a33 - a23 * a32,
		
		        // Calculate the determinant
		        det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		
		    if (!det) {
		        return null;
		    }
		    det = 1.0 / det;
		
		    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;
		    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;
		    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;
		    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;
		    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;
		    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;
		    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;
		    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;
		    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;
		    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;
		    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;
		    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;
		    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;
		    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;
		    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;
		    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;
		
		    return out;
		};
		
		/**
		 * Inverts a mat4 using SIMD
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the source matrix
		 * @returns {mat4} out
		 */
		mat4.SIMD.invert = function(out, a) {
		  var row0, row1, row2, row3,
		      tmp1,
		      minor0, minor1, minor2, minor3,
		      det,
		      a0 = SIMD.Float32x4.load(a, 0),
		      a1 = SIMD.Float32x4.load(a, 4),
		      a2 = SIMD.Float32x4.load(a, 8),
		      a3 = SIMD.Float32x4.load(a, 12);
		
		  // Compute matrix adjugate
		  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);
		  row1 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);
		  row0 = SIMD.Float32x4.shuffle(tmp1, row1, 0, 2, 4, 6);
		  row1 = SIMD.Float32x4.shuffle(row1, tmp1, 1, 3, 5, 7);
		  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);
		  row3 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);
		  row2 = SIMD.Float32x4.shuffle(tmp1, row3, 0, 2, 4, 6);
		  row3 = SIMD.Float32x4.shuffle(row3, tmp1, 1, 3, 5, 7);
		
		  tmp1   = SIMD.Float32x4.mul(row2, row3);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
		  minor0 = SIMD.Float32x4.mul(row1, tmp1);
		  minor1 = SIMD.Float32x4.mul(row0, tmp1);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
		  minor0 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row1, tmp1), minor0);
		  minor1 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor1);
		  minor1 = SIMD.Float32x4.swizzle(minor1, 2, 3, 0, 1);
		
		  tmp1   = SIMD.Float32x4.mul(row1, row2);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
		  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor0);
		  minor3 = SIMD.Float32x4.mul(row0, tmp1);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
		  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row3, tmp1));
		  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor3);
		  minor3 = SIMD.Float32x4.swizzle(minor3, 2, 3, 0, 1);
		
		  tmp1   = SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(row1, 2, 3, 0, 1), row3);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
		  row2   = SIMD.Float32x4.swizzle(row2, 2, 3, 0, 1);
		  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor0);
		  minor2 = SIMD.Float32x4.mul(row0, tmp1);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
		  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row2, tmp1));
		  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor2);
		  minor2 = SIMD.Float32x4.swizzle(minor2, 2, 3, 0, 1);
		
		  tmp1   = SIMD.Float32x4.mul(row0, row1);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
		  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor2);
		  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row2, tmp1), minor3);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
		  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row3, tmp1), minor2);
		  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row2, tmp1));
		
		  tmp1   = SIMD.Float32x4.mul(row0, row3);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
		  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row2, tmp1));
		  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor2);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
		  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor1);
		  minor2 = SIMD.Float32x4.sub(minor2, SIMD.Float32x4.mul(row1, tmp1));
		
		  tmp1   = SIMD.Float32x4.mul(row0, row2);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
		  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor1);
		  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row1, tmp1));
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
		  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row3, tmp1));
		  minor3 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor3);
		
		  // Compute matrix determinant
		  det   = SIMD.Float32x4.mul(row0, minor0);
		  det   = SIMD.Float32x4.add(SIMD.Float32x4.swizzle(det, 2, 3, 0, 1), det);
		  det   = SIMD.Float32x4.add(SIMD.Float32x4.swizzle(det, 1, 0, 3, 2), det);
		  tmp1  = SIMD.Float32x4.reciprocalApproximation(det);
		  det   = SIMD.Float32x4.sub(
		               SIMD.Float32x4.add(tmp1, tmp1),
		               SIMD.Float32x4.mul(det, SIMD.Float32x4.mul(tmp1, tmp1)));
		  det   = SIMD.Float32x4.swizzle(det, 0, 0, 0, 0);
		  if (!det) {
		      return null;
		  }
		
		  // Compute matrix inverse
		  SIMD.Float32x4.store(out, 0,  SIMD.Float32x4.mul(det, minor0));
		  SIMD.Float32x4.store(out, 4,  SIMD.Float32x4.mul(det, minor1));
		  SIMD.Float32x4.store(out, 8,  SIMD.Float32x4.mul(det, minor2));
		  SIMD.Float32x4.store(out, 12, SIMD.Float32x4.mul(det, minor3));
		  return out;
		}
		
		/**
		 * Inverts a mat4 using SIMD if available and enabled
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the source matrix
		 * @returns {mat4} out
		 */
		mat4.invert = glMatrix.USE_SIMD ? mat4.SIMD.invert : mat4.scalar.invert;
		
		/**
		 * Calculates the adjugate of a mat4 not using SIMD
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the source matrix
		 * @returns {mat4} out
		 */
		mat4.scalar.adjoint = function(out, a) {
		    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
		        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
		        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
		        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];
		
		    out[0]  =  (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));
		    out[1]  = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));
		    out[2]  =  (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));
		    out[3]  = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));
		    out[4]  = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));
		    out[5]  =  (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));
		    out[6]  = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));
		    out[7]  =  (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));
		    out[8]  =  (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));
		    out[9]  = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));
		    out[10] =  (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));
		    out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));
		    out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));
		    out[13] =  (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));
		    out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));
		    out[15] =  (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));
		    return out;
		};
		
		/**
		 * Calculates the adjugate of a mat4 using SIMD
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the source matrix
		 * @returns {mat4} out
		 */
		mat4.SIMD.adjoint = function(out, a) {
		  var a0, a1, a2, a3;
		  var row0, row1, row2, row3;
		  var tmp1;
		  var minor0, minor1, minor2, minor3;
		
		  var a0 = SIMD.Float32x4.load(a, 0);
		  var a1 = SIMD.Float32x4.load(a, 4);
		  var a2 = SIMD.Float32x4.load(a, 8);
		  var a3 = SIMD.Float32x4.load(a, 12);
		
		  // Transpose the source matrix.  Sort of.  Not a true transpose operation
		  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 0, 1, 4, 5);
		  row1 = SIMD.Float32x4.shuffle(a2, a3, 0, 1, 4, 5);
		  row0 = SIMD.Float32x4.shuffle(tmp1, row1, 0, 2, 4, 6);
		  row1 = SIMD.Float32x4.shuffle(row1, tmp1, 1, 3, 5, 7);
		
		  tmp1 = SIMD.Float32x4.shuffle(a0, a1, 2, 3, 6, 7);
		  row3 = SIMD.Float32x4.shuffle(a2, a3, 2, 3, 6, 7);
		  row2 = SIMD.Float32x4.shuffle(tmp1, row3, 0, 2, 4, 6);
		  row3 = SIMD.Float32x4.shuffle(row3, tmp1, 1, 3, 5, 7);
		
		  tmp1   = SIMD.Float32x4.mul(row2, row3);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
		  minor0 = SIMD.Float32x4.mul(row1, tmp1);
		  minor1 = SIMD.Float32x4.mul(row0, tmp1);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
		  minor0 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row1, tmp1), minor0);
		  minor1 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor1);
		  minor1 = SIMD.Float32x4.swizzle(minor1, 2, 3, 0, 1);
		
		  tmp1   = SIMD.Float32x4.mul(row1, row2);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
		  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor0);
		  minor3 = SIMD.Float32x4.mul(row0, tmp1);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
		  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row3, tmp1));
		  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor3);
		  minor3 = SIMD.Float32x4.swizzle(minor3, 2, 3, 0, 1);
		
		  tmp1   = SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(row1, 2, 3, 0, 1), row3);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
		  row2   = SIMD.Float32x4.swizzle(row2, 2, 3, 0, 1);
		  minor0 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor0);
		  minor2 = SIMD.Float32x4.mul(row0, tmp1);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
		  minor0 = SIMD.Float32x4.sub(minor0, SIMD.Float32x4.mul(row2, tmp1));
		  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row0, tmp1), minor2);
		  minor2 = SIMD.Float32x4.swizzle(minor2, 2, 3, 0, 1);
		
		  tmp1   = SIMD.Float32x4.mul(row0, row1);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
		  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor2);
		  minor3 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row2, tmp1), minor3);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
		  minor2 = SIMD.Float32x4.sub(SIMD.Float32x4.mul(row3, tmp1), minor2);
		  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row2, tmp1));
		
		  tmp1   = SIMD.Float32x4.mul(row0, row3);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
		  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row2, tmp1));
		  minor2 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor2);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
		  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row2, tmp1), minor1);
		  minor2 = SIMD.Float32x4.sub(minor2, SIMD.Float32x4.mul(row1, tmp1));
		
		  tmp1   = SIMD.Float32x4.mul(row0, row2);
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 1, 0, 3, 2);
		  minor1 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row3, tmp1), minor1);
		  minor3 = SIMD.Float32x4.sub(minor3, SIMD.Float32x4.mul(row1, tmp1));
		  tmp1   = SIMD.Float32x4.swizzle(tmp1, 2, 3, 0, 1);
		  minor1 = SIMD.Float32x4.sub(minor1, SIMD.Float32x4.mul(row3, tmp1));
		  minor3 = SIMD.Float32x4.add(SIMD.Float32x4.mul(row1, tmp1), minor3);
		
		  SIMD.Float32x4.store(out, 0,  minor0);
		  SIMD.Float32x4.store(out, 4,  minor1);
		  SIMD.Float32x4.store(out, 8,  minor2);
		  SIMD.Float32x4.store(out, 12, minor3);
		  return out;
		};
		
		/**
		 * Calculates the adjugate of a mat4 using SIMD if available and enabled
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the source matrix
		 * @returns {mat4} out
		 */
		 mat4.adjoint = glMatrix.USE_SIMD ? mat4.SIMD.adjoint : mat4.scalar.adjoint;
		
		/**
		 * Calculates the determinant of a mat4
		 *
		 * @param {mat4} a the source matrix
		 * @returns {Number} determinant of a
		 */
		mat4.determinant = function (a) {
		    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
		        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
		        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
		        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15],
		
		        b00 = a00 * a11 - a01 * a10,
		        b01 = a00 * a12 - a02 * a10,
		        b02 = a00 * a13 - a03 * a10,
		        b03 = a01 * a12 - a02 * a11,
		        b04 = a01 * a13 - a03 * a11,
		        b05 = a02 * a13 - a03 * a12,
		        b06 = a20 * a31 - a21 * a30,
		        b07 = a20 * a32 - a22 * a30,
		        b08 = a20 * a33 - a23 * a30,
		        b09 = a21 * a32 - a22 * a31,
		        b10 = a21 * a33 - a23 * a31,
		        b11 = a22 * a33 - a23 * a32;
		
		    // Calculate the determinant
		    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
		};
		
		/**
		 * Multiplies two mat4's explicitly using SIMD
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the first operand, must be a Float32Array
		 * @param {mat4} b the second operand, must be a Float32Array
		 * @returns {mat4} out
		 */
		mat4.SIMD.multiply = function (out, a, b) {
		    var a0 = SIMD.Float32x4.load(a, 0);
		    var a1 = SIMD.Float32x4.load(a, 4);
		    var a2 = SIMD.Float32x4.load(a, 8);
		    var a3 = SIMD.Float32x4.load(a, 12);
		
		    var b0 = SIMD.Float32x4.load(b, 0);
		    var out0 = SIMD.Float32x4.add(
		                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 0, 0, 0, 0), a0),
		                   SIMD.Float32x4.add(
		                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 1, 1, 1, 1), a1),
		                       SIMD.Float32x4.add(
		                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 2, 2, 2, 2), a2),
		                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b0, 3, 3, 3, 3), a3))));
		    SIMD.Float32x4.store(out, 0, out0);
		
		    var b1 = SIMD.Float32x4.load(b, 4);
		    var out1 = SIMD.Float32x4.add(
		                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 0, 0, 0, 0), a0),
		                   SIMD.Float32x4.add(
		                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 1, 1, 1, 1), a1),
		                       SIMD.Float32x4.add(
		                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 2, 2, 2, 2), a2),
		                           SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b1, 3, 3, 3, 3), a3))));
		    SIMD.Float32x4.store(out, 4, out1);
		
		    var b2 = SIMD.Float32x4.load(b, 8);
		    var out2 = SIMD.Float32x4.add(
		                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 0, 0, 0, 0), a0),
		                   SIMD.Float32x4.add(
		                       SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 1, 1, 1, 1), a1),
		                       SIMD.Float32x4.add(
		                               SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 2, 2, 2, 2), a2),
		                               SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b2, 3, 3, 3, 3), a3))));
		    SIMD.Float32x4.store(out, 8, out2);
		
		    var b3 = SIMD.Float32x4.load(b, 12);
		    var out3 = SIMD.Float32x4.add(
		                   SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 0, 0, 0, 0), a0),
		                   SIMD.Float32x4.add(
		                        SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 1, 1, 1, 1), a1),
		                        SIMD.Float32x4.add(
		                            SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 2, 2, 2, 2), a2),
		                            SIMD.Float32x4.mul(SIMD.Float32x4.swizzle(b3, 3, 3, 3, 3), a3))));
		    SIMD.Float32x4.store(out, 12, out3);
		
		    return out;
		};
		
		/**
		 * Multiplies two mat4's explicitly not using SIMD
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the first operand
		 * @param {mat4} b the second operand
		 * @returns {mat4} out
		 */
		mat4.scalar.multiply = function (out, a, b) {
		    var a00 = a[0], a01 = a[1], a02 = a[2], a03 = a[3],
		        a10 = a[4], a11 = a[5], a12 = a[6], a13 = a[7],
		        a20 = a[8], a21 = a[9], a22 = a[10], a23 = a[11],
		        a30 = a[12], a31 = a[13], a32 = a[14], a33 = a[15];
		
		    // Cache only the current line of the second matrix
		    var b0  = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
		    out[0] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
		    out[1] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
		    out[2] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
		    out[3] = b0*a03 + b1*a13 + b2*a23 + b3*a33;
		
		    b0 = b[4]; b1 = b[5]; b2 = b[6]; b3 = b[7];
		    out[4] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
		    out[5] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
		    out[6] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
		    out[7] = b0*a03 + b1*a13 + b2*a23 + b3*a33;
		
		    b0 = b[8]; b1 = b[9]; b2 = b[10]; b3 = b[11];
		    out[8] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
		    out[9] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
		    out[10] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
		    out[11] = b0*a03 + b1*a13 + b2*a23 + b3*a33;
		
		    b0 = b[12]; b1 = b[13]; b2 = b[14]; b3 = b[15];
		    out[12] = b0*a00 + b1*a10 + b2*a20 + b3*a30;
		    out[13] = b0*a01 + b1*a11 + b2*a21 + b3*a31;
		    out[14] = b0*a02 + b1*a12 + b2*a22 + b3*a32;
		    out[15] = b0*a03 + b1*a13 + b2*a23 + b3*a33;
		    return out;
		};
		
		/**
		 * Multiplies two mat4's using SIMD if available and enabled
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the first operand
		 * @param {mat4} b the second operand
		 * @returns {mat4} out
		 */
		mat4.multiply = glMatrix.USE_SIMD ? mat4.SIMD.multiply : mat4.scalar.multiply;
		
		/**
		 * Alias for {@link mat4.multiply}
		 * @function
		 */
		mat4.mul = mat4.multiply;
		
		/**
		 * Translate a mat4 by the given vector not using SIMD
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the matrix to translate
		 * @param {vec3} v vector to translate by
		 * @returns {mat4} out
		 */
		mat4.scalar.translate = function (out, a, v) {
		    var x = v[0], y = v[1], z = v[2],
		        a00, a01, a02, a03,
		        a10, a11, a12, a13,
		        a20, a21, a22, a23;
		
		    if (a === out) {
		        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];
		        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];
		        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];
		        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];
		    } else {
		        a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];
		        a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];
		        a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];
		
		        out[0] = a00; out[1] = a01; out[2] = a02; out[3] = a03;
		        out[4] = a10; out[5] = a11; out[6] = a12; out[7] = a13;
		        out[8] = a20; out[9] = a21; out[10] = a22; out[11] = a23;
		
		        out[12] = a00 * x + a10 * y + a20 * z + a[12];
		        out[13] = a01 * x + a11 * y + a21 * z + a[13];
		        out[14] = a02 * x + a12 * y + a22 * z + a[14];
		        out[15] = a03 * x + a13 * y + a23 * z + a[15];
		    }
		
		    return out;
		};
		
		/**
		 * Translates a mat4 by the given vector using SIMD
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the matrix to translate
		 * @param {vec3} v vector to translate by
		 * @returns {mat4} out
		 */
		mat4.SIMD.translate = function (out, a, v) {
		    var a0 = SIMD.Float32x4.load(a, 0),
		        a1 = SIMD.Float32x4.load(a, 4),
		        a2 = SIMD.Float32x4.load(a, 8),
		        a3 = SIMD.Float32x4.load(a, 12),
		        vec = SIMD.Float32x4(v[0], v[1], v[2] , 0);
		
		    if (a !== out) {
		        out[0] = a[0]; out[1] = a[1]; out[2] = a[2]; out[3] = a[3];
		        out[4] = a[4]; out[5] = a[5]; out[6] = a[6]; out[7] = a[7];
		        out[8] = a[8]; out[9] = a[9]; out[10] = a[10]; out[11] = a[11];
		    }
		
		    a0 = SIMD.Float32x4.mul(a0, SIMD.Float32x4.swizzle(vec, 0, 0, 0, 0));
		    a1 = SIMD.Float32x4.mul(a1, SIMD.Float32x4.swizzle(vec, 1, 1, 1, 1));
		    a2 = SIMD.Float32x4.mul(a2, SIMD.Float32x4.swizzle(vec, 2, 2, 2, 2));
		
		    var t0 = SIMD.Float32x4.add(a0, SIMD.Float32x4.add(a1, SIMD.Float32x4.add(a2, a3)));
		    SIMD.Float32x4.store(out, 12, t0);
		
		    return out;
		};
		
		/**
		 * Translates a mat4 by the given vector using SIMD if available and enabled
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the matrix to translate
		 * @param {vec3} v vector to translate by
		 * @returns {mat4} out
		 */
		mat4.translate = glMatrix.USE_SIMD ? mat4.SIMD.translate : mat4.scalar.translate;
		
		/**
		 * Scales the mat4 by the dimensions in the given vec3 not using vectorization
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the matrix to scale
		 * @param {vec3} v the vec3 to scale the matrix by
		 * @returns {mat4} out
		 **/
		mat4.scalar.scale = function(out, a, v) {
		    var x = v[0], y = v[1], z = v[2];
		
		    out[0] = a[0] * x;
		    out[1] = a[1] * x;
		    out[2] = a[2] * x;
		    out[3] = a[3] * x;
		    out[4] = a[4] * y;
		    out[5] = a[5] * y;
		    out[6] = a[6] * y;
		    out[7] = a[7] * y;
		    out[8] = a[8] * z;
		    out[9] = a[9] * z;
		    out[10] = a[10] * z;
		    out[11] = a[11] * z;
		    out[12] = a[12];
		    out[13] = a[13];
		    out[14] = a[14];
		    out[15] = a[15];
		    return out;
		};
		
		/**
		 * Scales the mat4 by the dimensions in the given vec3 using vectorization
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the matrix to scale
		 * @param {vec3} v the vec3 to scale the matrix by
		 * @returns {mat4} out
		 **/
		mat4.SIMD.scale = function(out, a, v) {
		    var a0, a1, a2;
		    var vec = SIMD.Float32x4(v[0], v[1], v[2], 0);
		
		    a0 = SIMD.Float32x4.load(a, 0);
		    SIMD.Float32x4.store(
		        out, 0, SIMD.Float32x4.mul(a0, SIMD.Float32x4.swizzle(vec, 0, 0, 0, 0)));
		
		    a1 = SIMD.Float32x4.load(a, 4);
		    SIMD.Float32x4.store(
		        out, 4, SIMD.Float32x4.mul(a1, SIMD.Float32x4.swizzle(vec, 1, 1, 1, 1)));
		
		    a2 = SIMD.Float32x4.load(a, 8);
		    SIMD.Float32x4.store(
		        out, 8, SIMD.Float32x4.mul(a2, SIMD.Float32x4.swizzle(vec, 2, 2, 2, 2)));
		
		    out[12] = a[12];
		    out[13] = a[13];
		    out[14] = a[14];
		    out[15] = a[15];
		    return out;
		};
		
		/**
		 * Scales the mat4 by the dimensions in the given vec3 using SIMD if available and enabled
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the matrix to scale
		 * @param {vec3} v the vec3 to scale the matrix by
		 * @returns {mat4} out
		 */
		mat4.scale = glMatrix.USE_SIMD ? mat4.SIMD.scale : mat4.scalar.scale;
		
		/**
		 * Rotates a mat4 by the given angle around the given axis
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the matrix to rotate
		 * @param {Number} rad the angle to rotate the matrix by
		 * @param {vec3} axis the axis to rotate around
		 * @returns {mat4} out
		 */
		mat4.rotate = function (out, a, rad, axis) {
		    var x = axis[0], y = axis[1], z = axis[2],
		        len = Math.sqrt(x * x + y * y + z * z),
		        s, c, t,
		        a00, a01, a02, a03,
		        a10, a11, a12, a13,
		        a20, a21, a22, a23,
		        b00, b01, b02,
		        b10, b11, b12,
		        b20, b21, b22;
		
		    if (Math.abs(len) < glMatrix.EPSILON) { return null; }
		
		    len = 1 / len;
		    x *= len;
		    y *= len;
		    z *= len;
		
		    s = Math.sin(rad);
		    c = Math.cos(rad);
		    t = 1 - c;
		
		    a00 = a[0]; a01 = a[1]; a02 = a[2]; a03 = a[3];
		    a10 = a[4]; a11 = a[5]; a12 = a[6]; a13 = a[7];
		    a20 = a[8]; a21 = a[9]; a22 = a[10]; a23 = a[11];
		
		    // Construct the elements of the rotation matrix
		    b00 = x * x * t + c; b01 = y * x * t + z * s; b02 = z * x * t - y * s;
		    b10 = x * y * t - z * s; b11 = y * y * t + c; b12 = z * y * t + x * s;
		    b20 = x * z * t + y * s; b21 = y * z * t - x * s; b22 = z * z * t + c;
		
		    // Perform rotation-specific matrix multiplication
		    out[0] = a00 * b00 + a10 * b01 + a20 * b02;
		    out[1] = a01 * b00 + a11 * b01 + a21 * b02;
		    out[2] = a02 * b00 + a12 * b01 + a22 * b02;
		    out[3] = a03 * b00 + a13 * b01 + a23 * b02;
		    out[4] = a00 * b10 + a10 * b11 + a20 * b12;
		    out[5] = a01 * b10 + a11 * b11 + a21 * b12;
		    out[6] = a02 * b10 + a12 * b11 + a22 * b12;
		    out[7] = a03 * b10 + a13 * b11 + a23 * b12;
		    out[8] = a00 * b20 + a10 * b21 + a20 * b22;
		    out[9] = a01 * b20 + a11 * b21 + a21 * b22;
		    out[10] = a02 * b20 + a12 * b21 + a22 * b22;
		    out[11] = a03 * b20 + a13 * b21 + a23 * b22;
		
		    if (a !== out) { // If the source and destination differ, copy the unchanged last row
		        out[12] = a[12];
		        out[13] = a[13];
		        out[14] = a[14];
		        out[15] = a[15];
		    }
		    return out;
		};
		
		/**
		 * Rotates a matrix by the given angle around the X axis not using SIMD
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the matrix to rotate
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat4} out
		 */
		mat4.scalar.rotateX = function (out, a, rad) {
		    var s = Math.sin(rad),
		        c = Math.cos(rad),
		        a10 = a[4],
		        a11 = a[5],
		        a12 = a[6],
		        a13 = a[7],
		        a20 = a[8],
		        a21 = a[9],
		        a22 = a[10],
		        a23 = a[11];
		
		    if (a !== out) { // If the source and destination differ, copy the unchanged rows
		        out[0]  = a[0];
		        out[1]  = a[1];
		        out[2]  = a[2];
		        out[3]  = a[3];
		        out[12] = a[12];
		        out[13] = a[13];
		        out[14] = a[14];
		        out[15] = a[15];
		    }
		
		    // Perform axis-specific matrix multiplication
		    out[4] = a10 * c + a20 * s;
		    out[5] = a11 * c + a21 * s;
		    out[6] = a12 * c + a22 * s;
		    out[7] = a13 * c + a23 * s;
		    out[8] = a20 * c - a10 * s;
		    out[9] = a21 * c - a11 * s;
		    out[10] = a22 * c - a12 * s;
		    out[11] = a23 * c - a13 * s;
		    return out;
		};
		
		/**
		 * Rotates a matrix by the given angle around the X axis using SIMD
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the matrix to rotate
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat4} out
		 */
		mat4.SIMD.rotateX = function (out, a, rad) {
		    var s = SIMD.Float32x4.splat(Math.sin(rad)),
		        c = SIMD.Float32x4.splat(Math.cos(rad));
		
		    if (a !== out) { // If the source and destination differ, copy the unchanged rows
		      out[0]  = a[0];
		      out[1]  = a[1];
		      out[2]  = a[2];
		      out[3]  = a[3];
		      out[12] = a[12];
		      out[13] = a[13];
		      out[14] = a[14];
		      out[15] = a[15];
		    }
		
		    // Perform axis-specific matrix multiplication
		    var a_1 = SIMD.Float32x4.load(a, 4);
		    var a_2 = SIMD.Float32x4.load(a, 8);
		    SIMD.Float32x4.store(out, 4,
		                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_1, c), SIMD.Float32x4.mul(a_2, s)));
		    SIMD.Float32x4.store(out, 8,
		                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_2, c), SIMD.Float32x4.mul(a_1, s)));
		    return out;
		};
		
		/**
		 * Rotates a matrix by the given angle around the X axis using SIMD if availabe and enabled
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the matrix to rotate
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat4} out
		 */
		mat4.rotateX = glMatrix.USE_SIMD ? mat4.SIMD.rotateX : mat4.scalar.rotateX;
		
		/**
		 * Rotates a matrix by the given angle around the Y axis not using SIMD
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the matrix to rotate
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat4} out
		 */
		mat4.scalar.rotateY = function (out, a, rad) {
		    var s = Math.sin(rad),
		        c = Math.cos(rad),
		        a00 = a[0],
		        a01 = a[1],
		        a02 = a[2],
		        a03 = a[3],
		        a20 = a[8],
		        a21 = a[9],
		        a22 = a[10],
		        a23 = a[11];
		
		    if (a !== out) { // If the source and destination differ, copy the unchanged rows
		        out[4]  = a[4];
		        out[5]  = a[5];
		        out[6]  = a[6];
		        out[7]  = a[7];
		        out[12] = a[12];
		        out[13] = a[13];
		        out[14] = a[14];
		        out[15] = a[15];
		    }
		
		    // Perform axis-specific matrix multiplication
		    out[0] = a00 * c - a20 * s;
		    out[1] = a01 * c - a21 * s;
		    out[2] = a02 * c - a22 * s;
		    out[3] = a03 * c - a23 * s;
		    out[8] = a00 * s + a20 * c;
		    out[9] = a01 * s + a21 * c;
		    out[10] = a02 * s + a22 * c;
		    out[11] = a03 * s + a23 * c;
		    return out;
		};
		
		/**
		 * Rotates a matrix by the given angle around the Y axis using SIMD
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the matrix to rotate
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat4} out
		 */
		mat4.SIMD.rotateY = function (out, a, rad) {
		    var s = SIMD.Float32x4.splat(Math.sin(rad)),
		        c = SIMD.Float32x4.splat(Math.cos(rad));
		
		    if (a !== out) { // If the source and destination differ, copy the unchanged rows
		        out[4]  = a[4];
		        out[5]  = a[5];
		        out[6]  = a[6];
		        out[7]  = a[7];
		        out[12] = a[12];
		        out[13] = a[13];
		        out[14] = a[14];
		        out[15] = a[15];
		    }
		
		    // Perform axis-specific matrix multiplication
		    var a_0 = SIMD.Float32x4.load(a, 0);
		    var a_2 = SIMD.Float32x4.load(a, 8);
		    SIMD.Float32x4.store(out, 0,
		                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_0, c), SIMD.Float32x4.mul(a_2, s)));
		    SIMD.Float32x4.store(out, 8,
		                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_0, s), SIMD.Float32x4.mul(a_2, c)));
		    return out;
		};
		
		/**
		 * Rotates a matrix by the given angle around the Y axis if SIMD available and enabled
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the matrix to rotate
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat4} out
		 */
		 mat4.rotateY = glMatrix.USE_SIMD ? mat4.SIMD.rotateY : mat4.scalar.rotateY;
		
		/**
		 * Rotates a matrix by the given angle around the Z axis not using SIMD
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the matrix to rotate
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat4} out
		 */
		mat4.scalar.rotateZ = function (out, a, rad) {
		    var s = Math.sin(rad),
		        c = Math.cos(rad),
		        a00 = a[0],
		        a01 = a[1],
		        a02 = a[2],
		        a03 = a[3],
		        a10 = a[4],
		        a11 = a[5],
		        a12 = a[6],
		        a13 = a[7];
		
		    if (a !== out) { // If the source and destination differ, copy the unchanged last row
		        out[8]  = a[8];
		        out[9]  = a[9];
		        out[10] = a[10];
		        out[11] = a[11];
		        out[12] = a[12];
		        out[13] = a[13];
		        out[14] = a[14];
		        out[15] = a[15];
		    }
		
		    // Perform axis-specific matrix multiplication
		    out[0] = a00 * c + a10 * s;
		    out[1] = a01 * c + a11 * s;
		    out[2] = a02 * c + a12 * s;
		    out[3] = a03 * c + a13 * s;
		    out[4] = a10 * c - a00 * s;
		    out[5] = a11 * c - a01 * s;
		    out[6] = a12 * c - a02 * s;
		    out[7] = a13 * c - a03 * s;
		    return out;
		};
		
		/**
		 * Rotates a matrix by the given angle around the Z axis using SIMD
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the matrix to rotate
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat4} out
		 */
		mat4.SIMD.rotateZ = function (out, a, rad) {
		    var s = SIMD.Float32x4.splat(Math.sin(rad)),
		        c = SIMD.Float32x4.splat(Math.cos(rad));
		
		    if (a !== out) { // If the source and destination differ, copy the unchanged last row
		        out[8]  = a[8];
		        out[9]  = a[9];
		        out[10] = a[10];
		        out[11] = a[11];
		        out[12] = a[12];
		        out[13] = a[13];
		        out[14] = a[14];
		        out[15] = a[15];
		    }
		
		    // Perform axis-specific matrix multiplication
		    var a_0 = SIMD.Float32x4.load(a, 0);
		    var a_1 = SIMD.Float32x4.load(a, 4);
		    SIMD.Float32x4.store(out, 0,
		                         SIMD.Float32x4.add(SIMD.Float32x4.mul(a_0, c), SIMD.Float32x4.mul(a_1, s)));
		    SIMD.Float32x4.store(out, 4,
		                         SIMD.Float32x4.sub(SIMD.Float32x4.mul(a_1, c), SIMD.Float32x4.mul(a_0, s)));
		    return out;
		};
		
		/**
		 * Rotates a matrix by the given angle around the Z axis if SIMD available and enabled
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the matrix to rotate
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat4} out
		 */
		 mat4.rotateZ = glMatrix.USE_SIMD ? mat4.SIMD.rotateZ : mat4.scalar.rotateZ;
		
		/**
		 * Creates a matrix from a vector translation
		 * This is equivalent to (but much faster than):
		 *
		 *     mat4.identity(dest);
		 *     mat4.translate(dest, dest, vec);
		 *
		 * @param {mat4} out mat4 receiving operation result
		 * @param {vec3} v Translation vector
		 * @returns {mat4} out
		 */
		mat4.fromTranslation = function(out, v) {
		    out[0] = 1;
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 0;
		    out[4] = 0;
		    out[5] = 1;
		    out[6] = 0;
		    out[7] = 0;
		    out[8] = 0;
		    out[9] = 0;
		    out[10] = 1;
		    out[11] = 0;
		    out[12] = v[0];
		    out[13] = v[1];
		    out[14] = v[2];
		    out[15] = 1;
		    return out;
		}
		
		/**
		 * Creates a matrix from a vector scaling
		 * This is equivalent to (but much faster than):
		 *
		 *     mat4.identity(dest);
		 *     mat4.scale(dest, dest, vec);
		 *
		 * @param {mat4} out mat4 receiving operation result
		 * @param {vec3} v Scaling vector
		 * @returns {mat4} out
		 */
		mat4.fromScaling = function(out, v) {
		    out[0] = v[0];
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 0;
		    out[4] = 0;
		    out[5] = v[1];
		    out[6] = 0;
		    out[7] = 0;
		    out[8] = 0;
		    out[9] = 0;
		    out[10] = v[2];
		    out[11] = 0;
		    out[12] = 0;
		    out[13] = 0;
		    out[14] = 0;
		    out[15] = 1;
		    return out;
		}
		
		/**
		 * Creates a matrix from a given angle around a given axis
		 * This is equivalent to (but much faster than):
		 *
		 *     mat4.identity(dest);
		 *     mat4.rotate(dest, dest, rad, axis);
		 *
		 * @param {mat4} out mat4 receiving operation result
		 * @param {Number} rad the angle to rotate the matrix by
		 * @param {vec3} axis the axis to rotate around
		 * @returns {mat4} out
		 */
		mat4.fromRotation = function(out, rad, axis) {
		    var x = axis[0], y = axis[1], z = axis[2],
		        len = Math.sqrt(x * x + y * y + z * z),
		        s, c, t;
		
		    if (Math.abs(len) < glMatrix.EPSILON) { return null; }
		
		    len = 1 / len;
		    x *= len;
		    y *= len;
		    z *= len;
		
		    s = Math.sin(rad);
		    c = Math.cos(rad);
		    t = 1 - c;
		
		    // Perform rotation-specific matrix multiplication
		    out[0] = x * x * t + c;
		    out[1] = y * x * t + z * s;
		    out[2] = z * x * t - y * s;
		    out[3] = 0;
		    out[4] = x * y * t - z * s;
		    out[5] = y * y * t + c;
		    out[6] = z * y * t + x * s;
		    out[7] = 0;
		    out[8] = x * z * t + y * s;
		    out[9] = y * z * t - x * s;
		    out[10] = z * z * t + c;
		    out[11] = 0;
		    out[12] = 0;
		    out[13] = 0;
		    out[14] = 0;
		    out[15] = 1;
		    return out;
		}
		
		/**
		 * Creates a matrix from the given angle around the X axis
		 * This is equivalent to (but much faster than):
		 *
		 *     mat4.identity(dest);
		 *     mat4.rotateX(dest, dest, rad);
		 *
		 * @param {mat4} out mat4 receiving operation result
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat4} out
		 */
		mat4.fromXRotation = function(out, rad) {
		    var s = Math.sin(rad),
		        c = Math.cos(rad);
		
		    // Perform axis-specific matrix multiplication
		    out[0]  = 1;
		    out[1]  = 0;
		    out[2]  = 0;
		    out[3]  = 0;
		    out[4] = 0;
		    out[5] = c;
		    out[6] = s;
		    out[7] = 0;
		    out[8] = 0;
		    out[9] = -s;
		    out[10] = c;
		    out[11] = 0;
		    out[12] = 0;
		    out[13] = 0;
		    out[14] = 0;
		    out[15] = 1;
		    return out;
		}
		
		/**
		 * Creates a matrix from the given angle around the Y axis
		 * This is equivalent to (but much faster than):
		 *
		 *     mat4.identity(dest);
		 *     mat4.rotateY(dest, dest, rad);
		 *
		 * @param {mat4} out mat4 receiving operation result
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat4} out
		 */
		mat4.fromYRotation = function(out, rad) {
		    var s = Math.sin(rad),
		        c = Math.cos(rad);
		
		    // Perform axis-specific matrix multiplication
		    out[0]  = c;
		    out[1]  = 0;
		    out[2]  = -s;
		    out[3]  = 0;
		    out[4] = 0;
		    out[5] = 1;
		    out[6] = 0;
		    out[7] = 0;
		    out[8] = s;
		    out[9] = 0;
		    out[10] = c;
		    out[11] = 0;
		    out[12] = 0;
		    out[13] = 0;
		    out[14] = 0;
		    out[15] = 1;
		    return out;
		}
		
		/**
		 * Creates a matrix from the given angle around the Z axis
		 * This is equivalent to (but much faster than):
		 *
		 *     mat4.identity(dest);
		 *     mat4.rotateZ(dest, dest, rad);
		 *
		 * @param {mat4} out mat4 receiving operation result
		 * @param {Number} rad the angle to rotate the matrix by
		 * @returns {mat4} out
		 */
		mat4.fromZRotation = function(out, rad) {
		    var s = Math.sin(rad),
		        c = Math.cos(rad);
		
		    // Perform axis-specific matrix multiplication
		    out[0]  = c;
		    out[1]  = s;
		    out[2]  = 0;
		    out[3]  = 0;
		    out[4] = -s;
		    out[5] = c;
		    out[6] = 0;
		    out[7] = 0;
		    out[8] = 0;
		    out[9] = 0;
		    out[10] = 1;
		    out[11] = 0;
		    out[12] = 0;
		    out[13] = 0;
		    out[14] = 0;
		    out[15] = 1;
		    return out;
		}
		
		/**
		 * Creates a matrix from a quaternion rotation and vector translation
		 * This is equivalent to (but much faster than):
		 *
		 *     mat4.identity(dest);
		 *     mat4.translate(dest, vec);
		 *     var quatMat = mat4.create();
		 *     quat4.toMat4(quat, quatMat);
		 *     mat4.multiply(dest, quatMat);
		 *
		 * @param {mat4} out mat4 receiving operation result
		 * @param {quat4} q Rotation quaternion
		 * @param {vec3} v Translation vector
		 * @returns {mat4} out
		 */
		mat4.fromRotationTranslation = function (out, q, v) {
		    // Quaternion math
		    var x = q[0], y = q[1], z = q[2], w = q[3],
		        x2 = x + x,
		        y2 = y + y,
		        z2 = z + z,
		
		        xx = x * x2,
		        xy = x * y2,
		        xz = x * z2,
		        yy = y * y2,
		        yz = y * z2,
		        zz = z * z2,
		        wx = w * x2,
		        wy = w * y2,
		        wz = w * z2;
		
		    out[0] = 1 - (yy + zz);
		    out[1] = xy + wz;
		    out[2] = xz - wy;
		    out[3] = 0;
		    out[4] = xy - wz;
		    out[5] = 1 - (xx + zz);
		    out[6] = yz + wx;
		    out[7] = 0;
		    out[8] = xz + wy;
		    out[9] = yz - wx;
		    out[10] = 1 - (xx + yy);
		    out[11] = 0;
		    out[12] = v[0];
		    out[13] = v[1];
		    out[14] = v[2];
		    out[15] = 1;
		
		    return out;
		};
		
		/**
		 * Returns the translation vector component of a transformation
		 *  matrix. If a matrix is built with fromRotationTranslation,
		 *  the returned vector will be the same as the translation vector
		 *  originally supplied.
		 * @param  {vec3} out Vector to receive translation component
		 * @param  {mat4} mat Matrix to be decomposed (input)
		 * @return {vec3} out
		 */
		mat4.getTranslation = function (out, mat) {
		  out[0] = mat[12];
		  out[1] = mat[13];
		  out[2] = mat[14];
		
		  return out;
		};
		
		/**
		 * Returns a quaternion representing the rotational component
		 *  of a transformation matrix. If a matrix is built with
		 *  fromRotationTranslation, the returned quaternion will be the
		 *  same as the quaternion originally supplied.
		 * @param {quat} out Quaternion to receive the rotation component
		 * @param {mat4} mat Matrix to be decomposed (input)
		 * @return {quat} out
		 */
		mat4.getRotation = function (out, mat) {
		  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm
		  var trace = mat[0] + mat[5] + mat[10];
		  var S = 0;
		
		  if (trace > 0) { 
		    S = Math.sqrt(trace + 1.0) * 2;
		    out[3] = 0.25 * S;
		    out[0] = (mat[6] - mat[9]) / S;
		    out[1] = (mat[8] - mat[2]) / S; 
		    out[2] = (mat[1] - mat[4]) / S; 
		  } else if ((mat[0] > mat[5])&(mat[0] > mat[10])) { 
		    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;
		    out[3] = (mat[6] - mat[9]) / S;
		    out[0] = 0.25 * S;
		    out[1] = (mat[1] + mat[4]) / S; 
		    out[2] = (mat[8] + mat[2]) / S; 
		  } else if (mat[5] > mat[10]) { 
		    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;
		    out[3] = (mat[8] - mat[2]) / S;
		    out[0] = (mat[1] + mat[4]) / S; 
		    out[1] = 0.25 * S;
		    out[2] = (mat[6] + mat[9]) / S; 
		  } else { 
		    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;
		    out[3] = (mat[1] - mat[4]) / S;
		    out[0] = (mat[8] + mat[2]) / S;
		    out[1] = (mat[6] + mat[9]) / S;
		    out[2] = 0.25 * S;
		  }
		
		  return out;
		};
		
		/**
		 * Creates a matrix from a quaternion rotation, vector translation and vector scale
		 * This is equivalent to (but much faster than):
		 *
		 *     mat4.identity(dest);
		 *     mat4.translate(dest, vec);
		 *     var quatMat = mat4.create();
		 *     quat4.toMat4(quat, quatMat);
		 *     mat4.multiply(dest, quatMat);
		 *     mat4.scale(dest, scale)
		 *
		 * @param {mat4} out mat4 receiving operation result
		 * @param {quat4} q Rotation quaternion
		 * @param {vec3} v Translation vector
		 * @param {vec3} s Scaling vector
		 * @returns {mat4} out
		 */
		mat4.fromRotationTranslationScale = function (out, q, v, s) {
		    // Quaternion math
		    var x = q[0], y = q[1], z = q[2], w = q[3],
		        x2 = x + x,
		        y2 = y + y,
		        z2 = z + z,
		
		        xx = x * x2,
		        xy = x * y2,
		        xz = x * z2,
		        yy = y * y2,
		        yz = y * z2,
		        zz = z * z2,
		        wx = w * x2,
		        wy = w * y2,
		        wz = w * z2,
		        sx = s[0],
		        sy = s[1],
		        sz = s[2];
		
		    out[0] = (1 - (yy + zz)) * sx;
		    out[1] = (xy + wz) * sx;
		    out[2] = (xz - wy) * sx;
		    out[3] = 0;
		    out[4] = (xy - wz) * sy;
		    out[5] = (1 - (xx + zz)) * sy;
		    out[6] = (yz + wx) * sy;
		    out[7] = 0;
		    out[8] = (xz + wy) * sz;
		    out[9] = (yz - wx) * sz;
		    out[10] = (1 - (xx + yy)) * sz;
		    out[11] = 0;
		    out[12] = v[0];
		    out[13] = v[1];
		    out[14] = v[2];
		    out[15] = 1;
		
		    return out;
		};
		
		/**
		 * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin
		 * This is equivalent to (but much faster than):
		 *
		 *     mat4.identity(dest);
		 *     mat4.translate(dest, vec);
		 *     mat4.translate(dest, origin);
		 *     var quatMat = mat4.create();
		 *     quat4.toMat4(quat, quatMat);
		 *     mat4.multiply(dest, quatMat);
		 *     mat4.scale(dest, scale)
		 *     mat4.translate(dest, negativeOrigin);
		 *
		 * @param {mat4} out mat4 receiving operation result
		 * @param {quat4} q Rotation quaternion
		 * @param {vec3} v Translation vector
		 * @param {vec3} s Scaling vector
		 * @param {vec3} o The origin vector around which to scale and rotate
		 * @returns {mat4} out
		 */
		mat4.fromRotationTranslationScaleOrigin = function (out, q, v, s, o) {
		  // Quaternion math
		  var x = q[0], y = q[1], z = q[2], w = q[3],
		      x2 = x + x,
		      y2 = y + y,
		      z2 = z + z,
		
		      xx = x * x2,
		      xy = x * y2,
		      xz = x * z2,
		      yy = y * y2,
		      yz = y * z2,
		      zz = z * z2,
		      wx = w * x2,
		      wy = w * y2,
		      wz = w * z2,
		
		      sx = s[0],
		      sy = s[1],
		      sz = s[2],
		
		      ox = o[0],
		      oy = o[1],
		      oz = o[2];
		
		  out[0] = (1 - (yy + zz)) * sx;
		  out[1] = (xy + wz) * sx;
		  out[2] = (xz - wy) * sx;
		  out[3] = 0;
		  out[4] = (xy - wz) * sy;
		  out[5] = (1 - (xx + zz)) * sy;
		  out[6] = (yz + wx) * sy;
		  out[7] = 0;
		  out[8] = (xz + wy) * sz;
		  out[9] = (yz - wx) * sz;
		  out[10] = (1 - (xx + yy)) * sz;
		  out[11] = 0;
		  out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);
		  out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);
		  out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);
		  out[15] = 1;
		
		  return out;
		};
		
		/**
		 * Calculates a 4x4 matrix from the given quaternion
		 *
		 * @param {mat4} out mat4 receiving operation result
		 * @param {quat} q Quaternion to create matrix from
		 *
		 * @returns {mat4} out
		 */
		mat4.fromQuat = function (out, q) {
		    var x = q[0], y = q[1], z = q[2], w = q[3],
		        x2 = x + x,
		        y2 = y + y,
		        z2 = z + z,
		
		        xx = x * x2,
		        yx = y * x2,
		        yy = y * y2,
		        zx = z * x2,
		        zy = z * y2,
		        zz = z * z2,
		        wx = w * x2,
		        wy = w * y2,
		        wz = w * z2;
		
		    out[0] = 1 - yy - zz;
		    out[1] = yx + wz;
		    out[2] = zx - wy;
		    out[3] = 0;
		
		    out[4] = yx - wz;
		    out[5] = 1 - xx - zz;
		    out[6] = zy + wx;
		    out[7] = 0;
		
		    out[8] = zx + wy;
		    out[9] = zy - wx;
		    out[10] = 1 - xx - yy;
		    out[11] = 0;
		
		    out[12] = 0;
		    out[13] = 0;
		    out[14] = 0;
		    out[15] = 1;
		
		    return out;
		};
		
		/**
		 * Generates a frustum matrix with the given bounds
		 *
		 * @param {mat4} out mat4 frustum matrix will be written into
		 * @param {Number} left Left bound of the frustum
		 * @param {Number} right Right bound of the frustum
		 * @param {Number} bottom Bottom bound of the frustum
		 * @param {Number} top Top bound of the frustum
		 * @param {Number} near Near bound of the frustum
		 * @param {Number} far Far bound of the frustum
		 * @returns {mat4} out
		 */
		mat4.frustum = function (out, left, right, bottom, top, near, far) {
		    var rl = 1 / (right - left),
		        tb = 1 / (top - bottom),
		        nf = 1 / (near - far);
		    out[0] = (near * 2) * rl;
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 0;
		    out[4] = 0;
		    out[5] = (near * 2) * tb;
		    out[6] = 0;
		    out[7] = 0;
		    out[8] = (right + left) * rl;
		    out[9] = (top + bottom) * tb;
		    out[10] = (far + near) * nf;
		    out[11] = -1;
		    out[12] = 0;
		    out[13] = 0;
		    out[14] = (far * near * 2) * nf;
		    out[15] = 0;
		    return out;
		};
		
		/**
		 * Generates a perspective projection matrix with the given bounds
		 *
		 * @param {mat4} out mat4 frustum matrix will be written into
		 * @param {number} fovy Vertical field of view in radians
		 * @param {number} aspect Aspect ratio. typically viewport width/height
		 * @param {number} near Near bound of the frustum
		 * @param {number} far Far bound of the frustum
		 * @returns {mat4} out
		 */
		mat4.perspective = function (out, fovy, aspect, near, far) {
		    var f = 1.0 / Math.tan(fovy / 2),
		        nf = 1 / (near - far);
		    out[0] = f / aspect;
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 0;
		    out[4] = 0;
		    out[5] = f;
		    out[6] = 0;
		    out[7] = 0;
		    out[8] = 0;
		    out[9] = 0;
		    out[10] = (far + near) * nf;
		    out[11] = -1;
		    out[12] = 0;
		    out[13] = 0;
		    out[14] = (2 * far * near) * nf;
		    out[15] = 0;
		    return out;
		};
		
		/**
		 * Generates a perspective projection matrix with the given field of view.
		 * This is primarily useful for generating projection matrices to be used
		 * with the still experiemental WebVR API.
		 *
		 * @param {mat4} out mat4 frustum matrix will be written into
		 * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees
		 * @param {number} near Near bound of the frustum
		 * @param {number} far Far bound of the frustum
		 * @returns {mat4} out
		 */
		mat4.perspectiveFromFieldOfView = function (out, fov, near, far) {
		    var upTan = Math.tan(fov.upDegrees * Math.PI/180.0),
		        downTan = Math.tan(fov.downDegrees * Math.PI/180.0),
		        leftTan = Math.tan(fov.leftDegrees * Math.PI/180.0),
		        rightTan = Math.tan(fov.rightDegrees * Math.PI/180.0),
		        xScale = 2.0 / (leftTan + rightTan),
		        yScale = 2.0 / (upTan + downTan);
		
		    out[0] = xScale;
		    out[1] = 0.0;
		    out[2] = 0.0;
		    out[3] = 0.0;
		    out[4] = 0.0;
		    out[5] = yScale;
		    out[6] = 0.0;
		    out[7] = 0.0;
		    out[8] = -((leftTan - rightTan) * xScale * 0.5);
		    out[9] = ((upTan - downTan) * yScale * 0.5);
		    out[10] = far / (near - far);
		    out[11] = -1.0;
		    out[12] = 0.0;
		    out[13] = 0.0;
		    out[14] = (far * near) / (near - far);
		    out[15] = 0.0;
		    return out;
		}
		
		/**
		 * Generates a orthogonal projection matrix with the given bounds
		 *
		 * @param {mat4} out mat4 frustum matrix will be written into
		 * @param {number} left Left bound of the frustum
		 * @param {number} right Right bound of the frustum
		 * @param {number} bottom Bottom bound of the frustum
		 * @param {number} top Top bound of the frustum
		 * @param {number} near Near bound of the frustum
		 * @param {number} far Far bound of the frustum
		 * @returns {mat4} out
		 */
		mat4.ortho = function (out, left, right, bottom, top, near, far) {
		    var lr = 1 / (left - right),
		        bt = 1 / (bottom - top),
		        nf = 1 / (near - far);
		    out[0] = -2 * lr;
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 0;
		    out[4] = 0;
		    out[5] = -2 * bt;
		    out[6] = 0;
		    out[7] = 0;
		    out[8] = 0;
		    out[9] = 0;
		    out[10] = 2 * nf;
		    out[11] = 0;
		    out[12] = (left + right) * lr;
		    out[13] = (top + bottom) * bt;
		    out[14] = (far + near) * nf;
		    out[15] = 1;
		    return out;
		};
		
		/**
		 * Generates a look-at matrix with the given eye position, focal point, and up axis
		 *
		 * @param {mat4} out mat4 frustum matrix will be written into
		 * @param {vec3} eye Position of the viewer
		 * @param {vec3} center Point the viewer is looking at
		 * @param {vec3} up vec3 pointing up
		 * @returns {mat4} out
		 */
		mat4.lookAt = function (out, eye, center, up) {
		    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,
		        eyex = eye[0],
		        eyey = eye[1],
		        eyez = eye[2],
		        upx = up[0],
		        upy = up[1],
		        upz = up[2],
		        centerx = center[0],
		        centery = center[1],
		        centerz = center[2];
		
		    if (Math.abs(eyex - centerx) < glMatrix.EPSILON &&
		        Math.abs(eyey - centery) < glMatrix.EPSILON &&
		        Math.abs(eyez - centerz) < glMatrix.EPSILON) {
		        return mat4.identity(out);
		    }
		
		    z0 = eyex - centerx;
		    z1 = eyey - centery;
		    z2 = eyez - centerz;
		
		    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);
		    z0 *= len;
		    z1 *= len;
		    z2 *= len;
		
		    x0 = upy * z2 - upz * z1;
		    x1 = upz * z0 - upx * z2;
		    x2 = upx * z1 - upy * z0;
		    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);
		    if (!len) {
		        x0 = 0;
		        x1 = 0;
		        x2 = 0;
		    } else {
		        len = 1 / len;
		        x0 *= len;
		        x1 *= len;
		        x2 *= len;
		    }
		
		    y0 = z1 * x2 - z2 * x1;
		    y1 = z2 * x0 - z0 * x2;
		    y2 = z0 * x1 - z1 * x0;
		
		    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);
		    if (!len) {
		        y0 = 0;
		        y1 = 0;
		        y2 = 0;
		    } else {
		        len = 1 / len;
		        y0 *= len;
		        y1 *= len;
		        y2 *= len;
		    }
		
		    out[0] = x0;
		    out[1] = y0;
		    out[2] = z0;
		    out[3] = 0;
		    out[4] = x1;
		    out[5] = y1;
		    out[6] = z1;
		    out[7] = 0;
		    out[8] = x2;
		    out[9] = y2;
		    out[10] = z2;
		    out[11] = 0;
		    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);
		    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);
		    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);
		    out[15] = 1;
		
		    return out;
		};
		
		/**
		 * Returns a string representation of a mat4
		 *
		 * @param {mat4} mat matrix to represent as a string
		 * @returns {String} string representation of the matrix
		 */
		mat4.str = function (a) {
		    return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' +
		                    a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' +
		                    a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' +
		                    a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';
		};
		
		/**
		 * Returns Frobenius norm of a mat4
		 *
		 * @param {mat4} a the matrix to calculate Frobenius norm of
		 * @returns {Number} Frobenius norm
		 */
		mat4.frob = function (a) {
		    return(Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2) ))
		};
		
		/**
		 * Adds two mat4's
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the first operand
		 * @param {mat4} b the second operand
		 * @returns {mat4} out
		 */
		mat4.add = function(out, a, b) {
		    out[0] = a[0] + b[0];
		    out[1] = a[1] + b[1];
		    out[2] = a[2] + b[2];
		    out[3] = a[3] + b[3];
		    out[4] = a[4] + b[4];
		    out[5] = a[5] + b[5];
		    out[6] = a[6] + b[6];
		    out[7] = a[7] + b[7];
		    out[8] = a[8] + b[8];
		    out[9] = a[9] + b[9];
		    out[10] = a[10] + b[10];
		    out[11] = a[11] + b[11];
		    out[12] = a[12] + b[12];
		    out[13] = a[13] + b[13];
		    out[14] = a[14] + b[14];
		    out[15] = a[15] + b[15];
		    return out;
		};
		
		/**
		 * Subtracts matrix b from matrix a
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the first operand
		 * @param {mat4} b the second operand
		 * @returns {mat4} out
		 */
		mat4.subtract = function(out, a, b) {
		    out[0] = a[0] - b[0];
		    out[1] = a[1] - b[1];
		    out[2] = a[2] - b[2];
		    out[3] = a[3] - b[3];
		    out[4] = a[4] - b[4];
		    out[5] = a[5] - b[5];
		    out[6] = a[6] - b[6];
		    out[7] = a[7] - b[7];
		    out[8] = a[8] - b[8];
		    out[9] = a[9] - b[9];
		    out[10] = a[10] - b[10];
		    out[11] = a[11] - b[11];
		    out[12] = a[12] - b[12];
		    out[13] = a[13] - b[13];
		    out[14] = a[14] - b[14];
		    out[15] = a[15] - b[15];
		    return out;
		};
		
		/**
		 * Alias for {@link mat4.subtract}
		 * @function
		 */
		mat4.sub = mat4.subtract;
		
		/**
		 * Multiply each element of the matrix by a scalar.
		 *
		 * @param {mat4} out the receiving matrix
		 * @param {mat4} a the matrix to scale
		 * @param {Number} b amount to scale the matrix's elements by
		 * @returns {mat4} out
		 */
		mat4.multiplyScalar = function(out, a, b) {
		    out[0] = a[0] * b;
		    out[1] = a[1] * b;
		    out[2] = a[2] * b;
		    out[3] = a[3] * b;
		    out[4] = a[4] * b;
		    out[5] = a[5] * b;
		    out[6] = a[6] * b;
		    out[7] = a[7] * b;
		    out[8] = a[8] * b;
		    out[9] = a[9] * b;
		    out[10] = a[10] * b;
		    out[11] = a[11] * b;
		    out[12] = a[12] * b;
		    out[13] = a[13] * b;
		    out[14] = a[14] * b;
		    out[15] = a[15] * b;
		    return out;
		};
		
		/**
		 * Adds two mat4's after multiplying each element of the second operand by a scalar value.
		 *
		 * @param {mat4} out the receiving vector
		 * @param {mat4} a the first operand
		 * @param {mat4} b the second operand
		 * @param {Number} scale the amount to scale b's elements by before adding
		 * @returns {mat4} out
		 */
		mat4.multiplyScalarAndAdd = function(out, a, b, scale) {
		    out[0] = a[0] + (b[0] * scale);
		    out[1] = a[1] + (b[1] * scale);
		    out[2] = a[2] + (b[2] * scale);
		    out[3] = a[3] + (b[3] * scale);
		    out[4] = a[4] + (b[4] * scale);
		    out[5] = a[5] + (b[5] * scale);
		    out[6] = a[6] + (b[6] * scale);
		    out[7] = a[7] + (b[7] * scale);
		    out[8] = a[8] + (b[8] * scale);
		    out[9] = a[9] + (b[9] * scale);
		    out[10] = a[10] + (b[10] * scale);
		    out[11] = a[11] + (b[11] * scale);
		    out[12] = a[12] + (b[12] * scale);
		    out[13] = a[13] + (b[13] * scale);
		    out[14] = a[14] + (b[14] * scale);
		    out[15] = a[15] + (b[15] * scale);
		    return out;
		};
		
		/**
		 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
		 *
		 * @param {mat4} a The first matrix.
		 * @param {mat4} b The second matrix.
		 * @returns {Boolean} True if the matrices are equal, false otherwise.
		 */
		mat4.exactEquals = function (a, b) {
		    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && 
		           a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && 
		           a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] &&
		           a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];
		};
		
		/**
		 * Returns whether or not the matrices have approximately the same elements in the same position.
		 *
		 * @param {mat4} a The first matrix.
		 * @param {mat4} b The second matrix.
		 * @returns {Boolean} True if the matrices are equal, false otherwise.
		 */
		mat4.equals = function (a, b) {
		    var a0  = a[0],  a1  = a[1],  a2  = a[2],  a3  = a[3],
		        a4  = a[4],  a5  = a[5],  a6  = a[6],  a7  = a[7], 
		        a8  = a[8],  a9  = a[9],  a10 = a[10], a11 = a[11], 
		        a12 = a[12], a13 = a[13], a14 = a[14], a15 = a[15];
		
		    var b0  = b[0],  b1  = b[1],  b2  = b[2],  b3  = b[3],
		        b4  = b[4],  b5  = b[5],  b6  = b[6],  b7  = b[7], 
		        b8  = b[8],  b9  = b[9],  b10 = b[10], b11 = b[11], 
		        b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];
		
		    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
		            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
		            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
		            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&
		            Math.abs(a4 - b4) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&
		            Math.abs(a5 - b5) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&
		            Math.abs(a6 - b6) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&
		            Math.abs(a7 - b7) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&
		            Math.abs(a8 - b8) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&
		            Math.abs(a9 - b9) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&
		            Math.abs(a10 - b10) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&
		            Math.abs(a11 - b11) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&
		            Math.abs(a12 - b12) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&
		            Math.abs(a13 - b13) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&
		            Math.abs(a14 - b14) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&
		            Math.abs(a15 - b15) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a15), Math.abs(b15)));
		};
		
		
		
		module.exports = mat4;
	
	
	/***/ },
	/* 10 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
		
		Permission is hereby granted, free of charge, to any person obtaining a copy
		of this software and associated documentation files (the "Software"), to deal
		in the Software without restriction, including without limitation the rights
		to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		copies of the Software, and to permit persons to whom the Software is
		furnished to do so, subject to the following conditions:
		
		The above copyright notice and this permission notice shall be included in
		all copies or substantial portions of the Software.
		
		THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		THE SOFTWARE. */
		
		var glMatrix = __webpack_require__(5);
		var mat3 = __webpack_require__(8);
		var vec3 = __webpack_require__(11);
		var vec4 = __webpack_require__(12);
		
		/**
		 * @class Quaternion
		 * @name quat
		 */
		var quat = {};
		
		/**
		 * Creates a new identity quat
		 *
		 * @returns {quat} a new quaternion
		 */
		quat.create = function() {
		    var out = new glMatrix.ARRAY_TYPE(4);
		    out[0] = 0;
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 1;
		    return out;
		};
		
		/**
		 * Sets a quaternion to represent the shortest rotation from one
		 * vector to another.
		 *
		 * Both vectors are assumed to be unit length.
		 *
		 * @param {quat} out the receiving quaternion.
		 * @param {vec3} a the initial vector
		 * @param {vec3} b the destination vector
		 * @returns {quat} out
		 */
		quat.rotationTo = (function() {
		    var tmpvec3 = vec3.create();
		    var xUnitVec3 = vec3.fromValues(1,0,0);
		    var yUnitVec3 = vec3.fromValues(0,1,0);
		
		    return function(out, a, b) {
		        var dot = vec3.dot(a, b);
		        if (dot < -0.999999) {
		            vec3.cross(tmpvec3, xUnitVec3, a);
		            if (vec3.length(tmpvec3) < 0.000001)
		                vec3.cross(tmpvec3, yUnitVec3, a);
		            vec3.normalize(tmpvec3, tmpvec3);
		            quat.setAxisAngle(out, tmpvec3, Math.PI);
		            return out;
		        } else if (dot > 0.999999) {
		            out[0] = 0;
		            out[1] = 0;
		            out[2] = 0;
		            out[3] = 1;
		            return out;
		        } else {
		            vec3.cross(tmpvec3, a, b);
		            out[0] = tmpvec3[0];
		            out[1] = tmpvec3[1];
		            out[2] = tmpvec3[2];
		            out[3] = 1 + dot;
		            return quat.normalize(out, out);
		        }
		    };
		})();
		
		/**
		 * Sets the specified quaternion with values corresponding to the given
		 * axes. Each axis is a vec3 and is expected to be unit length and
		 * perpendicular to all other specified axes.
		 *
		 * @param {vec3} view  the vector representing the viewing direction
		 * @param {vec3} right the vector representing the local "right" direction
		 * @param {vec3} up    the vector representing the local "up" direction
		 * @returns {quat} out
		 */
		quat.setAxes = (function() {
		    var matr = mat3.create();
		
		    return function(out, view, right, up) {
		        matr[0] = right[0];
		        matr[3] = right[1];
		        matr[6] = right[2];
		
		        matr[1] = up[0];
		        matr[4] = up[1];
		        matr[7] = up[2];
		
		        matr[2] = -view[0];
		        matr[5] = -view[1];
		        matr[8] = -view[2];
		
		        return quat.normalize(out, quat.fromMat3(out, matr));
		    };
		})();
		
		/**
		 * Creates a new quat initialized with values from an existing quaternion
		 *
		 * @param {quat} a quaternion to clone
		 * @returns {quat} a new quaternion
		 * @function
		 */
		quat.clone = vec4.clone;
		
		/**
		 * Creates a new quat initialized with the given values
		 *
		 * @param {Number} x X component
		 * @param {Number} y Y component
		 * @param {Number} z Z component
		 * @param {Number} w W component
		 * @returns {quat} a new quaternion
		 * @function
		 */
		quat.fromValues = vec4.fromValues;
		
		/**
		 * Copy the values from one quat to another
		 *
		 * @param {quat} out the receiving quaternion
		 * @param {quat} a the source quaternion
		 * @returns {quat} out
		 * @function
		 */
		quat.copy = vec4.copy;
		
		/**
		 * Set the components of a quat to the given values
		 *
		 * @param {quat} out the receiving quaternion
		 * @param {Number} x X component
		 * @param {Number} y Y component
		 * @param {Number} z Z component
		 * @param {Number} w W component
		 * @returns {quat} out
		 * @function
		 */
		quat.set = vec4.set;
		
		/**
		 * Set a quat to the identity quaternion
		 *
		 * @param {quat} out the receiving quaternion
		 * @returns {quat} out
		 */
		quat.identity = function(out) {
		    out[0] = 0;
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 1;
		    return out;
		};
		
		/**
		 * Sets a quat from the given angle and rotation axis,
		 * then returns it.
		 *
		 * @param {quat} out the receiving quaternion
		 * @param {vec3} axis the axis around which to rotate
		 * @param {Number} rad the angle in radians
		 * @returns {quat} out
		 **/
		quat.setAxisAngle = function(out, axis, rad) {
		    rad = rad * 0.5;
		    var s = Math.sin(rad);
		    out[0] = s * axis[0];
		    out[1] = s * axis[1];
		    out[2] = s * axis[2];
		    out[3] = Math.cos(rad);
		    return out;
		};
		
		/**
		 * Gets the rotation axis and angle for a given
		 *  quaternion. If a quaternion is created with
		 *  setAxisAngle, this method will return the same
		 *  values as providied in the original parameter list
		 *  OR functionally equivalent values.
		 * Example: The quaternion formed by axis [0, 0, 1] and
		 *  angle -90 is the same as the quaternion formed by
		 *  [0, 0, 1] and 270. This method favors the latter.
		 * @param  {vec3} out_axis  Vector receiving the axis of rotation
		 * @param  {quat} q     Quaternion to be decomposed
		 * @return {Number}     Angle, in radians, of the rotation
		 */
		quat.getAxisAngle = function(out_axis, q) {
		    var rad = Math.acos(q[3]) * 2.0;
		    var s = Math.sin(rad / 2.0);
		    if (s != 0.0) {
		        out_axis[0] = q[0] / s;
		        out_axis[1] = q[1] / s;
		        out_axis[2] = q[2] / s;
		    } else {
		        // If s is zero, return any axis (no rotation - axis does not matter)
		        out_axis[0] = 1;
		        out_axis[1] = 0;
		        out_axis[2] = 0;
		    }
		    return rad;
		};
		
		/**
		 * Adds two quat's
		 *
		 * @param {quat} out the receiving quaternion
		 * @param {quat} a the first operand
		 * @param {quat} b the second operand
		 * @returns {quat} out
		 * @function
		 */
		quat.add = vec4.add;
		
		/**
		 * Multiplies two quat's
		 *
		 * @param {quat} out the receiving quaternion
		 * @param {quat} a the first operand
		 * @param {quat} b the second operand
		 * @returns {quat} out
		 */
		quat.multiply = function(out, a, b) {
		    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
		        bx = b[0], by = b[1], bz = b[2], bw = b[3];
		
		    out[0] = ax * bw + aw * bx + ay * bz - az * by;
		    out[1] = ay * bw + aw * by + az * bx - ax * bz;
		    out[2] = az * bw + aw * bz + ax * by - ay * bx;
		    out[3] = aw * bw - ax * bx - ay * by - az * bz;
		    return out;
		};
		
		/**
		 * Alias for {@link quat.multiply}
		 * @function
		 */
		quat.mul = quat.multiply;
		
		/**
		 * Scales a quat by a scalar number
		 *
		 * @param {quat} out the receiving vector
		 * @param {quat} a the vector to scale
		 * @param {Number} b amount to scale the vector by
		 * @returns {quat} out
		 * @function
		 */
		quat.scale = vec4.scale;
		
		/**
		 * Rotates a quaternion by the given angle about the X axis
		 *
		 * @param {quat} out quat receiving operation result
		 * @param {quat} a quat to rotate
		 * @param {number} rad angle (in radians) to rotate
		 * @returns {quat} out
		 */
		quat.rotateX = function (out, a, rad) {
		    rad *= 0.5; 
		
		    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
		        bx = Math.sin(rad), bw = Math.cos(rad);
		
		    out[0] = ax * bw + aw * bx;
		    out[1] = ay * bw + az * bx;
		    out[2] = az * bw - ay * bx;
		    out[3] = aw * bw - ax * bx;
		    return out;
		};
		
		/**
		 * Rotates a quaternion by the given angle about the Y axis
		 *
		 * @param {quat} out quat receiving operation result
		 * @param {quat} a quat to rotate
		 * @param {number} rad angle (in radians) to rotate
		 * @returns {quat} out
		 */
		quat.rotateY = function (out, a, rad) {
		    rad *= 0.5; 
		
		    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
		        by = Math.sin(rad), bw = Math.cos(rad);
		
		    out[0] = ax * bw - az * by;
		    out[1] = ay * bw + aw * by;
		    out[2] = az * bw + ax * by;
		    out[3] = aw * bw - ay * by;
		    return out;
		};
		
		/**
		 * Rotates a quaternion by the given angle about the Z axis
		 *
		 * @param {quat} out quat receiving operation result
		 * @param {quat} a quat to rotate
		 * @param {number} rad angle (in radians) to rotate
		 * @returns {quat} out
		 */
		quat.rotateZ = function (out, a, rad) {
		    rad *= 0.5; 
		
		    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
		        bz = Math.sin(rad), bw = Math.cos(rad);
		
		    out[0] = ax * bw + ay * bz;
		    out[1] = ay * bw - ax * bz;
		    out[2] = az * bw + aw * bz;
		    out[3] = aw * bw - az * bz;
		    return out;
		};
		
		/**
		 * Calculates the W component of a quat from the X, Y, and Z components.
		 * Assumes that quaternion is 1 unit in length.
		 * Any existing W component will be ignored.
		 *
		 * @param {quat} out the receiving quaternion
		 * @param {quat} a quat to calculate W component of
		 * @returns {quat} out
		 */
		quat.calculateW = function (out, a) {
		    var x = a[0], y = a[1], z = a[2];
		
		    out[0] = x;
		    out[1] = y;
		    out[2] = z;
		    out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));
		    return out;
		};
		
		/**
		 * Calculates the dot product of two quat's
		 *
		 * @param {quat} a the first operand
		 * @param {quat} b the second operand
		 * @returns {Number} dot product of a and b
		 * @function
		 */
		quat.dot = vec4.dot;
		
		/**
		 * Performs a linear interpolation between two quat's
		 *
		 * @param {quat} out the receiving quaternion
		 * @param {quat} a the first operand
		 * @param {quat} b the second operand
		 * @param {Number} t interpolation amount between the two inputs
		 * @returns {quat} out
		 * @function
		 */
		quat.lerp = vec4.lerp;
		
		/**
		 * Performs a spherical linear interpolation between two quat
		 *
		 * @param {quat} out the receiving quaternion
		 * @param {quat} a the first operand
		 * @param {quat} b the second operand
		 * @param {Number} t interpolation amount between the two inputs
		 * @returns {quat} out
		 */
		quat.slerp = function (out, a, b, t) {
		    // benchmarks:
		    //    http://jsperf.com/quaternion-slerp-implementations
		
		    var ax = a[0], ay = a[1], az = a[2], aw = a[3],
		        bx = b[0], by = b[1], bz = b[2], bw = b[3];
		
		    var        omega, cosom, sinom, scale0, scale1;
		
		    // calc cosine
		    cosom = ax * bx + ay * by + az * bz + aw * bw;
		    // adjust signs (if necessary)
		    if ( cosom < 0.0 ) {
		        cosom = -cosom;
		        bx = - bx;
		        by = - by;
		        bz = - bz;
		        bw = - bw;
		    }
		    // calculate coefficients
		    if ( (1.0 - cosom) > 0.000001 ) {
		        // standard case (slerp)
		        omega  = Math.acos(cosom);
		        sinom  = Math.sin(omega);
		        scale0 = Math.sin((1.0 - t) * omega) / sinom;
		        scale1 = Math.sin(t * omega) / sinom;
		    } else {        
		        // "from" and "to" quaternions are very close 
		        //  ... so we can do a linear interpolation
		        scale0 = 1.0 - t;
		        scale1 = t;
		    }
		    // calculate final values
		    out[0] = scale0 * ax + scale1 * bx;
		    out[1] = scale0 * ay + scale1 * by;
		    out[2] = scale0 * az + scale1 * bz;
		    out[3] = scale0 * aw + scale1 * bw;
		    
		    return out;
		};
		
		/**
		 * Performs a spherical linear interpolation with two control points
		 *
		 * @param {quat} out the receiving quaternion
		 * @param {quat} a the first operand
		 * @param {quat} b the second operand
		 * @param {quat} c the third operand
		 * @param {quat} d the fourth operand
		 * @param {Number} t interpolation amount
		 * @returns {quat} out
		 */
		quat.sqlerp = (function () {
		  var temp1 = quat.create();
		  var temp2 = quat.create();
		  
		  return function (out, a, b, c, d, t) {
		    quat.slerp(temp1, a, d, t);
		    quat.slerp(temp2, b, c, t);
		    quat.slerp(out, temp1, temp2, 2 * t * (1 - t));
		    
		    return out;
		  };
		}());
		
		/**
		 * Calculates the inverse of a quat
		 *
		 * @param {quat} out the receiving quaternion
		 * @param {quat} a quat to calculate inverse of
		 * @returns {quat} out
		 */
		quat.invert = function(out, a) {
		    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3],
		        dot = a0*a0 + a1*a1 + a2*a2 + a3*a3,
		        invDot = dot ? 1.0/dot : 0;
		    
		    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0
		
		    out[0] = -a0*invDot;
		    out[1] = -a1*invDot;
		    out[2] = -a2*invDot;
		    out[3] = a3*invDot;
		    return out;
		};
		
		/**
		 * Calculates the conjugate of a quat
		 * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.
		 *
		 * @param {quat} out the receiving quaternion
		 * @param {quat} a quat to calculate conjugate of
		 * @returns {quat} out
		 */
		quat.conjugate = function (out, a) {
		    out[0] = -a[0];
		    out[1] = -a[1];
		    out[2] = -a[2];
		    out[3] = a[3];
		    return out;
		};
		
		/**
		 * Calculates the length of a quat
		 *
		 * @param {quat} a vector to calculate length of
		 * @returns {Number} length of a
		 * @function
		 */
		quat.length = vec4.length;
		
		/**
		 * Alias for {@link quat.length}
		 * @function
		 */
		quat.len = quat.length;
		
		/**
		 * Calculates the squared length of a quat
		 *
		 * @param {quat} a vector to calculate squared length of
		 * @returns {Number} squared length of a
		 * @function
		 */
		quat.squaredLength = vec4.squaredLength;
		
		/**
		 * Alias for {@link quat.squaredLength}
		 * @function
		 */
		quat.sqrLen = quat.squaredLength;
		
		/**
		 * Normalize a quat
		 *
		 * @param {quat} out the receiving quaternion
		 * @param {quat} a quaternion to normalize
		 * @returns {quat} out
		 * @function
		 */
		quat.normalize = vec4.normalize;
		
		/**
		 * Creates a quaternion from the given 3x3 rotation matrix.
		 *
		 * NOTE: The resultant quaternion is not normalized, so you should be sure
		 * to renormalize the quaternion yourself where necessary.
		 *
		 * @param {quat} out the receiving quaternion
		 * @param {mat3} m rotation matrix
		 * @returns {quat} out
		 * @function
		 */
		quat.fromMat3 = function(out, m) {
		    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes
		    // article "Quaternion Calculus and Fast Animation".
		    var fTrace = m[0] + m[4] + m[8];
		    var fRoot;
		
		    if ( fTrace > 0.0 ) {
		        // |w| > 1/2, may as well choose w > 1/2
		        fRoot = Math.sqrt(fTrace + 1.0);  // 2w
		        out[3] = 0.5 * fRoot;
		        fRoot = 0.5/fRoot;  // 1/(4w)
		        out[0] = (m[5]-m[7])*fRoot;
		        out[1] = (m[6]-m[2])*fRoot;
		        out[2] = (m[1]-m[3])*fRoot;
		    } else {
		        // |w| <= 1/2
		        var i = 0;
		        if ( m[4] > m[0] )
		          i = 1;
		        if ( m[8] > m[i*3+i] )
		          i = 2;
		        var j = (i+1)%3;
		        var k = (i+2)%3;
		        
		        fRoot = Math.sqrt(m[i*3+i]-m[j*3+j]-m[k*3+k] + 1.0);
		        out[i] = 0.5 * fRoot;
		        fRoot = 0.5 / fRoot;
		        out[3] = (m[j*3+k] - m[k*3+j]) * fRoot;
		        out[j] = (m[j*3+i] + m[i*3+j]) * fRoot;
		        out[k] = (m[k*3+i] + m[i*3+k]) * fRoot;
		    }
		    
		    return out;
		};
		
		/**
		 * Returns a string representation of a quatenion
		 *
		 * @param {quat} vec vector to represent as a string
		 * @returns {String} string representation of the vector
		 */
		quat.str = function (a) {
		    return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';
		};
		
		/**
		 * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)
		 *
		 * @param {quat} a The first quaternion.
		 * @param {quat} b The second quaternion.
		 * @returns {Boolean} True if the vectors are equal, false otherwise.
		 */
		quat.exactEquals = vec4.exactEquals;
		
		/**
		 * Returns whether or not the quaternions have approximately the same elements in the same position.
		 *
		 * @param {quat} a The first vector.
		 * @param {quat} b The second vector.
		 * @returns {Boolean} True if the vectors are equal, false otherwise.
		 */
		quat.equals = vec4.equals;
		
		module.exports = quat;
	
	
	/***/ },
	/* 11 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
		
		Permission is hereby granted, free of charge, to any person obtaining a copy
		of this software and associated documentation files (the "Software"), to deal
		in the Software without restriction, including without limitation the rights
		to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		copies of the Software, and to permit persons to whom the Software is
		furnished to do so, subject to the following conditions:
		
		The above copyright notice and this permission notice shall be included in
		all copies or substantial portions of the Software.
		
		THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		THE SOFTWARE. */
		
		var glMatrix = __webpack_require__(5);
		
		/**
		 * @class 3 Dimensional Vector
		 * @name vec3
		 */
		var vec3 = {};
		
		/**
		 * Creates a new, empty vec3
		 *
		 * @returns {vec3} a new 3D vector
		 */
		vec3.create = function() {
		    var out = new glMatrix.ARRAY_TYPE(3);
		    out[0] = 0;
		    out[1] = 0;
		    out[2] = 0;
		    return out;
		};
		
		/**
		 * Creates a new vec3 initialized with values from an existing vector
		 *
		 * @param {vec3} a vector to clone
		 * @returns {vec3} a new 3D vector
		 */
		vec3.clone = function(a) {
		    var out = new glMatrix.ARRAY_TYPE(3);
		    out[0] = a[0];
		    out[1] = a[1];
		    out[2] = a[2];
		    return out;
		};
		
		/**
		 * Creates a new vec3 initialized with the given values
		 *
		 * @param {Number} x X component
		 * @param {Number} y Y component
		 * @param {Number} z Z component
		 * @returns {vec3} a new 3D vector
		 */
		vec3.fromValues = function(x, y, z) {
		    var out = new glMatrix.ARRAY_TYPE(3);
		    out[0] = x;
		    out[1] = y;
		    out[2] = z;
		    return out;
		};
		
		/**
		 * Copy the values from one vec3 to another
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a the source vector
		 * @returns {vec3} out
		 */
		vec3.copy = function(out, a) {
		    out[0] = a[0];
		    out[1] = a[1];
		    out[2] = a[2];
		    return out;
		};
		
		/**
		 * Set the components of a vec3 to the given values
		 *
		 * @param {vec3} out the receiving vector
		 * @param {Number} x X component
		 * @param {Number} y Y component
		 * @param {Number} z Z component
		 * @returns {vec3} out
		 */
		vec3.set = function(out, x, y, z) {
		    out[0] = x;
		    out[1] = y;
		    out[2] = z;
		    return out;
		};
		
		/**
		 * Adds two vec3's
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a the first operand
		 * @param {vec3} b the second operand
		 * @returns {vec3} out
		 */
		vec3.add = function(out, a, b) {
		    out[0] = a[0] + b[0];
		    out[1] = a[1] + b[1];
		    out[2] = a[2] + b[2];
		    return out;
		};
		
		/**
		 * Subtracts vector b from vector a
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a the first operand
		 * @param {vec3} b the second operand
		 * @returns {vec3} out
		 */
		vec3.subtract = function(out, a, b) {
		    out[0] = a[0] - b[0];
		    out[1] = a[1] - b[1];
		    out[2] = a[2] - b[2];
		    return out;
		};
		
		/**
		 * Alias for {@link vec3.subtract}
		 * @function
		 */
		vec3.sub = vec3.subtract;
		
		/**
		 * Multiplies two vec3's
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a the first operand
		 * @param {vec3} b the second operand
		 * @returns {vec3} out
		 */
		vec3.multiply = function(out, a, b) {
		    out[0] = a[0] * b[0];
		    out[1] = a[1] * b[1];
		    out[2] = a[2] * b[2];
		    return out;
		};
		
		/**
		 * Alias for {@link vec3.multiply}
		 * @function
		 */
		vec3.mul = vec3.multiply;
		
		/**
		 * Divides two vec3's
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a the first operand
		 * @param {vec3} b the second operand
		 * @returns {vec3} out
		 */
		vec3.divide = function(out, a, b) {
		    out[0] = a[0] / b[0];
		    out[1] = a[1] / b[1];
		    out[2] = a[2] / b[2];
		    return out;
		};
		
		/**
		 * Alias for {@link vec3.divide}
		 * @function
		 */
		vec3.div = vec3.divide;
		
		/**
		 * Math.ceil the components of a vec3
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a vector to ceil
		 * @returns {vec3} out
		 */
		vec3.ceil = function (out, a) {
		    out[0] = Math.ceil(a[0]);
		    out[1] = Math.ceil(a[1]);
		    out[2] = Math.ceil(a[2]);
		    return out;
		};
		
		/**
		 * Math.floor the components of a vec3
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a vector to floor
		 * @returns {vec3} out
		 */
		vec3.floor = function (out, a) {
		    out[0] = Math.floor(a[0]);
		    out[1] = Math.floor(a[1]);
		    out[2] = Math.floor(a[2]);
		    return out;
		};
		
		/**
		 * Returns the minimum of two vec3's
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a the first operand
		 * @param {vec3} b the second operand
		 * @returns {vec3} out
		 */
		vec3.min = function(out, a, b) {
		    out[0] = Math.min(a[0], b[0]);
		    out[1] = Math.min(a[1], b[1]);
		    out[2] = Math.min(a[2], b[2]);
		    return out;
		};
		
		/**
		 * Returns the maximum of two vec3's
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a the first operand
		 * @param {vec3} b the second operand
		 * @returns {vec3} out
		 */
		vec3.max = function(out, a, b) {
		    out[0] = Math.max(a[0], b[0]);
		    out[1] = Math.max(a[1], b[1]);
		    out[2] = Math.max(a[2], b[2]);
		    return out;
		};
		
		/**
		 * Math.round the components of a vec3
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a vector to round
		 * @returns {vec3} out
		 */
		vec3.round = function (out, a) {
		    out[0] = Math.round(a[0]);
		    out[1] = Math.round(a[1]);
		    out[2] = Math.round(a[2]);
		    return out;
		};
		
		/**
		 * Scales a vec3 by a scalar number
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a the vector to scale
		 * @param {Number} b amount to scale the vector by
		 * @returns {vec3} out
		 */
		vec3.scale = function(out, a, b) {
		    out[0] = a[0] * b;
		    out[1] = a[1] * b;
		    out[2] = a[2] * b;
		    return out;
		};
		
		/**
		 * Adds two vec3's after scaling the second operand by a scalar value
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a the first operand
		 * @param {vec3} b the second operand
		 * @param {Number} scale the amount to scale b by before adding
		 * @returns {vec3} out
		 */
		vec3.scaleAndAdd = function(out, a, b, scale) {
		    out[0] = a[0] + (b[0] * scale);
		    out[1] = a[1] + (b[1] * scale);
		    out[2] = a[2] + (b[2] * scale);
		    return out;
		};
		
		/**
		 * Calculates the euclidian distance between two vec3's
		 *
		 * @param {vec3} a the first operand
		 * @param {vec3} b the second operand
		 * @returns {Number} distance between a and b
		 */
		vec3.distance = function(a, b) {
		    var x = b[0] - a[0],
		        y = b[1] - a[1],
		        z = b[2] - a[2];
		    return Math.sqrt(x*x + y*y + z*z);
		};
		
		/**
		 * Alias for {@link vec3.distance}
		 * @function
		 */
		vec3.dist = vec3.distance;
		
		/**
		 * Calculates the squared euclidian distance between two vec3's
		 *
		 * @param {vec3} a the first operand
		 * @param {vec3} b the second operand
		 * @returns {Number} squared distance between a and b
		 */
		vec3.squaredDistance = function(a, b) {
		    var x = b[0] - a[0],
		        y = b[1] - a[1],
		        z = b[2] - a[2];
		    return x*x + y*y + z*z;
		};
		
		/**
		 * Alias for {@link vec3.squaredDistance}
		 * @function
		 */
		vec3.sqrDist = vec3.squaredDistance;
		
		/**
		 * Calculates the length of a vec3
		 *
		 * @param {vec3} a vector to calculate length of
		 * @returns {Number} length of a
		 */
		vec3.length = function (a) {
		    var x = a[0],
		        y = a[1],
		        z = a[2];
		    return Math.sqrt(x*x + y*y + z*z);
		};
		
		/**
		 * Alias for {@link vec3.length}
		 * @function
		 */
		vec3.len = vec3.length;
		
		/**
		 * Calculates the squared length of a vec3
		 *
		 * @param {vec3} a vector to calculate squared length of
		 * @returns {Number} squared length of a
		 */
		vec3.squaredLength = function (a) {
		    var x = a[0],
		        y = a[1],
		        z = a[2];
		    return x*x + y*y + z*z;
		};
		
		/**
		 * Alias for {@link vec3.squaredLength}
		 * @function
		 */
		vec3.sqrLen = vec3.squaredLength;
		
		/**
		 * Negates the components of a vec3
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a vector to negate
		 * @returns {vec3} out
		 */
		vec3.negate = function(out, a) {
		    out[0] = -a[0];
		    out[1] = -a[1];
		    out[2] = -a[2];
		    return out;
		};
		
		/**
		 * Returns the inverse of the components of a vec3
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a vector to invert
		 * @returns {vec3} out
		 */
		vec3.inverse = function(out, a) {
		  out[0] = 1.0 / a[0];
		  out[1] = 1.0 / a[1];
		  out[2] = 1.0 / a[2];
		  return out;
		};
		
		/**
		 * Normalize a vec3
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a vector to normalize
		 * @returns {vec3} out
		 */
		vec3.normalize = function(out, a) {
		    var x = a[0],
		        y = a[1],
		        z = a[2];
		    var len = x*x + y*y + z*z;
		    if (len > 0) {
		        //TODO: evaluate use of glm_invsqrt here?
		        len = 1 / Math.sqrt(len);
		        out[0] = a[0] * len;
		        out[1] = a[1] * len;
		        out[2] = a[2] * len;
		    }
		    return out;
		};
		
		/**
		 * Calculates the dot product of two vec3's
		 *
		 * @param {vec3} a the first operand
		 * @param {vec3} b the second operand
		 * @returns {Number} dot product of a and b
		 */
		vec3.dot = function (a, b) {
		    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
		};
		
		/**
		 * Computes the cross product of two vec3's
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a the first operand
		 * @param {vec3} b the second operand
		 * @returns {vec3} out
		 */
		vec3.cross = function(out, a, b) {
		    var ax = a[0], ay = a[1], az = a[2],
		        bx = b[0], by = b[1], bz = b[2];
		
		    out[0] = ay * bz - az * by;
		    out[1] = az * bx - ax * bz;
		    out[2] = ax * by - ay * bx;
		    return out;
		};
		
		/**
		 * Performs a linear interpolation between two vec3's
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a the first operand
		 * @param {vec3} b the second operand
		 * @param {Number} t interpolation amount between the two inputs
		 * @returns {vec3} out
		 */
		vec3.lerp = function (out, a, b, t) {
		    var ax = a[0],
		        ay = a[1],
		        az = a[2];
		    out[0] = ax + t * (b[0] - ax);
		    out[1] = ay + t * (b[1] - ay);
		    out[2] = az + t * (b[2] - az);
		    return out;
		};
		
		/**
		 * Performs a hermite interpolation with two control points
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a the first operand
		 * @param {vec3} b the second operand
		 * @param {vec3} c the third operand
		 * @param {vec3} d the fourth operand
		 * @param {Number} t interpolation amount between the two inputs
		 * @returns {vec3} out
		 */
		vec3.hermite = function (out, a, b, c, d, t) {
		  var factorTimes2 = t * t,
		      factor1 = factorTimes2 * (2 * t - 3) + 1,
		      factor2 = factorTimes2 * (t - 2) + t,
		      factor3 = factorTimes2 * (t - 1),
		      factor4 = factorTimes2 * (3 - 2 * t);
		  
		  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;
		  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;
		  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;
		  
		  return out;
		};
		
		/**
		 * Performs a bezier interpolation with two control points
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a the first operand
		 * @param {vec3} b the second operand
		 * @param {vec3} c the third operand
		 * @param {vec3} d the fourth operand
		 * @param {Number} t interpolation amount between the two inputs
		 * @returns {vec3} out
		 */
		vec3.bezier = function (out, a, b, c, d, t) {
		  var inverseFactor = 1 - t,
		      inverseFactorTimesTwo = inverseFactor * inverseFactor,
		      factorTimes2 = t * t,
		      factor1 = inverseFactorTimesTwo * inverseFactor,
		      factor2 = 3 * t * inverseFactorTimesTwo,
		      factor3 = 3 * factorTimes2 * inverseFactor,
		      factor4 = factorTimes2 * t;
		  
		  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;
		  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;
		  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;
		  
		  return out;
		};
		
		/**
		 * Generates a random vector with the given scale
		 *
		 * @param {vec3} out the receiving vector
		 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
		 * @returns {vec3} out
		 */
		vec3.random = function (out, scale) {
		    scale = scale || 1.0;
		
		    var r = glMatrix.RANDOM() * 2.0 * Math.PI;
		    var z = (glMatrix.RANDOM() * 2.0) - 1.0;
		    var zScale = Math.sqrt(1.0-z*z) * scale;
		
		    out[0] = Math.cos(r) * zScale;
		    out[1] = Math.sin(r) * zScale;
		    out[2] = z * scale;
		    return out;
		};
		
		/**
		 * Transforms the vec3 with a mat4.
		 * 4th vector component is implicitly '1'
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a the vector to transform
		 * @param {mat4} m matrix to transform with
		 * @returns {vec3} out
		 */
		vec3.transformMat4 = function(out, a, m) {
		    var x = a[0], y = a[1], z = a[2],
		        w = m[3] * x + m[7] * y + m[11] * z + m[15];
		    w = w || 1.0;
		    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;
		    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;
		    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;
		    return out;
		};
		
		/**
		 * Transforms the vec3 with a mat3.
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a the vector to transform
		 * @param {mat4} m the 3x3 matrix to transform with
		 * @returns {vec3} out
		 */
		vec3.transformMat3 = function(out, a, m) {
		    var x = a[0], y = a[1], z = a[2];
		    out[0] = x * m[0] + y * m[3] + z * m[6];
		    out[1] = x * m[1] + y * m[4] + z * m[7];
		    out[2] = x * m[2] + y * m[5] + z * m[8];
		    return out;
		};
		
		/**
		 * Transforms the vec3 with a quat
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec3} a the vector to transform
		 * @param {quat} q quaternion to transform with
		 * @returns {vec3} out
		 */
		vec3.transformQuat = function(out, a, q) {
		    // benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations
		
		    var x = a[0], y = a[1], z = a[2],
		        qx = q[0], qy = q[1], qz = q[2], qw = q[3],
		
		        // calculate quat * vec
		        ix = qw * x + qy * z - qz * y,
		        iy = qw * y + qz * x - qx * z,
		        iz = qw * z + qx * y - qy * x,
		        iw = -qx * x - qy * y - qz * z;
		
		    // calculate result * inverse quat
		    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;
		    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;
		    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;
		    return out;
		};
		
		/**
		 * Rotate a 3D vector around the x-axis
		 * @param {vec3} out The receiving vec3
		 * @param {vec3} a The vec3 point to rotate
		 * @param {vec3} b The origin of the rotation
		 * @param {Number} c The angle of rotation
		 * @returns {vec3} out
		 */
		vec3.rotateX = function(out, a, b, c){
		   var p = [], r=[];
			  //Translate point to the origin
			  p[0] = a[0] - b[0];
			  p[1] = a[1] - b[1];
		  	p[2] = a[2] - b[2];
		
			  //perform rotation
			  r[0] = p[0];
			  r[1] = p[1]*Math.cos(c) - p[2]*Math.sin(c);
			  r[2] = p[1]*Math.sin(c) + p[2]*Math.cos(c);
		
			  //translate to correct position
			  out[0] = r[0] + b[0];
			  out[1] = r[1] + b[1];
			  out[2] = r[2] + b[2];
		
		  	return out;
		};
		
		/**
		 * Rotate a 3D vector around the y-axis
		 * @param {vec3} out The receiving vec3
		 * @param {vec3} a The vec3 point to rotate
		 * @param {vec3} b The origin of the rotation
		 * @param {Number} c The angle of rotation
		 * @returns {vec3} out
		 */
		vec3.rotateY = function(out, a, b, c){
		  	var p = [], r=[];
		  	//Translate point to the origin
		  	p[0] = a[0] - b[0];
		  	p[1] = a[1] - b[1];
		  	p[2] = a[2] - b[2];
		  
		  	//perform rotation
		  	r[0] = p[2]*Math.sin(c) + p[0]*Math.cos(c);
		  	r[1] = p[1];
		  	r[2] = p[2]*Math.cos(c) - p[0]*Math.sin(c);
		  
		  	//translate to correct position
		  	out[0] = r[0] + b[0];
		  	out[1] = r[1] + b[1];
		  	out[2] = r[2] + b[2];
		  
		  	return out;
		};
		
		/**
		 * Rotate a 3D vector around the z-axis
		 * @param {vec3} out The receiving vec3
		 * @param {vec3} a The vec3 point to rotate
		 * @param {vec3} b The origin of the rotation
		 * @param {Number} c The angle of rotation
		 * @returns {vec3} out
		 */
		vec3.rotateZ = function(out, a, b, c){
		  	var p = [], r=[];
		  	//Translate point to the origin
		  	p[0] = a[0] - b[0];
		  	p[1] = a[1] - b[1];
		  	p[2] = a[2] - b[2];
		  
		  	//perform rotation
		  	r[0] = p[0]*Math.cos(c) - p[1]*Math.sin(c);
		  	r[1] = p[0]*Math.sin(c) + p[1]*Math.cos(c);
		  	r[2] = p[2];
		  
		  	//translate to correct position
		  	out[0] = r[0] + b[0];
		  	out[1] = r[1] + b[1];
		  	out[2] = r[2] + b[2];
		  
		  	return out;
		};
		
		/**
		 * Perform some operation over an array of vec3s.
		 *
		 * @param {Array} a the array of vectors to iterate over
		 * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed
		 * @param {Number} offset Number of elements to skip at the beginning of the array
		 * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array
		 * @param {Function} fn Function to call for each vector in the array
		 * @param {Object} [arg] additional argument to pass to fn
		 * @returns {Array} a
		 * @function
		 */
		vec3.forEach = (function() {
		    var vec = vec3.create();
		
		    return function(a, stride, offset, count, fn, arg) {
		        var i, l;
		        if(!stride) {
		            stride = 3;
		        }
		
		        if(!offset) {
		            offset = 0;
		        }
		        
		        if(count) {
		            l = Math.min((count * stride) + offset, a.length);
		        } else {
		            l = a.length;
		        }
		
		        for(i = offset; i < l; i += stride) {
		            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2];
		            fn(vec, vec, arg);
		            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2];
		        }
		        
		        return a;
		    };
		})();
		
		/**
		 * Get the angle between two 3D vectors
		 * @param {vec3} a The first operand
		 * @param {vec3} b The second operand
		 * @returns {Number} The angle in radians
		 */
		vec3.angle = function(a, b) {
		   
		    var tempA = vec3.fromValues(a[0], a[1], a[2]);
		    var tempB = vec3.fromValues(b[0], b[1], b[2]);
		 
		    vec3.normalize(tempA, tempA);
		    vec3.normalize(tempB, tempB);
		 
		    var cosine = vec3.dot(tempA, tempB);
		
		    if(cosine > 1.0){
		        return 0;
		    } else {
		        return Math.acos(cosine);
		    }     
		};
		
		/**
		 * Returns a string representation of a vector
		 *
		 * @param {vec3} vec vector to represent as a string
		 * @returns {String} string representation of the vector
		 */
		vec3.str = function (a) {
		    return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';
		};
		
		/**
		 * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)
		 *
		 * @param {vec3} a The first vector.
		 * @param {vec3} b The second vector.
		 * @returns {Boolean} True if the vectors are equal, false otherwise.
		 */
		vec3.exactEquals = function (a, b) {
		    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];
		};
		
		/**
		 * Returns whether or not the vectors have approximately the same elements in the same position.
		 *
		 * @param {vec3} a The first vector.
		 * @param {vec3} b The second vector.
		 * @returns {Boolean} True if the vectors are equal, false otherwise.
		 */
		vec3.equals = function (a, b) {
		    var a0 = a[0], a1 = a[1], a2 = a[2];
		    var b0 = b[0], b1 = b[1], b2 = b[2];
		    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
		            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
		            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)));
		};
		
		module.exports = vec3;
	
	
	/***/ },
	/* 12 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
		
		Permission is hereby granted, free of charge, to any person obtaining a copy
		of this software and associated documentation files (the "Software"), to deal
		in the Software without restriction, including without limitation the rights
		to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		copies of the Software, and to permit persons to whom the Software is
		furnished to do so, subject to the following conditions:
		
		The above copyright notice and this permission notice shall be included in
		all copies or substantial portions of the Software.
		
		THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		THE SOFTWARE. */
		
		var glMatrix = __webpack_require__(5);
		
		/**
		 * @class 4 Dimensional Vector
		 * @name vec4
		 */
		var vec4 = {};
		
		/**
		 * Creates a new, empty vec4
		 *
		 * @returns {vec4} a new 4D vector
		 */
		vec4.create = function() {
		    var out = new glMatrix.ARRAY_TYPE(4);
		    out[0] = 0;
		    out[1] = 0;
		    out[2] = 0;
		    out[3] = 0;
		    return out;
		};
		
		/**
		 * Creates a new vec4 initialized with values from an existing vector
		 *
		 * @param {vec4} a vector to clone
		 * @returns {vec4} a new 4D vector
		 */
		vec4.clone = function(a) {
		    var out = new glMatrix.ARRAY_TYPE(4);
		    out[0] = a[0];
		    out[1] = a[1];
		    out[2] = a[2];
		    out[3] = a[3];
		    return out;
		};
		
		/**
		 * Creates a new vec4 initialized with the given values
		 *
		 * @param {Number} x X component
		 * @param {Number} y Y component
		 * @param {Number} z Z component
		 * @param {Number} w W component
		 * @returns {vec4} a new 4D vector
		 */
		vec4.fromValues = function(x, y, z, w) {
		    var out = new glMatrix.ARRAY_TYPE(4);
		    out[0] = x;
		    out[1] = y;
		    out[2] = z;
		    out[3] = w;
		    return out;
		};
		
		/**
		 * Copy the values from one vec4 to another
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a the source vector
		 * @returns {vec4} out
		 */
		vec4.copy = function(out, a) {
		    out[0] = a[0];
		    out[1] = a[1];
		    out[2] = a[2];
		    out[3] = a[3];
		    return out;
		};
		
		/**
		 * Set the components of a vec4 to the given values
		 *
		 * @param {vec4} out the receiving vector
		 * @param {Number} x X component
		 * @param {Number} y Y component
		 * @param {Number} z Z component
		 * @param {Number} w W component
		 * @returns {vec4} out
		 */
		vec4.set = function(out, x, y, z, w) {
		    out[0] = x;
		    out[1] = y;
		    out[2] = z;
		    out[3] = w;
		    return out;
		};
		
		/**
		 * Adds two vec4's
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a the first operand
		 * @param {vec4} b the second operand
		 * @returns {vec4} out
		 */
		vec4.add = function(out, a, b) {
		    out[0] = a[0] + b[0];
		    out[1] = a[1] + b[1];
		    out[2] = a[2] + b[2];
		    out[3] = a[3] + b[3];
		    return out;
		};
		
		/**
		 * Subtracts vector b from vector a
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a the first operand
		 * @param {vec4} b the second operand
		 * @returns {vec4} out
		 */
		vec4.subtract = function(out, a, b) {
		    out[0] = a[0] - b[0];
		    out[1] = a[1] - b[1];
		    out[2] = a[2] - b[2];
		    out[3] = a[3] - b[3];
		    return out;
		};
		
		/**
		 * Alias for {@link vec4.subtract}
		 * @function
		 */
		vec4.sub = vec4.subtract;
		
		/**
		 * Multiplies two vec4's
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a the first operand
		 * @param {vec4} b the second operand
		 * @returns {vec4} out
		 */
		vec4.multiply = function(out, a, b) {
		    out[0] = a[0] * b[0];
		    out[1] = a[1] * b[1];
		    out[2] = a[2] * b[2];
		    out[3] = a[3] * b[3];
		    return out;
		};
		
		/**
		 * Alias for {@link vec4.multiply}
		 * @function
		 */
		vec4.mul = vec4.multiply;
		
		/**
		 * Divides two vec4's
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a the first operand
		 * @param {vec4} b the second operand
		 * @returns {vec4} out
		 */
		vec4.divide = function(out, a, b) {
		    out[0] = a[0] / b[0];
		    out[1] = a[1] / b[1];
		    out[2] = a[2] / b[2];
		    out[3] = a[3] / b[3];
		    return out;
		};
		
		/**
		 * Alias for {@link vec4.divide}
		 * @function
		 */
		vec4.div = vec4.divide;
		
		/**
		 * Math.ceil the components of a vec4
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a vector to ceil
		 * @returns {vec4} out
		 */
		vec4.ceil = function (out, a) {
		    out[0] = Math.ceil(a[0]);
		    out[1] = Math.ceil(a[1]);
		    out[2] = Math.ceil(a[2]);
		    out[3] = Math.ceil(a[3]);
		    return out;
		};
		
		/**
		 * Math.floor the components of a vec4
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a vector to floor
		 * @returns {vec4} out
		 */
		vec4.floor = function (out, a) {
		    out[0] = Math.floor(a[0]);
		    out[1] = Math.floor(a[1]);
		    out[2] = Math.floor(a[2]);
		    out[3] = Math.floor(a[3]);
		    return out;
		};
		
		/**
		 * Returns the minimum of two vec4's
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a the first operand
		 * @param {vec4} b the second operand
		 * @returns {vec4} out
		 */
		vec4.min = function(out, a, b) {
		    out[0] = Math.min(a[0], b[0]);
		    out[1] = Math.min(a[1], b[1]);
		    out[2] = Math.min(a[2], b[2]);
		    out[3] = Math.min(a[3], b[3]);
		    return out;
		};
		
		/**
		 * Returns the maximum of two vec4's
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a the first operand
		 * @param {vec4} b the second operand
		 * @returns {vec4} out
		 */
		vec4.max = function(out, a, b) {
		    out[0] = Math.max(a[0], b[0]);
		    out[1] = Math.max(a[1], b[1]);
		    out[2] = Math.max(a[2], b[2]);
		    out[3] = Math.max(a[3], b[3]);
		    return out;
		};
		
		/**
		 * Math.round the components of a vec4
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a vector to round
		 * @returns {vec4} out
		 */
		vec4.round = function (out, a) {
		    out[0] = Math.round(a[0]);
		    out[1] = Math.round(a[1]);
		    out[2] = Math.round(a[2]);
		    out[3] = Math.round(a[3]);
		    return out;
		};
		
		/**
		 * Scales a vec4 by a scalar number
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a the vector to scale
		 * @param {Number} b amount to scale the vector by
		 * @returns {vec4} out
		 */
		vec4.scale = function(out, a, b) {
		    out[0] = a[0] * b;
		    out[1] = a[1] * b;
		    out[2] = a[2] * b;
		    out[3] = a[3] * b;
		    return out;
		};
		
		/**
		 * Adds two vec4's after scaling the second operand by a scalar value
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a the first operand
		 * @param {vec4} b the second operand
		 * @param {Number} scale the amount to scale b by before adding
		 * @returns {vec4} out
		 */
		vec4.scaleAndAdd = function(out, a, b, scale) {
		    out[0] = a[0] + (b[0] * scale);
		    out[1] = a[1] + (b[1] * scale);
		    out[2] = a[2] + (b[2] * scale);
		    out[3] = a[3] + (b[3] * scale);
		    return out;
		};
		
		/**
		 * Calculates the euclidian distance between two vec4's
		 *
		 * @param {vec4} a the first operand
		 * @param {vec4} b the second operand
		 * @returns {Number} distance between a and b
		 */
		vec4.distance = function(a, b) {
		    var x = b[0] - a[0],
		        y = b[1] - a[1],
		        z = b[2] - a[2],
		        w = b[3] - a[3];
		    return Math.sqrt(x*x + y*y + z*z + w*w);
		};
		
		/**
		 * Alias for {@link vec4.distance}
		 * @function
		 */
		vec4.dist = vec4.distance;
		
		/**
		 * Calculates the squared euclidian distance between two vec4's
		 *
		 * @param {vec4} a the first operand
		 * @param {vec4} b the second operand
		 * @returns {Number} squared distance between a and b
		 */
		vec4.squaredDistance = function(a, b) {
		    var x = b[0] - a[0],
		        y = b[1] - a[1],
		        z = b[2] - a[2],
		        w = b[3] - a[3];
		    return x*x + y*y + z*z + w*w;
		};
		
		/**
		 * Alias for {@link vec4.squaredDistance}
		 * @function
		 */
		vec4.sqrDist = vec4.squaredDistance;
		
		/**
		 * Calculates the length of a vec4
		 *
		 * @param {vec4} a vector to calculate length of
		 * @returns {Number} length of a
		 */
		vec4.length = function (a) {
		    var x = a[0],
		        y = a[1],
		        z = a[2],
		        w = a[3];
		    return Math.sqrt(x*x + y*y + z*z + w*w);
		};
		
		/**
		 * Alias for {@link vec4.length}
		 * @function
		 */
		vec4.len = vec4.length;
		
		/**
		 * Calculates the squared length of a vec4
		 *
		 * @param {vec4} a vector to calculate squared length of
		 * @returns {Number} squared length of a
		 */
		vec4.squaredLength = function (a) {
		    var x = a[0],
		        y = a[1],
		        z = a[2],
		        w = a[3];
		    return x*x + y*y + z*z + w*w;
		};
		
		/**
		 * Alias for {@link vec4.squaredLength}
		 * @function
		 */
		vec4.sqrLen = vec4.squaredLength;
		
		/**
		 * Negates the components of a vec4
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a vector to negate
		 * @returns {vec4} out
		 */
		vec4.negate = function(out, a) {
		    out[0] = -a[0];
		    out[1] = -a[1];
		    out[2] = -a[2];
		    out[3] = -a[3];
		    return out;
		};
		
		/**
		 * Returns the inverse of the components of a vec4
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a vector to invert
		 * @returns {vec4} out
		 */
		vec4.inverse = function(out, a) {
		  out[0] = 1.0 / a[0];
		  out[1] = 1.0 / a[1];
		  out[2] = 1.0 / a[2];
		  out[3] = 1.0 / a[3];
		  return out;
		};
		
		/**
		 * Normalize a vec4
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a vector to normalize
		 * @returns {vec4} out
		 */
		vec4.normalize = function(out, a) {
		    var x = a[0],
		        y = a[1],
		        z = a[2],
		        w = a[3];
		    var len = x*x + y*y + z*z + w*w;
		    if (len > 0) {
		        len = 1 / Math.sqrt(len);
		        out[0] = x * len;
		        out[1] = y * len;
		        out[2] = z * len;
		        out[3] = w * len;
		    }
		    return out;
		};
		
		/**
		 * Calculates the dot product of two vec4's
		 *
		 * @param {vec4} a the first operand
		 * @param {vec4} b the second operand
		 * @returns {Number} dot product of a and b
		 */
		vec4.dot = function (a, b) {
		    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
		};
		
		/**
		 * Performs a linear interpolation between two vec4's
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a the first operand
		 * @param {vec4} b the second operand
		 * @param {Number} t interpolation amount between the two inputs
		 * @returns {vec4} out
		 */
		vec4.lerp = function (out, a, b, t) {
		    var ax = a[0],
		        ay = a[1],
		        az = a[2],
		        aw = a[3];
		    out[0] = ax + t * (b[0] - ax);
		    out[1] = ay + t * (b[1] - ay);
		    out[2] = az + t * (b[2] - az);
		    out[3] = aw + t * (b[3] - aw);
		    return out;
		};
		
		/**
		 * Generates a random vector with the given scale
		 *
		 * @param {vec4} out the receiving vector
		 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
		 * @returns {vec4} out
		 */
		vec4.random = function (out, scale) {
		    scale = scale || 1.0;
		
		    //TODO: This is a pretty awful way of doing this. Find something better.
		    out[0] = glMatrix.RANDOM();
		    out[1] = glMatrix.RANDOM();
		    out[2] = glMatrix.RANDOM();
		    out[3] = glMatrix.RANDOM();
		    vec4.normalize(out, out);
		    vec4.scale(out, out, scale);
		    return out;
		};
		
		/**
		 * Transforms the vec4 with a mat4.
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a the vector to transform
		 * @param {mat4} m matrix to transform with
		 * @returns {vec4} out
		 */
		vec4.transformMat4 = function(out, a, m) {
		    var x = a[0], y = a[1], z = a[2], w = a[3];
		    out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;
		    out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;
		    out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;
		    out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;
		    return out;
		};
		
		/**
		 * Transforms the vec4 with a quat
		 *
		 * @param {vec4} out the receiving vector
		 * @param {vec4} a the vector to transform
		 * @param {quat} q quaternion to transform with
		 * @returns {vec4} out
		 */
		vec4.transformQuat = function(out, a, q) {
		    var x = a[0], y = a[1], z = a[2],
		        qx = q[0], qy = q[1], qz = q[2], qw = q[3],
		
		        // calculate quat * vec
		        ix = qw * x + qy * z - qz * y,
		        iy = qw * y + qz * x - qx * z,
		        iz = qw * z + qx * y - qy * x,
		        iw = -qx * x - qy * y - qz * z;
		
		    // calculate result * inverse quat
		    out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;
		    out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;
		    out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;
		    out[3] = a[3];
		    return out;
		};
		
		/**
		 * Perform some operation over an array of vec4s.
		 *
		 * @param {Array} a the array of vectors to iterate over
		 * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed
		 * @param {Number} offset Number of elements to skip at the beginning of the array
		 * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array
		 * @param {Function} fn Function to call for each vector in the array
		 * @param {Object} [arg] additional argument to pass to fn
		 * @returns {Array} a
		 * @function
		 */
		vec4.forEach = (function() {
		    var vec = vec4.create();
		
		    return function(a, stride, offset, count, fn, arg) {
		        var i, l;
		        if(!stride) {
		            stride = 4;
		        }
		
		        if(!offset) {
		            offset = 0;
		        }
		        
		        if(count) {
		            l = Math.min((count * stride) + offset, a.length);
		        } else {
		            l = a.length;
		        }
		
		        for(i = offset; i < l; i += stride) {
		            vec[0] = a[i]; vec[1] = a[i+1]; vec[2] = a[i+2]; vec[3] = a[i+3];
		            fn(vec, vec, arg);
		            a[i] = vec[0]; a[i+1] = vec[1]; a[i+2] = vec[2]; a[i+3] = vec[3];
		        }
		        
		        return a;
		    };
		})();
		
		/**
		 * Returns a string representation of a vector
		 *
		 * @param {vec4} vec vector to represent as a string
		 * @returns {String} string representation of the vector
		 */
		vec4.str = function (a) {
		    return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';
		};
		
		/**
		 * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)
		 *
		 * @param {vec4} a The first vector.
		 * @param {vec4} b The second vector.
		 * @returns {Boolean} True if the vectors are equal, false otherwise.
		 */
		vec4.exactEquals = function (a, b) {
		    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];
		};
		
		/**
		 * Returns whether or not the vectors have approximately the same elements in the same position.
		 *
		 * @param {vec4} a The first vector.
		 * @param {vec4} b The second vector.
		 * @returns {Boolean} True if the vectors are equal, false otherwise.
		 */
		vec4.equals = function (a, b) {
		    var a0 = a[0], a1 = a[1], a2 = a[2], a3 = a[3];
		    var b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3];
		    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
		            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&
		            Math.abs(a2 - b2) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&
		            Math.abs(a3 - b3) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a3), Math.abs(b3)));
		};
		
		module.exports = vec4;
	
	
	/***/ },
	/* 13 */
	/***/ function(module, exports, __webpack_require__) {
	
		/* Copyright (c) 2015, Brandon Jones, Colin MacKenzie IV.
		
		Permission is hereby granted, free of charge, to any person obtaining a copy
		of this software and associated documentation files (the "Software"), to deal
		in the Software without restriction, including without limitation the rights
		to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
		copies of the Software, and to permit persons to whom the Software is
		furnished to do so, subject to the following conditions:
		
		The above copyright notice and this permission notice shall be included in
		all copies or substantial portions of the Software.
		
		THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
		IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
		FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
		AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
		LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
		OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
		THE SOFTWARE. */
		
		var glMatrix = __webpack_require__(5);
		
		/**
		 * @class 2 Dimensional Vector
		 * @name vec2
		 */
		var vec2 = {};
		
		/**
		 * Creates a new, empty vec2
		 *
		 * @returns {vec2} a new 2D vector
		 */
		vec2.create = function() {
		    var out = new glMatrix.ARRAY_TYPE(2);
		    out[0] = 0;
		    out[1] = 0;
		    return out;
		};
		
		/**
		 * Creates a new vec2 initialized with values from an existing vector
		 *
		 * @param {vec2} a vector to clone
		 * @returns {vec2} a new 2D vector
		 */
		vec2.clone = function(a) {
		    var out = new glMatrix.ARRAY_TYPE(2);
		    out[0] = a[0];
		    out[1] = a[1];
		    return out;
		};
		
		/**
		 * Creates a new vec2 initialized with the given values
		 *
		 * @param {Number} x X component
		 * @param {Number} y Y component
		 * @returns {vec2} a new 2D vector
		 */
		vec2.fromValues = function(x, y) {
		    var out = new glMatrix.ARRAY_TYPE(2);
		    out[0] = x;
		    out[1] = y;
		    return out;
		};
		
		/**
		 * Copy the values from one vec2 to another
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a the source vector
		 * @returns {vec2} out
		 */
		vec2.copy = function(out, a) {
		    out[0] = a[0];
		    out[1] = a[1];
		    return out;
		};
		
		/**
		 * Set the components of a vec2 to the given values
		 *
		 * @param {vec2} out the receiving vector
		 * @param {Number} x X component
		 * @param {Number} y Y component
		 * @returns {vec2} out
		 */
		vec2.set = function(out, x, y) {
		    out[0] = x;
		    out[1] = y;
		    return out;
		};
		
		/**
		 * Adds two vec2's
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a the first operand
		 * @param {vec2} b the second operand
		 * @returns {vec2} out
		 */
		vec2.add = function(out, a, b) {
		    out[0] = a[0] + b[0];
		    out[1] = a[1] + b[1];
		    return out;
		};
		
		/**
		 * Subtracts vector b from vector a
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a the first operand
		 * @param {vec2} b the second operand
		 * @returns {vec2} out
		 */
		vec2.subtract = function(out, a, b) {
		    out[0] = a[0] - b[0];
		    out[1] = a[1] - b[1];
		    return out;
		};
		
		/**
		 * Alias for {@link vec2.subtract}
		 * @function
		 */
		vec2.sub = vec2.subtract;
		
		/**
		 * Multiplies two vec2's
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a the first operand
		 * @param {vec2} b the second operand
		 * @returns {vec2} out
		 */
		vec2.multiply = function(out, a, b) {
		    out[0] = a[0] * b[0];
		    out[1] = a[1] * b[1];
		    return out;
		};
		
		/**
		 * Alias for {@link vec2.multiply}
		 * @function
		 */
		vec2.mul = vec2.multiply;
		
		/**
		 * Divides two vec2's
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a the first operand
		 * @param {vec2} b the second operand
		 * @returns {vec2} out
		 */
		vec2.divide = function(out, a, b) {
		    out[0] = a[0] / b[0];
		    out[1] = a[1] / b[1];
		    return out;
		};
		
		/**
		 * Alias for {@link vec2.divide}
		 * @function
		 */
		vec2.div = vec2.divide;
		
		/**
		 * Math.ceil the components of a vec2
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a vector to ceil
		 * @returns {vec2} out
		 */
		vec2.ceil = function (out, a) {
		    out[0] = Math.ceil(a[0]);
		    out[1] = Math.ceil(a[1]);
		    return out;
		};
		
		/**
		 * Math.floor the components of a vec2
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a vector to floor
		 * @returns {vec2} out
		 */
		vec2.floor = function (out, a) {
		    out[0] = Math.floor(a[0]);
		    out[1] = Math.floor(a[1]);
		    return out;
		};
		
		/**
		 * Returns the minimum of two vec2's
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a the first operand
		 * @param {vec2} b the second operand
		 * @returns {vec2} out
		 */
		vec2.min = function(out, a, b) {
		    out[0] = Math.min(a[0], b[0]);
		    out[1] = Math.min(a[1], b[1]);
		    return out;
		};
		
		/**
		 * Returns the maximum of two vec2's
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a the first operand
		 * @param {vec2} b the second operand
		 * @returns {vec2} out
		 */
		vec2.max = function(out, a, b) {
		    out[0] = Math.max(a[0], b[0]);
		    out[1] = Math.max(a[1], b[1]);
		    return out;
		};
		
		/**
		 * Math.round the components of a vec2
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a vector to round
		 * @returns {vec2} out
		 */
		vec2.round = function (out, a) {
		    out[0] = Math.round(a[0]);
		    out[1] = Math.round(a[1]);
		    return out;
		};
		
		/**
		 * Scales a vec2 by a scalar number
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a the vector to scale
		 * @param {Number} b amount to scale the vector by
		 * @returns {vec2} out
		 */
		vec2.scale = function(out, a, b) {
		    out[0] = a[0] * b;
		    out[1] = a[1] * b;
		    return out;
		};
		
		/**
		 * Adds two vec2's after scaling the second operand by a scalar value
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a the first operand
		 * @param {vec2} b the second operand
		 * @param {Number} scale the amount to scale b by before adding
		 * @returns {vec2} out
		 */
		vec2.scaleAndAdd = function(out, a, b, scale) {
		    out[0] = a[0] + (b[0] * scale);
		    out[1] = a[1] + (b[1] * scale);
		    return out;
		};
		
		/**
		 * Calculates the euclidian distance between two vec2's
		 *
		 * @param {vec2} a the first operand
		 * @param {vec2} b the second operand
		 * @returns {Number} distance between a and b
		 */
		vec2.distance = function(a, b) {
		    var x = b[0] - a[0],
		        y = b[1] - a[1];
		    return Math.sqrt(x*x + y*y);
		};
		
		/**
		 * Alias for {@link vec2.distance}
		 * @function
		 */
		vec2.dist = vec2.distance;
		
		/**
		 * Calculates the squared euclidian distance between two vec2's
		 *
		 * @param {vec2} a the first operand
		 * @param {vec2} b the second operand
		 * @returns {Number} squared distance between a and b
		 */
		vec2.squaredDistance = function(a, b) {
		    var x = b[0] - a[0],
		        y = b[1] - a[1];
		    return x*x + y*y;
		};
		
		/**
		 * Alias for {@link vec2.squaredDistance}
		 * @function
		 */
		vec2.sqrDist = vec2.squaredDistance;
		
		/**
		 * Calculates the length of a vec2
		 *
		 * @param {vec2} a vector to calculate length of
		 * @returns {Number} length of a
		 */
		vec2.length = function (a) {
		    var x = a[0],
		        y = a[1];
		    return Math.sqrt(x*x + y*y);
		};
		
		/**
		 * Alias for {@link vec2.length}
		 * @function
		 */
		vec2.len = vec2.length;
		
		/**
		 * Calculates the squared length of a vec2
		 *
		 * @param {vec2} a vector to calculate squared length of
		 * @returns {Number} squared length of a
		 */
		vec2.squaredLength = function (a) {
		    var x = a[0],
		        y = a[1];
		    return x*x + y*y;
		};
		
		/**
		 * Alias for {@link vec2.squaredLength}
		 * @function
		 */
		vec2.sqrLen = vec2.squaredLength;
		
		/**
		 * Negates the components of a vec2
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a vector to negate
		 * @returns {vec2} out
		 */
		vec2.negate = function(out, a) {
		    out[0] = -a[0];
		    out[1] = -a[1];
		    return out;
		};
		
		/**
		 * Returns the inverse of the components of a vec2
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a vector to invert
		 * @returns {vec2} out
		 */
		vec2.inverse = function(out, a) {
		  out[0] = 1.0 / a[0];
		  out[1] = 1.0 / a[1];
		  return out;
		};
		
		/**
		 * Normalize a vec2
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a vector to normalize
		 * @returns {vec2} out
		 */
		vec2.normalize = function(out, a) {
		    var x = a[0],
		        y = a[1];
		    var len = x*x + y*y;
		    if (len > 0) {
		        //TODO: evaluate use of glm_invsqrt here?
		        len = 1 / Math.sqrt(len);
		        out[0] = a[0] * len;
		        out[1] = a[1] * len;
		    }
		    return out;
		};
		
		/**
		 * Calculates the dot product of two vec2's
		 *
		 * @param {vec2} a the first operand
		 * @param {vec2} b the second operand
		 * @returns {Number} dot product of a and b
		 */
		vec2.dot = function (a, b) {
		    return a[0] * b[0] + a[1] * b[1];
		};
		
		/**
		 * Computes the cross product of two vec2's
		 * Note that the cross product must by definition produce a 3D vector
		 *
		 * @param {vec3} out the receiving vector
		 * @param {vec2} a the first operand
		 * @param {vec2} b the second operand
		 * @returns {vec3} out
		 */
		vec2.cross = function(out, a, b) {
		    var z = a[0] * b[1] - a[1] * b[0];
		    out[0] = out[1] = 0;
		    out[2] = z;
		    return out;
		};
		
		/**
		 * Performs a linear interpolation between two vec2's
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a the first operand
		 * @param {vec2} b the second operand
		 * @param {Number} t interpolation amount between the two inputs
		 * @returns {vec2} out
		 */
		vec2.lerp = function (out, a, b, t) {
		    var ax = a[0],
		        ay = a[1];
		    out[0] = ax + t * (b[0] - ax);
		    out[1] = ay + t * (b[1] - ay);
		    return out;
		};
		
		/**
		 * Generates a random vector with the given scale
		 *
		 * @param {vec2} out the receiving vector
		 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
		 * @returns {vec2} out
		 */
		vec2.random = function (out, scale) {
		    scale = scale || 1.0;
		    var r = glMatrix.RANDOM() * 2.0 * Math.PI;
		    out[0] = Math.cos(r) * scale;
		    out[1] = Math.sin(r) * scale;
		    return out;
		};
		
		/**
		 * Transforms the vec2 with a mat2
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a the vector to transform
		 * @param {mat2} m matrix to transform with
		 * @returns {vec2} out
		 */
		vec2.transformMat2 = function(out, a, m) {
		    var x = a[0],
		        y = a[1];
		    out[0] = m[0] * x + m[2] * y;
		    out[1] = m[1] * x + m[3] * y;
		    return out;
		};
		
		/**
		 * Transforms the vec2 with a mat2d
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a the vector to transform
		 * @param {mat2d} m matrix to transform with
		 * @returns {vec2} out
		 */
		vec2.transformMat2d = function(out, a, m) {
		    var x = a[0],
		        y = a[1];
		    out[0] = m[0] * x + m[2] * y + m[4];
		    out[1] = m[1] * x + m[3] * y + m[5];
		    return out;
		};
		
		/**
		 * Transforms the vec2 with a mat3
		 * 3rd vector component is implicitly '1'
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a the vector to transform
		 * @param {mat3} m matrix to transform with
		 * @returns {vec2} out
		 */
		vec2.transformMat3 = function(out, a, m) {
		    var x = a[0],
		        y = a[1];
		    out[0] = m[0] * x + m[3] * y + m[6];
		    out[1] = m[1] * x + m[4] * y + m[7];
		    return out;
		};
		
		/**
		 * Transforms the vec2 with a mat4
		 * 3rd vector component is implicitly '0'
		 * 4th vector component is implicitly '1'
		 *
		 * @param {vec2} out the receiving vector
		 * @param {vec2} a the vector to transform
		 * @param {mat4} m matrix to transform with
		 * @returns {vec2} out
		 */
		vec2.transformMat4 = function(out, a, m) {
		    var x = a[0], 
		        y = a[1];
		    out[0] = m[0] * x + m[4] * y + m[12];
		    out[1] = m[1] * x + m[5] * y + m[13];
		    return out;
		};
		
		/**
		 * Perform some operation over an array of vec2s.
		 *
		 * @param {Array} a the array of vectors to iterate over
		 * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed
		 * @param {Number} offset Number of elements to skip at the beginning of the array
		 * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array
		 * @param {Function} fn Function to call for each vector in the array
		 * @param {Object} [arg] additional argument to pass to fn
		 * @returns {Array} a
		 * @function
		 */
		vec2.forEach = (function() {
		    var vec = vec2.create();
		
		    return function(a, stride, offset, count, fn, arg) {
		        var i, l;
		        if(!stride) {
		            stride = 2;
		        }
		
		        if(!offset) {
		            offset = 0;
		        }
		        
		        if(count) {
		            l = Math.min((count * stride) + offset, a.length);
		        } else {
		            l = a.length;
		        }
		
		        for(i = offset; i < l; i += stride) {
		            vec[0] = a[i]; vec[1] = a[i+1];
		            fn(vec, vec, arg);
		            a[i] = vec[0]; a[i+1] = vec[1];
		        }
		        
		        return a;
		    };
		})();
		
		/**
		 * Returns a string representation of a vector
		 *
		 * @param {vec2} vec vector to represent as a string
		 * @returns {String} string representation of the vector
		 */
		vec2.str = function (a) {
		    return 'vec2(' + a[0] + ', ' + a[1] + ')';
		};
		
		/**
		 * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)
		 *
		 * @param {vec2} a The first vector.
		 * @param {vec2} b The second vector.
		 * @returns {Boolean} True if the vectors are equal, false otherwise.
		 */
		vec2.exactEquals = function (a, b) {
		    return a[0] === b[0] && a[1] === b[1];
		};
		
		/**
		 * Returns whether or not the vectors have approximately the same elements in the same position.
		 *
		 * @param {vec2} a The first vector.
		 * @param {vec2} b The second vector.
		 * @returns {Boolean} True if the vectors are equal, false otherwise.
		 */
		vec2.equals = function (a, b) {
		    var a0 = a[0], a1 = a[1];
		    var b0 = b[0], b1 = b[1];
		    return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&
		            Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));
		};
		
		module.exports = vec2;
	
	
	/***/ },
	/* 14 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _VectorBase2 = __webpack_require__(3);
		
		var _VectorBase3 = _interopRequireDefault(_VectorBase2);
		
		var _Vector = __webpack_require__(2);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		var _Color = __webpack_require__(15);
		
		var _Color2 = _interopRequireDefault(_Color);
		
		var _Vector3 = __webpack_require__(16);
		
		var _Vector4 = _interopRequireDefault(_Vector3);
		
		var _Colors = __webpack_require__(17);
		
		var _Colors2 = _interopRequireDefault(_Colors);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } ///<reference path="./gl-matrix.d.ts"/>
		
		
		var Color3 = function (_VectorBase) {
		    _inherits(Color3, _VectorBase);
		
		    _createClass(Color3, null, [{
		        key: "fromColor4",
		        value: function fromColor4(col) {
		            return new Color3(col.R, col.G, col.B);
		        }
		    }, {
		        key: "parse",
		        value: function parse(color, tryParse) {
		            return Color3.internalParse(color, true, tryParse);
		        }
		        /// Color parser for css like syntax
		
		    }, {
		        key: "internalParse",
		        value: function internalParse(color, isFirst, tryParse) {
		            if (isFirst && _Colors2.default[color]) {
		                var col = _Color2.default.internalParse(_Colors2.default[color], false, tryParse);
		                return Color3.fromColor4(col);
		            }
		            var m = void 0;
		            if (isFirst) {
		                m = color.match(/^#([0-9a-f]{3})$/i);
		                // #fff
		                if (m) {
		                    var s = m[1];
		                    return new Color3(parseInt(s.charAt(0), 16) / 0xf, parseInt(s.charAt(1), 16) / 0xf, parseInt(s.charAt(2), 16) / 0xf);
		                }
		            }
		            // #ffffff
		            m = color.match(/^#([0-9a-f]{6})$/i);
		            if (m) {
		                var _s = m[1];
		                return new Color3(parseInt(_s.substr(0, 2), 16) / 0xff, parseInt(_s.substr(2, 2), 16) / 0xff, parseInt(_s.substr(4, 2), 16) / 0xff);
		            }
		            var n = color.match(/^\s*rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)\s*$/i);
		            if (n && isFirst) {
		                return new Color3(parseInt(n[1], 10) / 0xff, parseInt(n[2], 10) / 0xff, parseInt(n[3], 10) / 0xff);
		            }
		            if (tryParse) {
		                return undefined;
		            }
		            throw new Error("Unexpected color string" + color);
		        }
		    }, {
		        key: "equals",
		        value: function equals(col1, col2) {
		            return _VectorBase3.default.__elementEquals(col1, col2);
		        }
		    }]);
		
		    function Color3(r, g, b) {
		        _classCallCheck(this, Color3);
		
		        var _this = _possibleConstructorReturn(this, (Color3.__proto__ || Object.getPrototypeOf(Color3)).call(this));
		
		        _this.rawElements = [r, g, b];
		        return _this;
		    }
		
		    _createClass(Color3, [{
		        key: "toVector",
		        value: function toVector() {
		            return new _Vector2.default(this.R, this.G, this.B);
		        }
		    }, {
		        key: "toVector4",
		        value: function toVector4(a) {
		            if (typeof a === "undefined") {
		                a = 0;
		            }
		            return new _Vector4.default(this.R, this.G, this.B, a);
		        }
		    }, {
		        key: "equalWith",
		        value: function equalWith(col) {
		            return Color3.equals(col, this);
		        }
		    }, {
		        key: "toString",
		        value: function toString() {
		            return "rgb(" + Math.round(this.R * 255) + ", " + Math.round(this.G * 255) + ", " + Math.round(this.B * 255) + ")";
		        }
		    }, {
		        key: "toDisplayString",
		        value: function toDisplayString() {
		            var st = "#";
		            st += Math.round(this.R * 0xff).toString(16).toUpperCase();
		            st += Math.round(this.G * 0xff).toString(16).toUpperCase();
		            st += Math.round(this.B * 0xff).toString(16).toUpperCase();
		            return "Color3(" + this.R + ", " + this.G + ", " + this.B + ", " + st + ")";
		        }
		    }, {
		        key: "R",
		        get: function get() {
		            return this.rawElements[0];
		        }
		    }, {
		        key: "G",
		        get: function get() {
		            return this.rawElements[1];
		        }
		    }, {
		        key: "B",
		        get: function get() {
		            return this.rawElements[2];
		        }
		    }, {
		        key: "ElementCount",
		        get: function get() {
		            return 3;
		        }
		    }]);
		
		    return Color3;
		}(_VectorBase3.default);
		
		exports.default = Color3;
	
	/***/ },
	/* 15 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _VectorBase2 = __webpack_require__(3);
		
		var _VectorBase3 = _interopRequireDefault(_VectorBase2);
		
		var _Vector = __webpack_require__(16);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		var _Colors = __webpack_require__(17);
		
		var _Colors2 = _interopRequireDefault(_Colors);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } ///<reference path="./gl-matrix.d.ts"/>
		
		
		var Color4 = function (_VectorBase) {
		    _inherits(Color4, _VectorBase);
		
		    _createClass(Color4, null, [{
		        key: "internalParse",
		
		        /// Color parser for css like syntax
		        value: function internalParse(color, isFirst, tryParse) {
		            if (isFirst && _Colors2.default[color]) {
		                return Color4.internalParse(_Colors2.default[color], false);
		            }
		            var m = void 0;
		            if (isFirst) {
		                m = color.match(/^#([0-9a-f]{3})$/i);
		                // #fff
		                if (m) {
		                    var s = m[1];
		                    return new Color4(parseInt(s.charAt(0), 16) / 0xf, parseInt(s.charAt(1), 16) / 0xf, parseInt(s.charAt(2), 16) / 0xf, 1);
		                }
		            }
		            if (isFirst) {
		                m = color.match(/^#([0-9a-f]{4})$/i);
		                // #ffff
		                if (m) {
		                    var _s = m[1];
		                    return new Color4(parseInt(_s.charAt(0), 16) / 0xf, parseInt(_s.charAt(1), 16) / 0xf, parseInt(_s.charAt(2), 16) / 0xf, parseInt(_s.charAt(3), 16) / 0xf);
		                }
		            }
		            // #ffffff
		            m = color.match(/^#([0-9a-f]{6})$/i);
		            if (m) {
		                var _s2 = m[1];
		                return new Color4(parseInt(_s2.substr(0, 2), 16) / 0xff, parseInt(_s2.substr(2, 2), 16) / 0xff, parseInt(_s2.substr(4, 2), 16) / 0xff, 1);
		            }
		            // #ffffffff
		            if (isFirst) {
		                m = color.match(/^#([0-9a-f]{8})$/i);
		                if (m) {
		                    var _s3 = m[1];
		                    return new Color4(parseInt(_s3.substr(0, 2), 16) / 0xff, parseInt(_s3.substr(2, 2), 16) / 0xff, parseInt(_s3.substr(4, 2), 16) / 0xff, parseInt(_s3.substr(6, 2), 16) / 0xff);
		                }
		            }
		            var n = color.match(/^\s*rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)\s*$/i);
		            if (n && isFirst) {
		                return new Color4(parseInt(n[1], 10) / 0xff, parseInt(n[2], 10) / 0xff, parseInt(n[3], 10) / 0xff, 1);
		            }
		            n = color.match(/^\s*rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\,\s*(0|1|0\.\d+)\s*\)\s*$/i);
		            if (n && isFirst) {
		                var d = parseInt(n[4], 10);
		                d = d <= 1 ? d : d / 0xff;
		                return new Color4(parseInt(n[1], 10) / 0xff, parseInt(n[2], 10) / 0xff, parseInt(n[3], 10) / 0xff, parseInt(n[4], 10));
		            }
		            if (tryParse) {
		                return undefined;
		            }
		            throw new Error("Unexpected color string" + color);
		        }
		    }, {
		        key: "parse",
		        value: function parse(color, tryParse) {
		            return Color4.internalParse(color, true, tryParse);
		        }
		    }, {
		        key: "equals",
		        value: function equals(col1, col2) {
		            return _VectorBase3.default.__elementEquals(col1, col2);
		        }
		    }]);
		
		    function Color4(r, g, b, a) {
		        _classCallCheck(this, Color4);
		
		        var _this = _possibleConstructorReturn(this, (Color4.__proto__ || Object.getPrototypeOf(Color4)).call(this));
		
		        _this.rawElements = [r, g, b, a];
		        return _this;
		    }
		
		    _createClass(Color4, [{
		        key: "toVector",
		        value: function toVector() {
		            return new _Vector2.default(this.R, this.G, this.B, this.A);
		        }
		    }, {
		        key: "equalWith",
		        value: function equalWith(col) {
		            return Color4.equals(col, this);
		        }
		    }, {
		        key: "toString",
		        value: function toString() {
		            return "rgba(" + Math.round(this.R * 255) + ", " + Math.round(this.G * 255) + ", " + Math.round(this.B * 255) + ", " + Math.round(this.A * 255) + ")";
		        }
		    }, {
		        key: "toDisplayString",
		        value: function toDisplayString() {
		            var st = "#";
		            st += Math.round(this.R * 0xff).toString(16).toUpperCase();
		            st += Math.round(this.G * 0xff).toString(16).toUpperCase();
		            st += Math.round(this.B * 0xff).toString(16).toUpperCase();
		            st += Math.round(this.A * 0xff).toString(16).toUpperCase();
		            return "Color4(" + this.R + ", " + this.G + ", " + this.B + ", " + this.A + ", " + st + ")";
		        }
		    }, {
		        key: "R",
		        get: function get() {
		            return this.rawElements[0];
		        }
		    }, {
		        key: "G",
		        get: function get() {
		            return this.rawElements[1];
		        }
		    }, {
		        key: "B",
		        get: function get() {
		            return this.rawElements[2];
		        }
		    }, {
		        key: "A",
		        get: function get() {
		            return this.rawElements[3];
		        }
		    }, {
		        key: "ElementCount",
		        get: function get() {
		            return 4;
		        }
		    }]);
		
		    return Color4;
		}(_VectorBase3.default);
		
		exports.default = Color4;
	
	/***/ },
	/* 16 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _VectorBase2 = __webpack_require__(3);
		
		var _VectorBase3 = _interopRequireDefault(_VectorBase2);
		
		var _glMatrix = __webpack_require__(4);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } ///<reference path="./gl-matrix.d.ts"/>
		
		
		var Vector4 = function (_VectorBase) {
		    _inherits(Vector4, _VectorBase);
		
		    _createClass(Vector4, null, [{
		        key: "copy",
		        value: function copy(vec) {
		            return new Vector4(vec.X, vec.Y, vec.Z, vec.W);
		        }
		    }, {
		        key: "dot",
		        value: function dot(v1, v2) {
		            return _glMatrix.vec4.dot(v1.rawElements, v2.rawElements);
		        }
		    }, {
		        key: "add",
		        value: function add(v1, v2) {
		            var newVec = _glMatrix.vec4.create();
		            return new Vector4(_glMatrix.vec4.add(newVec, v1.rawElements, v2.rawElements));
		        }
		    }, {
		        key: "subtract",
		        value: function subtract(v1, v2) {
		            var newVec = _glMatrix.vec4.create();
		            return new Vector4(_glMatrix.vec4.sub(newVec, v1.rawElements, v2.rawElements));
		        }
		    }, {
		        key: "multiply",
		        value: function multiply(s, v) {
		            var newVec = _glMatrix.vec4.create();
		            return new Vector4(_glMatrix.vec4.scale(newVec, v.rawElements, s));
		        }
		    }, {
		        key: "negate",
		        value: function negate(v1) {
		            return Vector4.multiply(-1, v1);
		        }
		    }, {
		        key: "equals",
		        value: function equals(v1, v2) {
		            return _VectorBase3.default.__elementEquals(v1, v2);
		        }
		    }, {
		        key: "nearlyEquals",
		        value: function nearlyEquals(v1, v2) {
		            return _VectorBase3.default.__nearlyElementEquals(v1, v2);
		        }
		    }, {
		        key: "normalize",
		        value: function normalize(v1) {
		            var newVec = _glMatrix.vec4.create();
		            return new Vector4(_glMatrix.vec4.normalize(newVec, v1.rawElements));
		        }
		    }, {
		        key: "min",
		        value: function min(v1, v2) {
		            return new Vector4(_VectorBase3.default.__fromGenerationFunction(v1, v2, function (i, _v1, _v2) {
		                return Math.min(_v1.rawElements[i], _v2.rawElements[i]);
		            }));
		        }
		    }, {
		        key: "max",
		        value: function max(v1, v2) {
		            return new Vector4(_VectorBase3.default.__fromGenerationFunction(v1, v2, function (i, _v1, _v2) {
		                return Math.max(_v1.rawElements[i], _v2.rawElements[i]);
		            }));
		        }
		    }, {
		        key: "angle",
		        value: function angle(v1, v2) {
		            return Math.acos(Vector4.dot(v1.normalized, v2.normalized));
		        }
		    }, {
		        key: "parse",
		        value: function parse(str) {
		            var parseResult = _VectorBase3.default.__parse(str);
		            var elements = parseResult.elements;
		            if (!elements || elements.length !== 1 && elements.length !== 4) {
		                return undefined;
		            }
		            var result = void 0;
		            if (elements.length === 1) {
		                result = new Vector4(elements[0], elements[0], elements[0], elements[0]);
		            } else {
		                result = new Vector4(elements[0], elements[1], elements[2], elements[3]);
		            }
		            if (parseResult.needNormalize) {
		                result = result.normalizeThis();
		            }
		            if (parseResult.coefficient) {
		                result = result.multiplyWith(parseResult.coefficient);
		            }
		            if (parseResult.needNegate) {
		                result = result.negateThis();
		            }
		            return result;
		        }
		    }, {
		        key: "XUnit",
		        get: function get() {
		            return new Vector4(1, 0, 0, 0);
		        }
		    }, {
		        key: "YUnit",
		        get: function get() {
		            return new Vector4(0, 1, 0, 0);
		        }
		    }, {
		        key: "ZUnit",
		        get: function get() {
		            return new Vector4(0, 0, 1, 0);
		        }
		    }, {
		        key: "WUnit",
		        get: function get() {
		            return new Vector4(0, 0, 0, 1);
		        }
		    }, {
		        key: "One",
		        get: function get() {
		            return new Vector4(1, 1, 1, 1);
		        }
		    }, {
		        key: "Zero",
		        get: function get() {
		            return new Vector4(0, 0, 0, 0);
		        }
		    }]);
		
		    function Vector4(x, y, z, w) {
		        _classCallCheck(this, Vector4);
		
		        var _this = _possibleConstructorReturn(this, (Vector4.__proto__ || Object.getPrototypeOf(Vector4)).call(this));
		
		        if (typeof y === "undefined") {
		            _this.rawElements = x;
		            return _possibleConstructorReturn(_this);
		        }
		        _this.rawElements = [x, y, z, w];
		        return _this;
		    }
		
		    _createClass(Vector4, [{
		        key: "normalizeThis",
		        value: function normalizeThis() {
		            return Vector4.normalize(this);
		        }
		    }, {
		        key: "dotWith",
		        value: function dotWith(v) {
		            return Vector4.dot(this, v);
		        }
		    }, {
		        key: "addWith",
		        value: function addWith(v) {
		            return Vector4.add(this, v);
		        }
		    }, {
		        key: "subtractWith",
		        value: function subtractWith(v) {
		            return Vector4.subtract(this, v);
		        }
		    }, {
		        key: "multiplyWith",
		        value: function multiplyWith(s) {
		            return Vector4.multiply(s, this);
		        }
		    }, {
		        key: "negateThis",
		        value: function negateThis() {
		            return Vector4.negate(this);
		        }
		    }, {
		        key: "equalWith",
		        value: function equalWith(v) {
		            return Vector4.equals(this, v);
		        }
		    }, {
		        key: "nearlyEqualWith",
		        value: function nearlyEqualWith(v) {
		            return Vector4.nearlyEquals(this, v);
		        }
		    }, {
		        key: "toString",
		        value: function toString() {
		            return "(" + this.X + ", " + this.Y + ", " + this.Z + ", " + this.W + ")";
		        }
		    }, {
		        key: "toDisplayString",
		        value: function toDisplayString() {
		            return "Vector4" + this.toString();
		        }
		    }, {
		        key: "normalized",
		        get: function get() {
		            return this.multiplyWith(1 / this.magnitude);
		        }
		    }, {
		        key: "X",
		        get: function get() {
		            return this.rawElements[0];
		        },
		        set: function set(x) {
		            this.rawElements[0] = +x;
		        }
		    }, {
		        key: "Y",
		        get: function get() {
		            return this.rawElements[1];
		        },
		        set: function set(y) {
		            this.rawElements[1] = +y;
		        }
		    }, {
		        key: "Z",
		        get: function get() {
		            return this.rawElements[2];
		        },
		        set: function set(z) {
		            this.rawElements[2] = +z;
		        }
		    }, {
		        key: "W",
		        get: function get() {
		            return this.rawElements[3];
		        },
		        set: function set(w) {
		            this.rawElements[3] = +w;
		        }
		    }, {
		        key: "ElementCount",
		        get: function get() {
		            return 4;
		        }
		    }]);
		
		    return Vector4;
		}(_VectorBase3.default);
		
		exports.default = Vector4;
	
	/***/ },
	/* 17 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.default = {
		    "aliceblue": "#F0F8FF",
		    "antiquewhite": "#FAEBD7",
		    "aqua": "#00FFFF",
		    "aquamarine": "#7FFFD4",
		    "azure": "#F0FFFF",
		    "beige": "#F5F5DC",
		    "bisque": "#FFE4C4",
		    "black": "#000000",
		    "blanchedalmond": "#FFEBCD",
		    "blue": "#0000FF",
		    "blueviolet": "#8A2BE2",
		    "brown": "#A52A2A",
		    "burlywood": "#DEB887",
		    "cadetblue": "#5F9EA0",
		    "chartreuse": "#7FFF00",
		    "chocolate": "#D2691E",
		    "coral": "#FF7F50",
		    "cornflowerblue": "#6495ED",
		    "cornsilk": "#FFF8DC",
		    "crimson": "#DC143C",
		    "cyan": "#00FFFF",
		    "darkblue": "#00008B",
		    "darkcyan": "#008B8B",
		    "darkgoldenrod": "#B8860B",
		    "darkgray": "#A9A9A9",
		    "darkgreen": "#006400",
		    "darkgrey": "#A9A9A9",
		    "darkkhaki": "#BDB76B",
		    "darkmagenta": "#8B008B",
		    "darkolivegreen": "#556B2F",
		    "darkorange": "#FF8C00",
		    "darkorchid": "#9932CC",
		    "darkred": "#8B0000",
		    "darksalmon": "#E9967A",
		    "darkseagreen": "#8FBC8F",
		    "darkslateblue": "#483D8B",
		    "darkslategray": "#2F4F4F",
		    "darkslategrey": "#2F4F4F",
		    "darkturquoise": "#00CED1",
		    "darkviolet": "#9400D3",
		    "deeppink": "#FF1493",
		    "deepskyblue": "#00BFFF",
		    "dimgray": "#696969",
		    "dimgrey": "#696969",
		    "dodgerblue": "#1E90FF",
		    "firebrick": "#B22222",
		    "floralwhite": "#FFFAF0",
		    "forestgreen": "#228B22",
		    "fuchsia": "#FF00FF",
		    "gainsboro": "#DCDCDC",
		    "ghostwhite": "#F8F8FF",
		    "gold": "#FFD700",
		    "goldenrod": "#DAA520",
		    "gray": "#808080",
		    "green": "#008000",
		    "greenyellow": "#ADFF2F",
		    "grey": "#808080",
		    "honeydew": "#F0FFF0",
		    "hotpink": "#FF69B4",
		    "indianred": "#CD5C5C",
		    "indigo": "#4B0082",
		    "ivory": "#FFFFF0",
		    "khaki": "#F0E68C",
		    "lavender": "#E6E6FA",
		    "lavenderblush": "#FFF0F5",
		    "lawngreen": "#7CFC00",
		    "lemonchiffon": "#FFFACD",
		    "lightblue": "#ADD8E6",
		    "lightcoral": "#F08080",
		    "lightcyan": "#E0FFFF",
		    "lightgoldenrodyellow": "#FAFAD2",
		    "lightgray": "#D3D3D3",
		    "lightgreen": "#90EE90",
		    "lightgrey": "#D3D3D3",
		    "lightpink": "#FFB6C1",
		    "lightsalmon": "#FFA07A",
		    "lightseagreen": "#20B2AA",
		    "lightskyblue": "#87CEFA",
		    "lightslategray": "#778899",
		    "lightslategrey": "#778899",
		    "lightsteelblue": "#B0C4DE",
		    "lightyellow": "#FFFFE0",
		    "lime": "#00FF00",
		    "limegreen": "#32CD32",
		    "linen": "#FAF0E6",
		    "magenta": "#FF00FF",
		    "maroon": "#800000",
		    "mediumaquamarine": "#66CDAA",
		    "mediumblue": "#0000CD",
		    "mediumorchid": "#BA55D3",
		    "mediumpurple": "#9370DB",
		    "mediumseagreen": "#3CB371",
		    "mediumslateblue": "#7B68EE",
		    "mediumspringgreen": "#00FA9A",
		    "mediumturquoise": "#48D1CC",
		    "mediumvioletred": "#C71585",
		    "midnightblue": "#191970",
		    "mintcream": "#F5FFFA",
		    "mistyrose": "#FFE4E1",
		    "moccasin": "#FFE4B5",
		    "navajowhite": "#FFDEAD",
		    "navy": "#000080",
		    "oldlace": "#FDF5E6",
		    "olive": "#808000",
		    "olivedrab": "#6B8E23",
		    "orange": "#FFA500",
		    "orangered": "#FF4500",
		    "orchid": "#DA70D6",
		    "palegoldenrod": "#EEE8AA",
		    "palegreen": "#98FB98",
		    "paleturquoise": "#AFEEEE",
		    "palevioletred": "#DB7093",
		    "papayawhip": "#FFEFD5",
		    "peachpuff": "#FFDAB9",
		    "peru": "#CD853F",
		    "pink": "#FFC0CB",
		    "plum": "#DDA0DD",
		    "powderblue": "#B0E0E6",
		    "purple": "#800080",
		    "red": "#FF0000",
		    "rosybrown": "#BC8F8F",
		    "royalblue": "#4169E1",
		    "saddlebrown": "#8B4513",
		    "salmon": "#FA8072",
		    "sandybrown": "#F4A460",
		    "seagreen": "#2E8B57",
		    "seashell": "#FFF5EE",
		    "sienna": "#A0522D",
		    "silver": "#C0C0C0",
		    "skyblue": "#87CEEB",
		    "slateblue": "#6A5ACD",
		    "slategray": "#708090",
		    "slategrey": "#708090",
		    "snow": "#FFFAFA",
		    "springgreen": "#00FF7F",
		    "steelblue": "#4682B4",
		    "tan": "#D2B48C",
		    "teal": "#008080",
		    "thistle": "#D8BFD8",
		    "tomato": "#FF6347",
		    "turquoise": "#40E0D0",
		    "violet": "#EE82EE",
		    "wheat": "#F5DEB3",
		    "white": "#FFFFFF",
		    "whitesmoke": "#F5F5F5",
		    "yellow": "#FFFF00",
		    "yellowgreen": "#9ACD32"
		};
	
	/***/ },
	/* 18 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _Angle2DParser = __webpack_require__(19);
		
		var _Angle2DParser2 = _interopRequireDefault(_Angle2DParser);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function Angle2DConverter(val) {
		    if (typeof val === "number") {
		        return val;
		    }
		    if (typeof val === "string") {
		        return _Angle2DParser2.default.parseAngle(val);
		    }
		    throw new Error("Passed argument \"" + val + "\" can't be parsed as angle.");
		}
		exports.default = Angle2DConverter;
	
	/***/ },
	/* 19 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		 * Utility class to parse the arguments of attributes.
		 */
		/**
		 * Utility class to parse the arguments of attributes.
		 */var Angle2DParser = function () {
		    function Angle2DParser() {
		        _classCallCheck(this, Angle2DParser);
		    }
		
		    _createClass(Angle2DParser, null, [{
		        key: "parseAngle",
		
		        /**
		         * Parse angle strings.
		         * "p" means Pi. Ex) 3/4 p
		         * "d" means degree. if this unit was specified, the argument will be parsed as degree. Ex) 90d
		         * @param input the string to parse.
		         * @returns {number} parsed angle in radians.
		         */
		        value: function parseAngle(input) {
		            var regex = /^ *(-?[\de+-.]*) *(?:\/ *([\de+-.]*))? *(p|prad|deg|d|r|rad)? *$/gm;
		            var result = regex.exec(input);
		            if (result == null) {
		                throw new Error("faild parse Angle string:'" + input + "'");
		            }
		            var numerator = parseFloat(result[1]);
		            if (result[2]) {
		                numerator /= parseFloat(result[2]);
		            }
		            var unit = result[3];
		            if (unit == null) {
		                unit = "d";
		            }
		            if (unit === "r" || unit === "rad") {
		                return numerator;
		            }
		            if (unit === "p" || unit === "prad") {
		                return numerator * Math.PI;
		            }
		            return numerator / 180 * Math.PI;
		        }
		    }]);
		
		    return Angle2DParser;
		}();
		
		exports.default = Angle2DParser;
	
	/***/ },
	/* 20 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _Color = __webpack_require__(14);
		
		var _Color2 = _interopRequireDefault(_Color);
		
		var _Color3 = __webpack_require__(15);
		
		var _Color4 = _interopRequireDefault(_Color3);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function Color3Converter(val) {
		    if (val instanceof _Color2.default) {
		        return val;
		    } else if (val instanceof _Color4.default) {
		        return new _Color2.default(val.R, val.G, val.B);
		    } else if (typeof val === "string") {
		        return _Color2.default.parse(val);
		    } else if (Array.isArray(val)) {
		        return new _Color2.default(val[0], val[1], val[2]);
		    } else {
		        throw new Error(val + " can not be parsed as Color4.");
		    }
		}
		exports.default = Color3Converter;
	
	/***/ },
	/* 21 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _Color = __webpack_require__(14);
		
		var _Color2 = _interopRequireDefault(_Color);
		
		var _Color3 = __webpack_require__(15);
		
		var _Color4 = _interopRequireDefault(_Color3);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function Color4Converter(val) {
		    if (val instanceof _Color4.default) {
		        return val;
		    } else if (val instanceof _Color2.default) {
		        return new _Color4.default(val.R, val.G, val.B, 1.0);
		    } else if (typeof val === "string") {
		        return _Color4.default.parse(val);
		    } else if (Array.isArray(val)) {
		        return new _Color4.default(val[0], val[1], val[2], val[3]);
		    } else {
		        throw new Error(val + " can not be parsed as Color4.");
		    }
		}
		exports.default = Color4Converter;
	
	/***/ },
	/* 22 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _Quaternion = __webpack_require__(23);
		
		var _Quaternion2 = _interopRequireDefault(_Quaternion);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function Rotation3Converter(val) {
		    if (val instanceof _Quaternion2.default) {
		        return val;
		    } else if (Array.isArray(val)) {
		        return new _Quaternion2.default([val[0], val[1], val[2], val[3]]);
		    } else if (typeof val === "string") {
		        return _Quaternion2.default.parse(val);
		    }
		}
		exports.default = Rotation3Converter;
	
	/***/ },
	/* 23 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); ///<reference path="./gl-matrix.d.ts"/>
		
		
		var _Vector = __webpack_require__(2);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		var _glMatrix = __webpack_require__(4);
		
		var _Matrix = __webpack_require__(24);
		
		var _Matrix2 = _interopRequireDefault(_Matrix);
		
		var _Angle2DParser = __webpack_require__(19);
		
		var _Angle2DParser2 = _interopRequireDefault(_Angle2DParser);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		* The class to maniplate quaternion.
		* Basically,you don't need to operate raw element.
		* You consider to use some of useful methods without editing raw element forcelly.
		* Each element will be represented as (w;x,y,z)
		* (1,i,j,k) is base axis for quaternion. (i,j,k is pure imaginary number)
		* (w;x,y,z) means w*1+x*i+y*j+z*k
		*
		*/
		var Quaternion = function () {
		    _createClass(Quaternion, null, [{
		        key: "equals",
		        value: function equals(q1, q2) {
		            for (var i = 0; i < 4; i++) {
		                if (q1.rawElements[i] !== q2.rawElements[i]) {
		                    return false;
		                }
		            }
		            return true;
		        }
		        /**
		         * Parse angle string in 3D.
		         * "p" means Pi. Ex) 3/4 p
		         * "d" means degree. if this unit was specified, the argument will be parsed as degree. Ex) 90d
		         * "eular(x,y,z)" means rotation in eular. This means Z-X-Y rotation like Unity.
		         * "axis(angle,x,y,z)" means rotation around specified axis. This means angle radians will be rotated around the axis (x,y,z).
		         * This angle can be specified with the character "p" or "d".
		         * "x(angle)","y(angle)" or "z(angle)" means rotation around unit axis.
		         * This angle can be specified with the character "p" or "d".
		         * @param input the string to be parsed as angle in 3D.
		         * @returns {Quaternion} parsed rotation in Quaternion.
		         */
		
		    }, {
		        key: "parse",
		        value: function parse(input) {
		            var reg1 = /^ *(x|y|z) *\(([^\(\)]+)\) *$/gm;
		            var reg2 = /^ *axis *\(([^\(\),]+),([^\(\),]+),([^\(\),]+),([^\(\),]+)\) *$/gm;
		            var reg3 = /^ *([^\(\),]+),([^\(\),]+),([^\(\),]+) *$/gm;
		            var result = reg1.exec(input);
		            if (result) {
		                if (result[1] === "x") {
		                    return Quaternion.angleAxis(_Angle2DParser2.default.parseAngle(result[2]), _Vector2.default.XUnit);
		                }
		                if (result[1] === "y") {
		                    return Quaternion.angleAxis(_Angle2DParser2.default.parseAngle(result[2]), _Vector2.default.YUnit);
		                }
		                if (result[1] === "z") {
		                    return Quaternion.angleAxis(_Angle2DParser2.default.parseAngle(result[2]), _Vector2.default.ZUnit);
		                }
		            }
		            var res2 = reg2.exec(input);
		            if (res2) {
		                var rotation = _Angle2DParser2.default.parseAngle(res2[1]);
		                var x = parseFloat(res2[2]);
		                var y = parseFloat(res2[3]);
		                var z = parseFloat(res2[4]);
		                return Quaternion.angleAxis(rotation, new _Vector2.default(x, y, z));
		            }
		            var res3 = reg3.exec(input);
		            if (res3) {
		                return Quaternion.euler(_Angle2DParser2.default.parseAngle(res3[1]), _Angle2DParser2.default.parseAngle(res3[2]), _Angle2DParser2.default.parseAngle(res3[3]));
		            }
		            throw new Error("Unknown format for rotation3D:'" + input + "'");
		        }
		        /**
		        * Calculate add result of two quaternion
		        */
		
		    }, {
		        key: "add",
		        value: function add(q1, q2) {
		            var newQuat = _glMatrix.quat.create();
		            return new Quaternion(_glMatrix.quat.add(newQuat, q1.rawElements, q2.rawElements));
		        }
		        /**
		        * Calculate multiply result of two quaternion
		        */
		
		    }, {
		        key: "multiply",
		        value: function multiply(q1, q2) {
		            var newQuat = _glMatrix.quat.create();
		            return new Quaternion(_glMatrix.quat.mul(newQuat, q1.rawElements, q2.rawElements));
		        }
		        /**
		        * Calculate the rotation quaternion represented as pair of angle and axis.
		        */
		
		    }, {
		        key: "angleAxis",
		        value: function angleAxis(angle, axis) {
		            var axisVec = _glMatrix.vec3.create();
		            axisVec[0] = axis.X;
		            axisVec[1] = axis.Y;
		            axisVec[2] = axis.Z;
		            var newQuat = _glMatrix.quat.create();
		            return new Quaternion(_glMatrix.quat.setAxisAngle(newQuat, axisVec, +angle));
		        }
		    }, {
		        key: "euler",
		        value: function euler(x, y, z) {
		            return Quaternion.multiply(Quaternion.angleAxis(z, _Vector2.default.ZUnit), Quaternion.multiply(Quaternion.angleAxis(x, _Vector2.default.XUnit), Quaternion.angleAxis(y, _Vector2.default.YUnit)));
		        }
		    }, {
		        key: "eulerXYZ",
		        value: function eulerXYZ(x, y, z) {
		            return Quaternion.multiply(Quaternion.angleAxis(z, _Vector2.default.ZUnit), Quaternion.multiply(Quaternion.angleAxis(y, _Vector2.default.YUnit), Quaternion.angleAxis(x, _Vector2.default.XUnit)));
		        }
		    }, {
		        key: "slerp",
		        value: function slerp(q1, q2, t) {
		            var newQuat = _glMatrix.quat.create();
		            return new Quaternion(_glMatrix.quat.slerp(newQuat, q1.rawElements, q2.rawElements, +t));
		        }
		        /**
		         * Returns the angle in degrees between two rotations q1 and q2.
		         * @param q1 the quaternion represents begin angle.
		         * @param q2 the quaternion represents end angle.
		         * @returns {number} angle represented in radians.
		         */
		
		    }, {
		        key: "angle",
		        value: function angle(q1, q2) {
		            var delta = Quaternion.multiply(q2, q1.inverse());
		            delta = delta.normalize();
		            return 2 * Math.acos(delta.W);
		        }
		    }, {
		        key: "fromToRotation",
		        value: function fromToRotation(from, to) {
		            var crossed = _Vector2.default.cross(from.normalized, to.normalized);
		            var angle = _Vector2.default.dot(from.normalized, to.normalized);
		            return Quaternion.angleAxis(angle, crossed);
		        }
		    }, {
		        key: "lookRotation",
		        value: function lookRotation(forward, upVec) {
		            upVec = upVec || _Vector2.default.YUnit;
		            var normalizedForward = forward.normalized;
		            var upForwardCross = _Vector2.default.cross(upVec, normalizedForward).normalized;
		            var thirdAxis = _Vector2.default.cross(normalizedForward, upForwardCross);
		            var m00 = upForwardCross.X;
		            var m01 = upForwardCross.Y;
		            var m02 = upForwardCross.Z;
		            var m10 = thirdAxis.X;
		            var m11 = thirdAxis.Y;
		            var m12 = thirdAxis.Z;
		            var m20 = normalizedForward.X;
		            var m21 = normalizedForward.Y;
		            var m22 = normalizedForward.Z;
		            var num8 = m00 + m11 + m22;
		            if (num8 > 0) {
		                var num = Math.sqrt(1 + num8);
		                return new Quaternion([(m12 - m21) * 0.5 / num, (m20 - m02) * 0.5 / num, (m01 - m10) * 0.5 / num, num / 2]);
		            }
		            if (m00 >= m11 && m00 >= m22) {
		                var num7 = Math.sqrt(1 + m00 - m11 - m22);
		                return new Quaternion([(m01 + m10) * 0.5 / num7, (m02 + m20) * 0.5 / num7, (m12 - m21) * 0.5 / num7, num7 / 2]);
		            }
		            if (m11 > m22) {
		                var num6 = Math.sqrt(1 + m11 - m00 - m22);
		                return new Quaternion([(m10 + m01) * 0, 5 / num6, 0.5 * num6, (m21 + m12) * 0.5 / num6, (m20 - m02) * 0.5 / num6]);
		            }
		            var num5 = Math.sqrt(1 + m22 - m00 - m11);
		            return new Quaternion([(m20 + m02) * 0.5 / num5, (m21 + m12) * 0.5 / num5, 0.5 * num5, (m01 - m10) * 0.5 / num5]);
		        }
		    }, {
		        key: "Identity",
		        get: function get() {
		            return new Quaternion(_glMatrix.quat.create());
		        }
		        /**
		        * Constructor by specifing each elements.
		        */
		
		    }]);
		
		    function Quaternion(rawElements) {
		        _classCallCheck(this, Quaternion);
		
		        this.rawElements = rawElements;
		    }
		
		    _createClass(Quaternion, [{
		        key: "equalWith",
		        value: function equalWith(q) {
		            return Quaternion.equals(this, q);
		        }
		        /**
		        * Get normalized quaternion
		        */
		
		    }, {
		        key: "normalize",
		        value: function normalize() {
		            var newQuat = _glMatrix.quat.create();
		            return new Quaternion(_glMatrix.quat.normalize(newQuat, this.rawElements));
		        }
		    }, {
		        key: "inverse",
		        value: function inverse() {
		            var newQuat = _glMatrix.quat.create();
		            return new Quaternion(_glMatrix.quat.invert(newQuat, this.rawElements));
		        }
		    }, {
		        key: "toAngleAxisString",
		        value: function toAngleAxisString() {
		            var angle = 2 * Math.acos(this.W);
		            var imm = Math.sqrt(1 - this.W * this.W);
		            if (angle !== 180 && angle !== 0) {
		                return "axis(" + angle + "," + this.X / imm + "," + this.Y / imm + "," + this.Z / imm + ")";
		            } else if (angle === 0) {
		                return "axis(" + angle + ",0,1,0)";
		            } else {
		                return "axis(180d," + this.X + "," + this.Y + "," + this.Z + ")";
		            }
		        }
		    }, {
		        key: "toString",
		        value: function toString() {
		            return this.toAngleAxisString();
		        }
		    }, {
		        key: "factoringQuaternionZXY",
		        value: function factoringQuaternionZXY() {
		            var result = { x: 0, y: 0, z: 0 };
		            var mat = _Matrix2.default.rotationQuaternion(this);
		            var sx = mat.rawElements[6];
		            if (Math.abs(sx) < 1 - 1.0E-4) {
		                result.x = Math.asin(sx);
		                result.z = Math.atan2(-mat.rawElements[4], mat.rawElements[5]);
		                result.y = Math.atan2(-mat.rawElements[2], mat.rawElements[10]);
		            } else {
		                result.y = 0;
		                result.x = Math.PI / 2 * sx;
		                result.z = Math.atan2(mat.rawElements[1], mat.rawElements[0]);
		            }
		            return result;
		        }
		    }, {
		        key: "factoringQuaternionXYZ",
		        value: function factoringQuaternionXYZ() {
		            var result = { x: 0, y: 0, z: 0 };
		            var mat = _Matrix2.default.rotationQuaternion(this);
		            var sy = -mat.rawElements[2];
		            if (Math.abs(sy) < 1 - 1.0E-4) {
		                result.x = Math.atan2(mat.rawElements[6], mat.rawElements[10]);
		                result.y = Math.asin(sy);
		                result.z = Math.atan2(mat.rawElements[1], mat.rawElements[0]);
		            } else {
		                result.x = 0;
		                result.y = Math.PI / 2 * sy;
		                result.z = Math.atan2(-mat.rawElements[4], mat.rawElements[5]);
		            }
		            return result;
		        }
		    }, {
		        key: "eularAngles",
		        get: function get() {
		            var eular = this.factoringQuaternionZXY();
		            return new _Vector2.default(eular.x, eular.y, eular.z);
		        },
		        set: function set(v) {
		            this.rawElements = Quaternion.euler(v.X, v.Y, v.Z).rawElements;
		        }
		        /**
		        * Getter for X.
		        */
		
		    }, {
		        key: "X",
		        get: function get() {
		            return this.rawElements[0];
		        }
		        /**
		        * Getter for Y.
		        */
		
		    }, {
		        key: "Y",
		        get: function get() {
		            return this.rawElements[1];
		        }
		        /**
		        * Getter for Z.
		        */
		
		    }, {
		        key: "Z",
		        get: function get() {
		            return this.rawElements[2];
		        }
		        /**
		        * Getter for W.
		        */
		
		    }, {
		        key: "W",
		        get: function get() {
		            return this.rawElements[3];
		        }
		        /**
		        * Getter for imaginary part vector.
		        * It returns the vector (x,y,z)
		        */
		
		    }, {
		        key: "ImaginaryPart",
		        get: function get() {
		            return new _Vector2.default(this.X, this.Y, this.Z);
		        }
		        /**
		        * Get the conjugate of this quaternion
		        */
		
		    }, {
		        key: "Conjugate",
		        get: function get() {
		            var newQuat = _glMatrix.quat.create();
		            return new Quaternion(_glMatrix.quat.conjugate(newQuat, this.rawElements));
		        }
		        /**
		        * Get the length
		        */
		
		    }, {
		        key: "Length",
		        get: function get() {
		            return _glMatrix.quat.len(this.rawElements);
		        }
		    }]);
		
		    return Quaternion;
		}();
		
		exports.default = Quaternion;
	
	/***/ },
	/* 24 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _MatrixBase2 = __webpack_require__(25);
		
		var _MatrixBase3 = _interopRequireDefault(_MatrixBase2);
		
		var _Vector = __webpack_require__(2);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		var _Vector3 = __webpack_require__(16);
		
		var _Vector4 = _interopRequireDefault(_Vector3);
		
		var _Quaternion = __webpack_require__(23);
		
		var _Quaternion2 = _interopRequireDefault(_Quaternion);
		
		var _glMatrix = __webpack_require__(4);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } ///<reference path="./gl-matrix.d.ts"/>
		
		
		var Matrix = function (_MatrixBase) {
		    _inherits(Matrix, _MatrixBase);
		
		    _createClass(Matrix, null, [{
		        key: "zero",
		        value: function zero() {
		            return new Matrix([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
		        }
		    }, {
		        key: "identity",
		        value: function identity() {
		            return new Matrix(_glMatrix.mat4.create());
		        }
		    }, {
		        key: "fromElements",
		        value: function fromElements(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
		            return new Matrix([m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33]);
		        }
		    }, {
		        key: "fromFunc",
		        value: function fromFunc(f) {
		            return new Matrix([f(0, 0), f(1, 0), f(2, 0), f(3, 0), f(0, 1), f(1, 1), f(2, 1), f(3, 1), f(0, 2), f(1, 2), f(2, 2), f(3, 2), f(0, 3), f(1, 3), f(2, 3), f(3, 3)]);
		        }
		    }, {
		        key: "equals",
		        value: function equals(m1, m2) {
		            return Matrix.__elementEquals(m1, m2);
		        }
		    }, {
		        key: "add",
		        value: function add(m1, m2) {
		            var mat = _glMatrix.mat4.create();
		            for (var i = 0; i < 16; i++) {
		                mat[i] = m1.rawElements[i] + m2.rawElements[i];
		            }
		            return new Matrix(mat);
		        }
		    }, {
		        key: "subtract",
		        value: function subtract(m1, m2) {
		            return Matrix.add(m1, Matrix.negate(m2));
		        }
		    }, {
		        key: "scalarMultiply",
		        value: function scalarMultiply(s, m) {
		            var newMat = _glMatrix.mat4.create();
		            _glMatrix.mat4.multiply(newMat, [s, 0, 0, 0, 0, s, 0, 0, 0, 0, s, 0, 0, 0, 0, s], m.rawElements);
		            return new Matrix(newMat);
		        }
		    }, {
		        key: "multiply",
		        value: function multiply(m1, m2) {
		            var newMat = _glMatrix.mat4.create();
		            return new Matrix(_glMatrix.mat4.mul(newMat, m1.rawElements, m2.rawElements));
		        }
		    }, {
		        key: "trs",
		        value: function trs(t, rot, s) {
		            var newMat = _glMatrix.mat4.create();
		            var cacheMat = _glMatrix.mat4.create();
		            _glMatrix.mat4.mul(newMat, _glMatrix.mat4.translate(newMat, _glMatrix.mat4.create(), t.rawElements), _glMatrix.mat4.fromQuat(cacheMat, rot.rawElements));
		            _glMatrix.mat4.scale(newMat, newMat, s.rawElements);
		            return new Matrix(newMat);
		        }
		    }, {
		        key: "negate",
		        value: function negate(m) {
		            return this.scalarMultiply(-1, m);
		        }
		    }, {
		        key: "transpose",
		        value: function transpose(m) {
		            var newMat = _glMatrix.mat4.create();
		            return new Matrix(_glMatrix.mat4.transpose(newMat, m.rawElements));
		        }
		    }, {
		        key: "transformPoint",
		        value: function transformPoint(m, t) {
		            var newVec = _glMatrix.vec3.create();
		            _glMatrix.vec3.transformMat4(newVec, t.rawElements, m.rawElements);
		            return new _Vector2.default(newVec);
		        }
		    }, {
		        key: "transformNormal",
		        value: function transformNormal(m, t) {
		            var newVec = _glMatrix.vec4.create();
		            var trans = _glMatrix.vec4.create();
		            trans[0] = t.X;
		            trans[1] = t.Y;
		            trans[2] = t.Z;
		            trans[3] = 0;
		            _glMatrix.vec4.transformMat4(newVec, trans, m.rawElements);
		            return new _Vector2.default(newVec[0], newVec[1], newVec[2]);
		        }
		    }, {
		        key: "transform",
		        value: function transform(m, t) {
		            var newVec = _glMatrix.vec4.create();
		            var trans = _glMatrix.vec4.create();
		            trans[0] = t.X;
		            trans[1] = t.Y;
		            trans[2] = t.Z;
		            trans[3] = t.W;
		            _glMatrix.vec4.transformMat4(newVec, trans, m.rawElements);
		            return new _Vector4.default(newVec[0], newVec[1], newVec[2], newVec[3]);
		        }
		        /**
		         * Retrieve determinant of passed matrix
		         */
		
		    }, {
		        key: "determinant",
		        value: function determinant(m) {
		            return _glMatrix.mat4.determinant(m.rawElements);
		        }
		        /**
		         * Compute inverted passed matrix.
		         */
		
		    }, {
		        key: "inverse",
		        value: function inverse(m) {
		            var newMat = _glMatrix.mat4.create();
		            return new Matrix(_glMatrix.mat4.invert(newMat, m.rawElements));
		        }
		        /**
		         * Generate linear translation transform matrix.
		         */
		
		    }, {
		        key: "translate",
		        value: function translate(v) {
		            var newMat = _glMatrix.mat4.create();
		            _glMatrix.mat4.translate(newMat, newMat, v.rawElements);
		            return new Matrix(newMat);
		        }
		        /**
		         * Generate linear scaling transform matrix.
		         */
		
		    }, {
		        key: "scale",
		        value: function scale(v) {
		            var newMat = _glMatrix.mat4.create();
		            _glMatrix.mat4.scale(newMat, newMat, v.rawElements);
		            return new Matrix(newMat);
		        }
		    }, {
		        key: "rotateX",
		        value: function rotateX(angle) {
		            var newMat = _glMatrix.mat4.create();
		            _glMatrix.mat4.rotateX(newMat, newMat, angle);
		            return new Matrix(newMat);
		        }
		    }, {
		        key: "rotateY",
		        value: function rotateY(angle) {
		            var newMat = _glMatrix.mat4.create();
		            _glMatrix.mat4.rotateY(newMat, newMat, angle);
		            return new Matrix(newMat);
		        }
		    }, {
		        key: "rotateZ",
		        value: function rotateZ(angle) {
		            var newMat = _glMatrix.mat4.create();
		            _glMatrix.mat4.rotateZ(newMat, newMat, angle);
		            return new Matrix(newMat);
		        }
		    }, {
		        key: "rotationQuaternion",
		        value: function rotationQuaternion(quat_) {
		            var quaternion = _glMatrix.quat.create();
		            var newMat = _glMatrix.mat4.create();
		            _glMatrix.quat.normalize(quaternion, quat_.rawElements);
		            _glMatrix.mat4.fromQuat(newMat, quaternion);
		            return new Matrix(newMat);
		        }
		    }, {
		        key: "frustum",
		        value: function frustum(left, right, bottom, top, near, far) {
		            var newMat = _glMatrix.mat4.create();
		            _glMatrix.mat4.frustum(newMat, left, right, bottom, top, near, far);
		            return new Matrix(newMat);
		        }
		    }, {
		        key: "ortho",
		        value: function ortho(left, right, bottom, top, near, far) {
		            var newMat = _glMatrix.mat4.create();
		            _glMatrix.mat4.ortho(newMat, left, right, bottom, top, near, far);
		            return new Matrix(newMat);
		        }
		    }, {
		        key: "perspective",
		        value: function perspective(fovy, aspect, near, far) {
		            var newMat = _glMatrix.mat4.create();
		            _glMatrix.mat4.perspective(newMat, fovy, aspect, near, far);
		            return new Matrix(newMat);
		        }
		    }, {
		        key: "lookAt",
		        value: function lookAt(eye, _lookAt, up) {
		            var newMat = _glMatrix.mat4.create();
		            _glMatrix.mat4.lookAt(newMat, eye.rawElements, _lookAt.rawElements, up.rawElements);
		            return new Matrix(newMat);
		        }
		    }]);
		
		    function Matrix(arr) {
		        _classCallCheck(this, Matrix);
		
		        var _this = _possibleConstructorReturn(this, (Matrix.__proto__ || Object.getPrototypeOf(Matrix)).call(this));
		
		        if (arr) {
		            _this.rawElements = arr;
		        } else {
		            _this.rawElements = _glMatrix.mat4.create();
		        }
		        return _this;
		    }
		
		    _createClass(Matrix, [{
		        key: "getAt",
		        value: function getAt(row, colmun) {
		            return this.rawElements[colmun * 4 + row];
		        }
		    }, {
		        key: "setAt",
		        value: function setAt(row, colmun, val) {
		            this.rawElements[colmun * 4 + row] = val;
		        }
		    }, {
		        key: "getBySingleIndex",
		        value: function getBySingleIndex(index) {
		            return this.rawElements[index];
		        }
		    }, {
		        key: "getColmun",
		        value: function getColmun(col) {
		            return new _Vector4.default(this.rawElements[col * 4], this.rawElements[col * 4 + 1], this.rawElements[col * 4 + 2], this.rawElements[col * 4 + 3]);
		        }
		        /**
		        * Get row
		        * @params row [0-3]
		        */
		
		    }, {
		        key: "getRow",
		        value: function getRow(row) {
		            return new _Vector4.default(this.rawElements[row], this.rawElements[row + 4], this.rawElements[row + 8], this.rawElements[row + 12]);
		        }
		    }, {
		        key: "multiplyWith",
		        value: function multiplyWith(m) {
		            return Matrix.multiply(this, m);
		        }
		    }, {
		        key: "equalWith",
		        value: function equalWith(m) {
		            return Matrix.equals(m, this);
		        }
		    }, {
		        key: "getTranslation",
		        value: function getTranslation() {
		            var res = [0, 0, 0];
		            _glMatrix.mat4.getTranslation(res, this.rawElements);
		            return new _Vector2.default(res);
		        }
		    }, {
		        key: "getScaling",
		        value: function getScaling() {
		            var res = [0, 0, 0];
		            _glMatrix.mat4.getScaling(res, this.rawElements);
		            return new _Vector2.default(res);
		        }
		    }, {
		        key: "getRotation",
		        value: function getRotation() {
		            var res = [0, 0, 0, 0];
		            _glMatrix.mat4.getRotation(res, this.rawElements);
		            return new _Quaternion2.default(res);
		        }
		    }, {
		        key: "toString",
		        value: function toString() {
		            return "|" + this.getBySingleIndex(0) + " " + this.getBySingleIndex(4) + " " + this.getBySingleIndex(8) + " " + this.getBySingleIndex(12) + "|\n\n                 |" + this.getBySingleIndex(1) + " " + this.getBySingleIndex(5) + " " + this.getBySingleIndex(9) + " " + this.getBySingleIndex(13) + "|\n\n                 |" + this.getBySingleIndex(2) + " " + this.getBySingleIndex(6) + " " + this.getBySingleIndex(10) + " " + this.getBySingleIndex(14) + "|\n\n                 |" + this.getBySingleIndex(3) + " " + this.getBySingleIndex(7) + " " + this.getBySingleIndex(11) + " " + this.getBySingleIndex(15) + "|";
		        }
		    }, {
		        key: "ElementCount",
		        get: function get() {
		            return 16;
		        }
		    }, {
		        key: "RowCount",
		        get: function get() {
		            return 4;
		        }
		    }, {
		        key: "ColmunCount",
		        get: function get() {
		            return 4;
		        }
		    }]);
		
		    return Matrix;
		}(_MatrixBase3.default);
		
		exports.default = Matrix;
	
	/***/ },
	/* 25 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		///<reference path="./gl-matrix.d.ts"/>
		var MatrixBase = function () {
		    function MatrixBase() {
		        _classCallCheck(this, MatrixBase);
		    }
		
		    _createClass(MatrixBase, [{
		        key: "getAt",
		        value: function getAt(row, colmun) {
		            throw new Error("Not implemented");
		        }
		    }, {
		        key: "getBySingleIndex",
		        value: function getBySingleIndex(index) {
		            throw new Error("Not implemented");
		        }
		    }, {
		        key: "RowCount",
		        get: function get() {
		            return 0;
		        }
		    }, {
		        key: "ColmunCount",
		        get: function get() {
		            return 0;
		        }
		    }], [{
		        key: "__elementEquals",
		        value: function __elementEquals(m1, m2) {
		            if (m1.RowCount !== m2.RowCount || m1.ColmunCount !== m2.ColmunCount) {
		                return false;
		            }
		            var count = m1.RowCount * m2.ColmunCount;
		            for (var i = 0; i < count; i++) {
		                if (m1.getBySingleIndex(i) !== m2.getBySingleIndex(i)) {
		                    return false;
		                }
		            }
		            return true;
		        }
		    }]);
		
		    return MatrixBase;
		}();
		
		exports.default = MatrixBase;
	
	/***/ },
	/* 26 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _Vector = __webpack_require__(27);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function Vector2Converter(val) {
		    if (val instanceof _Vector2.default) {
		        return val;
		    } else if (typeof val === "string") {
		        return _Vector2.default.parse(val);
		    } else if (typeof val === "number") {
		        return new _Vector2.default(val, val);
		    } else if (Array.isArray(val)) {
		        return new _Vector2.default(val[0], val[1]);
		    }
		}
		exports.default = Vector2Converter;
	
	/***/ },
	/* 27 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _VectorBase2 = __webpack_require__(3);
		
		var _VectorBase3 = _interopRequireDefault(_VectorBase2);
		
		var _glMatrix = __webpack_require__(4);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } ///<reference path="./gl-matrix.d.ts"/>
		
		
		var Vector2 = function (_VectorBase) {
		    _inherits(Vector2, _VectorBase);
		
		    _createClass(Vector2, null, [{
		        key: "copy",
		        value: function copy(vec) {
		            return new Vector2(vec.X, vec.Y);
		        }
		    }, {
		        key: "parse",
		        value: function parse(str) {
		            var parseResult = _VectorBase3.default.__parse(str);
		            var elements = parseResult.elements;
		            if (elements.length !== 1 && elements.length !== 2) {
		                return undefined;
		            }
		            var result = void 0;
		            if (elements.length === 1) {
		                result = new Vector2(elements[0], elements[0]);
		            } else {
		                result = new Vector2(elements[0], elements[1]);
		            }
		            if (parseResult.needNormalize) {
		                result = result.normalizeThis();
		            }
		            if (parseResult.coefficient) {
		                result = result.multiplyWith(parseResult.coefficient);
		            }
		            if (parseResult.needNegate) {
		                result = result.negateThis();
		            }
		            return result;
		        }
		    }, {
		        key: "dot",
		        value: function dot(v1, v2) {
		            return _glMatrix.vec2.dot(v1.rawElements, v2.rawElements);
		        }
		    }, {
		        key: "add",
		        value: function add(v1, v2) {
		            var newVec = _glMatrix.vec2.create();
		            return new Vector2(_glMatrix.vec2.add(newVec, v1.rawElements, v2.rawElements));
		        }
		    }, {
		        key: "subtract",
		        value: function subtract(v1, v2) {
		            var newVec = _glMatrix.vec2.create();
		            return new Vector2(_glMatrix.vec2.sub(newVec, v1.rawElements, v2.rawElements));
		        }
		    }, {
		        key: "multiply",
		        value: function multiply(s, v) {
		            var newVec = _glMatrix.vec2.create();
		            return new Vector2(_glMatrix.vec2.scale(newVec, v.rawElements, s));
		        }
		    }, {
		        key: "negate",
		        value: function negate(v1) {
		            return Vector2.multiply(-1, v1);
		        }
		    }, {
		        key: "equals",
		        value: function equals(v1, v2) {
		            return _VectorBase3.default.__elementEquals(v1, v2);
		        }
		    }, {
		        key: "nearlyEquals",
		        value: function nearlyEquals(v1, v2) {
		            return _VectorBase3.default.__nearlyElementEquals(v1, v2);
		        }
		    }, {
		        key: "normalize",
		        value: function normalize(v1) {
		            var newVec = _glMatrix.vec2.create();
		            return new Vector2(_glMatrix.vec2.normalize(newVec, v1.rawElements));
		        }
		    }, {
		        key: "min",
		        value: function min(v1, v2) {
		            return new Vector2(_VectorBase3.default.__fromGenerationFunction(v1, v2, function (i, v1_, v2_) {
		                return Math.min(v1_.rawElements[i], v2_.rawElements[i]);
		            }));
		        }
		    }, {
		        key: "max",
		        value: function max(v1, v2) {
		            return new Vector2(_VectorBase3.default.__fromGenerationFunction(v1, v2, function (i, v1_, v2_) {
		                return Math.max(v1_.rawElements[i], v2_.rawElements[i]);
		            }));
		        }
		    }, {
		        key: "angle",
		        value: function angle(v1, v2) {
		            return Math.acos(Vector2.dot(v1.normalized, v2.normalized));
		        }
		    }, {
		        key: "XUnit",
		        get: function get() {
		            return new Vector2(1, 0);
		        }
		    }, {
		        key: "YUnit",
		        get: function get() {
		            return new Vector2(0, 1);
		        }
		    }, {
		        key: "One",
		        get: function get() {
		            return new Vector2(1, 1);
		        }
		    }, {
		        key: "Zero",
		        get: function get() {
		            return new Vector2(0, 0);
		        }
		    }]);
		
		    function Vector2(x, y) {
		        _classCallCheck(this, Vector2);
		
		        var _this = _possibleConstructorReturn(this, (Vector2.__proto__ || Object.getPrototypeOf(Vector2)).call(this));
		
		        if (typeof y === "undefined") {
		            _this.rawElements = x;
		            return _possibleConstructorReturn(_this);
		        }
		        _this.rawElements = [x, y];
		        return _this;
		    }
		
		    _createClass(Vector2, [{
		        key: "dotWith",
		        value: function dotWith(v) {
		            return Vector2.dot(this, v);
		        }
		    }, {
		        key: "addWith",
		        value: function addWith(v) {
		            return Vector2.add(this, v);
		        }
		    }, {
		        key: "subtractWith",
		        value: function subtractWith(v) {
		            return Vector2.subtract(v, this);
		        }
		    }, {
		        key: "multiplyWith",
		        value: function multiplyWith(s) {
		            return Vector2.multiply(s, this);
		        }
		    }, {
		        key: "negateThis",
		        value: function negateThis() {
		            return Vector2.negate(this);
		        }
		    }, {
		        key: "equalWith",
		        value: function equalWith(v) {
		            return Vector2.equals(this, v);
		        }
		    }, {
		        key: "nearlyEqualWith",
		        value: function nearlyEqualWith(v) {
		            return Vector2.nearlyEquals(this, v);
		        }
		    }, {
		        key: "normalizeThis",
		        value: function normalizeThis() {
		            return Vector2.normalize(this);
		        }
		    }, {
		        key: "toString",
		        value: function toString() {
		            return "(" + this.X + ", " + this.Y + ")";
		        }
		    }, {
		        key: "toDisplayString",
		        value: function toDisplayString() {
		            return "Vector2" + this.toString();
		        }
		    }, {
		        key: "normalized",
		        get: function get() {
		            return this.multiplyWith(1 / this.magnitude);
		        }
		    }, {
		        key: "X",
		        get: function get() {
		            return this.rawElements[0];
		        },
		        set: function set(x) {
		            this.rawElements[0] = +x;
		        }
		    }, {
		        key: "Y",
		        get: function get() {
		            return this.rawElements[1];
		        },
		        set: function set(y) {
		            this.rawElements[1] = +y;
		        }
		    }, {
		        key: "ElementCount",
		        get: function get() {
		            return 2;
		        }
		    }]);
		
		    return Vector2;
		}(_VectorBase3.default);
		
		exports.default = Vector2;
	
	/***/ },
	/* 28 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _Vector = __webpack_require__(2);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function Vector3Converter(val) {
		    if (val instanceof _Vector2.default) {
		        return val;
		    } else if (typeof val === "string") {
		        return _Vector2.default.parse(val);
		    } else if (typeof val == "number") {
		        return new _Vector2.default(val, val, val);
		    } else if (Array.isArray(val)) {
		        return new _Vector2.default(val[0], val[1], val[2]);
		    }
		}
		exports.default = Vector3Converter;
	
	/***/ },
	/* 29 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _Vector = __webpack_require__(16);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function Vector4Converter(val) {
		    if (val instanceof _Vector2.default) {
		        return val;
		    } else if (typeof val === "string") {
		        return _Vector2.default.parse(val);
		    } else if (typeof val === "number") {
		        return new _Vector2.default(val, val, val, val);
		    } else if (Array.isArray(val)) {
		        return new _Vector2.default(val[0], val[1], val[2], val[3]);
		    }
		}
		exports.default = Vector4Converter;
	
	/***/ },
	/* 30 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _glMatrix = __webpack_require__(4);
		
		exports.default = {
		    vec2: _glMatrix.vec2,
		    vec3: _glMatrix.vec3,
		    vec4: _glMatrix.vec4,
		    glMatrix: _glMatrix.glMatrix,
		    mat2d: _glMatrix.mat2d,
		    mat3: _glMatrix.mat3,
		    mat4: _glMatrix.mat4,
		    quat: _glMatrix.quat
		};
	
	/***/ },
	/* 31 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Vector = __webpack_require__(27);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var Rectangle = function () {
		    _createClass(Rectangle, null, [{
		        key: "equals",
		        value: function equals(r1, r2) {
		            return r1.Left === r2.Left && r1.Right === r2.Right && r1.Top === r2.Top && r1.Bottom === r2.Bottom;
		        }
		    }, {
		        key: "edgeSizeEquals",
		        value: function edgeSizeEquals(r1, r2) {
		            return r1.Width === r2.Width && r1.Height === r2.Height;
		        }
		    }]);
		
		    function Rectangle(left, top, width, height) {
		        _classCallCheck(this, Rectangle);
		
		        this._left = left;
		        this._top = top;
		        this._width = width;
		        this._height = height;
		    }
		
		    _createClass(Rectangle, [{
		        key: "contains",
		        value: function contains(xOrPoint, y) {
		            var x = void 0;
		            if (xOrPoint instanceof _Vector2.default) {
		                x = xOrPoint.X;
		                y = xOrPoint.Y;
		            } else {
		                x = xOrPoint;
		            }
		            return this.Left <= x && this.Right >= x && this.Top <= y && this.Bottom >= y;
		        }
		    }, {
		        key: "toLocal",
		        value: function toLocal(xOrPoint, y) {
		            var x = void 0;
		            if (xOrPoint instanceof _Vector2.default) {
		                x = xOrPoint.X;
		                y = xOrPoint.Y;
		            } else {
		                x = xOrPoint;
		            }
		            x -= this.Left;
		            y -= this.Top;
		            return xOrPoint instanceof _Vector2.default ? new _Vector2.default(x, y) : [x, y];
		        }
		    }, {
		        key: "toLocalNormalized",
		        value: function toLocalNormalized(xOrPoint, y) {
		            if (xOrPoint instanceof _Vector2.default) {
		                var v = this.toLocal(xOrPoint);
		                return new _Vector2.default(v.X / this.Width, v.Y / this.Height);
		            } else {
		                var _v = this.toLocal(xOrPoint, y);
		                return [_v[0] / this.Width, _v[1] / this.Height];
		            }
		        }
		    }, {
		        key: "toAbsolute",
		        value: function toAbsolute(xOrPoint, y) {
		            if (xOrPoint instanceof _Vector2.default) {
		                return new _Vector2.default(xOrPoint.X + this.Left, xOrPoint.Y + this.Top);
		            } else {
		                return [xOrPoint + this.Left, y + this.Top];
		            }
		        }
		    }, {
		        key: "toString",
		        value: function toString() {
		            return "Rectangle(" + this.Left + "," + this.Top + "-" + this.Right + "," + this.Bottom + ")";
		        }
		    }, {
		        key: "Left",
		        get: function get() {
		            return this._left;
		        }
		    }, {
		        key: "Right",
		        get: function get() {
		            return this.Left + this.Width;
		        }
		    }, {
		        key: "Top",
		        get: function get() {
		            return this._top;
		        }
		    }, {
		        key: "Bottom",
		        get: function get() {
		            return this._top + this._height;
		        }
		    }, {
		        key: "Width",
		        get: function get() {
		            return this._width;
		        }
		    }, {
		        key: "Height",
		        get: function get() {
		            return this._height;
		        }
		    }]);
		
		    return Rectangle;
		}();
		
		exports.default = Rectangle;
	
	/***/ },
	/* 32 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _grimoirejs = __webpack_require__(33);
		
		var _grimoirejs2 = _interopRequireDefault(_grimoirejs);
		
		var _Vector2Converter = __webpack_require__(26);
		
		var _Vector2Converter2 = _interopRequireDefault(_Vector2Converter);
		
		var _Vector3Converter = __webpack_require__(28);
		
		var _Vector3Converter2 = _interopRequireDefault(_Vector3Converter);
		
		var _Vector4Converter = __webpack_require__(29);
		
		var _Vector4Converter2 = _interopRequireDefault(_Vector4Converter);
		
		var _Rotation3Converter = __webpack_require__(22);
		
		var _Rotation3Converter2 = _interopRequireDefault(_Rotation3Converter);
		
		var _Angle2DConverter = __webpack_require__(18);
		
		var _Angle2DConverter2 = _interopRequireDefault(_Angle2DConverter);
		
		var _Color3Converter = __webpack_require__(20);
		
		var _Color3Converter2 = _interopRequireDefault(_Color3Converter);
		
		var _Color4Converter = __webpack_require__(21);
		
		var _Color4Converter2 = _interopRequireDefault(_Color4Converter);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
		    return new (P || (P = Promise))(function (resolve, reject) {
		        function fulfilled(value) {
		            try {
		                step(generator.next(value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function rejected(value) {
		            try {
		                step(generator["throw"](value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function step(result) {
		            result.done ? resolve(result.value) : new P(function (resolve) {
		                resolve(result.value);
		            }).then(fulfilled, rejected);
		        }
		        step((generator = generator.apply(thisArg, _arguments)).next());
		    });
		};
		
		exports.default = function () {
		    _grimoirejs2.default.registerConverter("Vector2", _Vector2Converter2.default);
		    _grimoirejs2.default.registerConverter("Vector3", _Vector3Converter2.default);
		    _grimoirejs2.default.registerConverter("Vector4", _Vector4Converter2.default);
		    _grimoirejs2.default.registerConverter("Color3", _Color3Converter2.default);
		    _grimoirejs2.default.registerConverter("Color4", _Color4Converter2.default);
		    _grimoirejs2.default.registerConverter("Rotation3", _Rotation3Converter2.default);
		    _grimoirejs2.default.registerConverter("Angle2D", _Angle2DConverter2.default);
		    _grimoirejs2.default.register(function () {
		        return __awaiter(undefined, void 0, void 0, regeneratorRuntime.mark(function _callee() {
		            return regeneratorRuntime.wrap(function _callee$(_context) {
		                while (1) {
		                    switch (_context.prev = _context.next) {
		                        case 0:
		                        case "end":
		                            return _context.stop();
		                    }
		                }
		            }, _callee, this);
		        }));
		    });
		};
	
	/***/ },
	/* 33 */
	/***/ function(module, exports) {
	
			Object.defineProperty(exports, "__esModule", {
			    value: true
			});exports.default=window.GrimoireJS;
	
	/***/ }
	/******/ ])
	});
	;
	//# sourceMappingURL=index.js.map

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory();
		else if(typeof define === 'function' && define.amd)
			define([], factory);
		else {
			var a = factory();
			for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
		}
	})(this, function() {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	/******/
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;
	/******/
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			exports: {},
	/******/ 			id: moduleId,
	/******/ 			loaded: false
	/******/ 		};
	/******/
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	/******/
	/******/ 		// Flag the module as loaded
	/******/ 		module.loaded = true;
	/******/
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _AssetLoader = __webpack_require__(1);
		
		var _AssetLoader2 = _interopRequireDefault(_AssetLoader);
		
		var _CacheResolver = __webpack_require__(3);
		
		var _CacheResolver2 = _interopRequireDefault(_CacheResolver);
		
		var _ExternalResourceResolver = __webpack_require__(4);
		
		var _ExternalResourceResolver2 = _interopRequireDefault(_ExternalResourceResolver);
		
		var _ImageResolver = __webpack_require__(5);
		
		var _ImageResolver2 = _interopRequireDefault(_ImageResolver);
		
		var _TextFileResolver = __webpack_require__(6);
		
		var _TextFileResolver2 = _interopRequireDefault(_TextFileResolver);
		
		var _AssetLoadingManagerComponent = __webpack_require__(7);
		
		var _AssetLoadingManagerComponent2 = _interopRequireDefault(_AssetLoadingManagerComponent);
		
		var _CameraComponent = __webpack_require__(11);
		
		var _CameraComponent2 = _interopRequireDefault(_CameraComponent);
		
		var _CanvasInitializerComponent = __webpack_require__(20);
		
		var _CanvasInitializerComponent2 = _interopRequireDefault(_CanvasInitializerComponent);
		
		var _ClickableMeshComponent = __webpack_require__(49);
		
		var _ClickableMeshComponent2 = _interopRequireDefault(_ClickableMeshComponent);
		
		var _FullscreenComponent = __webpack_require__(53);
		
		var _FullscreenComponent2 = _interopRequireDefault(_FullscreenComponent);
		
		var _GeometryComponent = __webpack_require__(54);
		
		var _GeometryComponent2 = _interopRequireDefault(_GeometryComponent);
		
		var _GeometryRegistoryComponent = __webpack_require__(56);
		
		var _GeometryRegistoryComponent2 = _interopRequireDefault(_GeometryRegistoryComponent);
		
		var _HTMLBinderComponent = __webpack_require__(57);
		
		var _HTMLBinderComponent2 = _interopRequireDefault(_HTMLBinderComponent);
		
		var _LoopManagerComponent = __webpack_require__(61);
		
		var _LoopManagerComponent2 = _interopRequireDefault(_LoopManagerComponent);
		
		var _MaterialComponent = __webpack_require__(62);
		
		var _MaterialComponent2 = _interopRequireDefault(_MaterialComponent);
		
		var _MaterialContainerComponent = __webpack_require__(51);
		
		var _MaterialContainerComponent2 = _interopRequireDefault(_MaterialContainerComponent);
		
		var _MaterialImporterComponent = __webpack_require__(63);
		
		var _MaterialImporterComponent2 = _interopRequireDefault(_MaterialImporterComponent);
		
		var _MeshRendererComponent = __webpack_require__(50);
		
		var _MeshRendererComponent2 = _interopRequireDefault(_MeshRendererComponent);
		
		var _MouseCameraControlComponent = __webpack_require__(64);
		
		var _MouseCameraControlComponent2 = _interopRequireDefault(_MouseCameraControlComponent);
		
		var _RenderBufferComponent = __webpack_require__(66);
		
		var _RenderBufferComponent2 = _interopRequireDefault(_RenderBufferComponent);
		
		var _RendererComponent = __webpack_require__(68);
		
		var _RendererComponent2 = _interopRequireDefault(_RendererComponent);
		
		var _RendererManagerComponent = __webpack_require__(69);
		
		var _RendererManagerComponent2 = _interopRequireDefault(_RendererManagerComponent);
		
		var _RenderHitareaComponent = __webpack_require__(71);
		
		var _RenderHitareaComponent2 = _interopRequireDefault(_RenderHitareaComponent);
		
		var _RenderQuadComponent = __webpack_require__(73);
		
		var _RenderQuadComponent2 = _interopRequireDefault(_RenderQuadComponent);
		
		var _RenderSceneComponent = __webpack_require__(58);
		
		var _RenderSceneComponent2 = _interopRequireDefault(_RenderSceneComponent);
		
		var _SceneComponent = __webpack_require__(18);
		
		var _SceneComponent2 = _interopRequireDefault(_SceneComponent);
		
		var _TextureBufferComponent = __webpack_require__(74);
		
		var _TextureBufferComponent2 = _interopRequireDefault(_TextureBufferComponent);
		
		var _TextureComponent = __webpack_require__(75);
		
		var _TextureComponent2 = _interopRequireDefault(_TextureComponent);
		
		var _TimeComponent = __webpack_require__(76);
		
		var _TimeComponent2 = _interopRequireDefault(_TimeComponent);
		
		var _TransformComponent = __webpack_require__(17);
		
		var _TransformComponent2 = _interopRequireDefault(_TransformComponent);
		
		var _CanvasSizeConverter = __webpack_require__(77);
		
		var _CanvasSizeConverter2 = _interopRequireDefault(_CanvasSizeConverter);
		
		var _GeometryConverter = __webpack_require__(78);
		
		var _GeometryConverter2 = _interopRequireDefault(_GeometryConverter);
		
		var _MaterialConverter = __webpack_require__(79);
		
		var _MaterialConverter2 = _interopRequireDefault(_MaterialConverter);
		
		var _NodeConverter = __webpack_require__(80);
		
		var _NodeConverter2 = _interopRequireDefault(_NodeConverter);
		
		var _PositionConverter = __webpack_require__(82);
		
		var _PositionConverter2 = _interopRequireDefault(_PositionConverter);
		
		var _TextureConverter = __webpack_require__(84);
		
		var _TextureConverter2 = _interopRequireDefault(_TextureConverter);
		
		var _ViewportConverter = __webpack_require__(86);
		
		var _ViewportConverter2 = _interopRequireDefault(_ViewportConverter);
		
		var _DefaultPrimitives = __webpack_require__(88);
		
		var _DefaultPrimitives2 = _interopRequireDefault(_DefaultPrimitives);
		
		var _Geometry = __webpack_require__(41);
		
		var _Geometry2 = _interopRequireDefault(_Geometry);
		
		var _GeometryFactory = __webpack_require__(55);
		
		var _GeometryFactory2 = _interopRequireDefault(_GeometryFactory);
		
		var _GeometryUtility = __webpack_require__(89);
		
		var _GeometryUtility2 = _interopRequireDefault(_GeometryUtility);
		
		var _DefaultMacro = __webpack_require__(30);
		
		var _DefaultMacro2 = _interopRequireDefault(_DefaultMacro);
		
		var _DefaultMaterial = __webpack_require__(90);
		
		var _DefaultMaterial2 = _interopRequireDefault(_DefaultMaterial);
		
		var _MacroRegistory = __webpack_require__(29);
		
		var _MacroRegistory2 = _interopRequireDefault(_MacroRegistory);
		
		var _Material = __webpack_require__(31);
		
		var _Material2 = _interopRequireDefault(_Material);
		
		var _MaterialFactory = __webpack_require__(21);
		
		var _MaterialFactory2 = _interopRequireDefault(_MaterialFactory);
		
		var _Pass = __webpack_require__(33);
		
		var _Pass2 = _interopRequireDefault(_Pass);
		
		var _Technique = __webpack_require__(32);
		
		var _Technique2 = _interopRequireDefault(_Technique);
		
		var _TextureReference = __webpack_require__(85);
		
		var _TextureReference2 = _interopRequireDefault(_TextureReference);
		
		var _UniformResolverRegistry = __webpack_require__(44);
		
		var _UniformResolverRegistry2 = _interopRequireDefault(_UniformResolverRegistry);
		
		var _MatricesRegister = __webpack_require__(92);
		
		var _MatricesRegister2 = _interopRequireDefault(_MatricesRegister);
		
		var _MiscRegister = __webpack_require__(93);
		
		var _MiscRegister2 = _interopRequireDefault(_MiscRegister);
		
		var _UserValueRegister = __webpack_require__(95);
		
		var _UserValueRegister2 = _interopRequireDefault(_UserValueRegister);
		
		var _nodes = __webpack_require__(96);
		
		var _nodes2 = _interopRequireDefault(_nodes);
		
		var _Buffer = __webpack_require__(43);
		
		var _Buffer2 = _interopRequireDefault(_Buffer);
		
		var _FrameBuffer = __webpack_require__(59);
		
		var _FrameBuffer2 = _interopRequireDefault(_FrameBuffer);
		
		var _GLExtRequestor = __webpack_require__(48);
		
		var _GLExtRequestor2 = _interopRequireDefault(_GLExtRequestor);
		
		var _ManagedProgram = __webpack_require__(34);
		
		var _ManagedProgram2 = _interopRequireDefault(_ManagedProgram);
		
		var _ManagedShader = __webpack_require__(39);
		
		var _ManagedShader2 = _interopRequireDefault(_ManagedShader);
		
		var _Program = __webpack_require__(35);
		
		var _Program2 = _interopRequireDefault(_Program);
		
		var _RenderBuffer = __webpack_require__(60);
		
		var _RenderBuffer2 = _interopRequireDefault(_RenderBuffer);
		
		var _ResourceBase = __webpack_require__(38);
		
		var _ResourceBase2 = _interopRequireDefault(_ResourceBase);
		
		var _ResourceCache = __webpack_require__(36);
		
		var _ResourceCache2 = _interopRequireDefault(_ResourceCache);
		
		var _Shader = __webpack_require__(40);
		
		var _Shader2 = _interopRequireDefault(_Shader);
		
		var _Texture2D = __webpack_require__(47);
		
		var _Texture2D2 = _interopRequireDefault(_Texture2D);
		
		var _UniformProxy = __webpack_require__(37);
		
		var _UniformProxy2 = _interopRequireDefault(_UniformProxy);
		
		var _DrawPriorty = __webpack_require__(52);
		
		var _DrawPriorty2 = _interopRequireDefault(_DrawPriorty);
		
		var _RenderQueue = __webpack_require__(16);
		
		var _RenderQueue2 = _interopRequireDefault(_RenderQueue);
		
		var _RenderQueueRegistry = __webpack_require__(19);
		
		var _RenderQueueRegistry2 = _interopRequireDefault(_RenderQueueRegistry);
		
		var _ImportResolver = __webpack_require__(28);
		
		var _ImportResolver2 = _interopRequireDefault(_ImportResolver);
		
		var _NameSemanticsPair = __webpack_require__(27);
		
		var _NameSemanticsPair2 = _interopRequireDefault(_NameSemanticsPair);
		
		var _Parser = __webpack_require__(22);
		
		var _Parser2 = _interopRequireDefault(_Parser);
		
		var _Preferences = __webpack_require__(25);
		
		var _Preferences2 = _interopRequireDefault(_Preferences);
		
		var _SortTransformUtility = __webpack_require__(24);
		
		var _SortTransformUtility2 = _interopRequireDefault(_SortTransformUtility);
		
		var _TypeToConstant = __webpack_require__(26);
		
		var _TypeToConstant2 = _interopRequireDefault(_TypeToConstant);
		
		var _HashCalculator = __webpack_require__(23);
		
		var _HashCalculator2 = _interopRequireDefault(_HashCalculator);
		
		var _MeshIndexCalculator = __webpack_require__(72);
		
		var _MeshIndexCalculator2 = _interopRequireDefault(_MeshIndexCalculator);
		
		var _TextureSizeCalculator = __webpack_require__(67);
		
		var _TextureSizeCalculator2 = _interopRequireDefault(_TextureSizeCalculator);
		
		var _main = __webpack_require__(97);
		
		var _main2 = _interopRequireDefault(_main);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		var __VERSION__ = "0.12.1";
		var __NAME__ = "grimoirejs-fundamental";
		
		var __EXPOSE__ = {
		    "Asset": {
		        "AssetLoader": _AssetLoader2.default,
		        "CacheResolver": _CacheResolver2.default,
		        "ExternalResourceResolver": _ExternalResourceResolver2.default,
		        "ImageResolver": _ImageResolver2.default,
		        "TextFileResolver": _TextFileResolver2.default
		    },
		    "Components": {
		        "AssetLoadingManagerComponent": _AssetLoadingManagerComponent2.default,
		        "CameraComponent": _CameraComponent2.default,
		        "CanvasInitializerComponent": _CanvasInitializerComponent2.default,
		        "ClickableMeshComponent": _ClickableMeshComponent2.default,
		        "FullscreenComponent": _FullscreenComponent2.default,
		        "GeometryComponent": _GeometryComponent2.default,
		        "GeometryRegistoryComponent": _GeometryRegistoryComponent2.default,
		        "HTMLBinderComponent": _HTMLBinderComponent2.default,
		        "LoopManagerComponent": _LoopManagerComponent2.default,
		        "MaterialComponent": _MaterialComponent2.default,
		        "MaterialContainerComponent": _MaterialContainerComponent2.default,
		        "MaterialImporterComponent": _MaterialImporterComponent2.default,
		        "MeshRendererComponent": _MeshRendererComponent2.default,
		        "MouseCameraControlComponent": _MouseCameraControlComponent2.default,
		        "RenderBufferComponent": _RenderBufferComponent2.default,
		        "RendererComponent": _RendererComponent2.default,
		        "RendererManagerComponent": _RendererManagerComponent2.default,
		        "RenderHitareaComponent": _RenderHitareaComponent2.default,
		        "RenderQuadComponent": _RenderQuadComponent2.default,
		        "RenderSceneComponent": _RenderSceneComponent2.default,
		        "SceneComponent": _SceneComponent2.default,
		        "TextureBufferComponent": _TextureBufferComponent2.default,
		        "TextureComponent": _TextureComponent2.default,
		        "TimeComponent": _TimeComponent2.default,
		        "TransformComponent": _TransformComponent2.default
		    },
		    "Converters": {
		        "CanvasSizeConverter": _CanvasSizeConverter2.default,
		        "GeometryConverter": _GeometryConverter2.default,
		        "MaterialConverter": _MaterialConverter2.default,
		        "NodeConverter": _NodeConverter2.default,
		        "PositionConverter": _PositionConverter2.default,
		        "TextureConverter": _TextureConverter2.default,
		        "ViewportConverter": _ViewportConverter2.default
		    },
		    "Geometry": {
		        "DefaultPrimitives": _DefaultPrimitives2.default,
		        "Geometry": _Geometry2.default,
		        "GeometryFactory": _GeometryFactory2.default,
		        "GeometryUtility": _GeometryUtility2.default
		    },
		    "Material": {
		        "DefaultMacro": _DefaultMacro2.default,
		        "DefaultMaterial": _DefaultMaterial2.default,
		        "MacroRegistory": _MacroRegistory2.default,
		        "Material": _Material2.default,
		        "MaterialFactory": _MaterialFactory2.default,
		        "Pass": _Pass2.default,
		        "Technique": _Technique2.default,
		        "TextureReference": _TextureReference2.default,
		        "UniformResolverRegistry": _UniformResolverRegistry2.default,
		        "Uniforms": {
		            "MatricesRegister": _MatricesRegister2.default,
		            "MiscRegister": _MiscRegister2.default,
		            "UserValueRegister": _UserValueRegister2.default
		        }
		    },
		    "nodes": _nodes2.default,
		    "Resource": {
		        "Buffer": _Buffer2.default,
		        "FrameBuffer": _FrameBuffer2.default,
		        "GLExtRequestor": _GLExtRequestor2.default,
		        "ManagedProgram": _ManagedProgram2.default,
		        "ManagedShader": _ManagedShader2.default,
		        "Program": _Program2.default,
		        "RenderBuffer": _RenderBuffer2.default,
		        "ResourceBase": _ResourceBase2.default,
		        "ResourceCache": _ResourceCache2.default,
		        "Shader": _Shader2.default,
		        "Texture2D": _Texture2D2.default,
		        "UniformProxy": _UniformProxy2.default
		    },
		    "SceneRenderer": {
		        "DrawPriorty": _DrawPriorty2.default,
		        "RenderQueue": _RenderQueue2.default,
		        "RenderQueueRegistry": _RenderQueueRegistry2.default
		    },
		    "Sort": {
		        "ImportResolver": _ImportResolver2.default,
		        "NameSemanticsPair": _NameSemanticsPair2.default,
		        "Parser": _Parser2.default,
		        "Preferences": _Preferences2.default,
		        "SortTransformUtility": _SortTransformUtility2.default,
		        "TypeToConstant": _TypeToConstant2.default
		    },
		    "Util": {
		        "HashCalculator": _HashCalculator2.default,
		        "MeshIndexCalculator": _MeshIndexCalculator2.default,
		        "TextureSizeCalculator": _TextureSizeCalculator2.default
		    }
		};
		var __BASE__ = (0, _main2.default)();
		Object.assign(__EXPOSE__, {
		    __VERSION__: __VERSION__,
		    __NAME__: __NAME__
		});
		Object.assign(__BASE__ || {}, __EXPOSE__);
		window["GrimoireJS"].lib.fundamental = __EXPOSE__;
		exports.default = __BASE__;
	
	/***/ },
	/* 1 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _EEObject2 = __webpack_require__(2);
		
		var _EEObject3 = _interopRequireDefault(_EEObject2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
		    return new (P || (P = Promise))(function (resolve, reject) {
		        function fulfilled(value) {
		            try {
		                step(generator.next(value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function rejected(value) {
		            try {
		                step(generator["throw"](value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function step(result) {
		            result.done ? resolve(result.value) : new P(function (resolve) {
		                resolve(result.value);
		            }).then(fulfilled, rejected);
		        }
		        step((generator = generator.apply(thisArg, _arguments || [])).next());
		    });
		};
		
		/**
		 * Provides managing all promise on initializing resources.
		 */
		var AssetLoader = function (_EEObject) {
		    _inherits(AssetLoader, _EEObject);
		
		    function AssetLoader() {
		        _classCallCheck(this, AssetLoader);
		
		        /**
		         * Promise count registered.
		         * @type {number}
		         */
		        var _this = _possibleConstructorReturn(this, (AssetLoader.__proto__ || Object.getPrototypeOf(AssetLoader)).apply(this, arguments));
		
		        _this.registerCount = 0;
		        /**
		         * Promise count finished successfully.
		         * @type {number}
		         */
		        _this.loadCount = 0;
		        /**
		         * Promise count completed(success and errored)
		         * @type {number}
		         */
		        _this.completeCount = 0;
		        /**
		         * Promise count errored
		         * @type {number}
		         */
		        _this.errorCount = 0;
		        /**
		         * Main promise to provide tasks for waiting for all resource loading.
		         * @type {Promise<void>}
		         */
		        _this.promise = new Promise(function (resolve) {
		            _this._resolve = resolve;
		        });
		        return _this;
		    }
		    /**
		     * Register an promise to be waited until finished.
		     */
		
		
		    _createClass(AssetLoader, [{
		        key: "register",
		        value: function register(promise) {
		            var _this2 = this;
		
		            this.registerCount++;
		            return new Promise(function (resolve, reject) {
		                (function () {
		                    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
		                        return regeneratorRuntime.wrap(function _callee$(_context) {
		                            while (1) {
		                                switch (_context.prev = _context.next) {
		                                    case 0:
		                                        _context.prev = 0;
		                                        _context.t0 = resolve;
		                                        _context.next = 4;
		                                        return promise;
		
		                                    case 4:
		                                        _context.t1 = _context.sent;
		                                        (0, _context.t0)(_context.t1);
		
		                                        this.loadCount++;
		                                        _context.next = 13;
		                                        break;
		
		                                    case 9:
		                                        _context.prev = 9;
		                                        _context.t2 = _context["catch"](0);
		
		                                        reject(_context.t2);
		                                        this.errorCount++;
		
		                                    case 13:
		                                        this.completeCount++;
		                                        this._checkLoadCompleted();
		
		                                    case 15:
		                                    case "end":
		                                        return _context.stop();
		                                }
		                            }
		                        }, _callee, this, [[0, 9]]);
		                    }));
		                }).bind(_this2)();
		            });
		        }
		        /**
		         * Verify all promises are completed.
		         */
		
		    }, {
		        key: "_checkLoadCompleted",
		        value: function _checkLoadCompleted() {
		            this.emit("progress", this);
		            if (this.registerCount === this.completeCount) {
		                this._resolve();
		            }
		        }
		    }]);
		
		    return AssetLoader;
		}(_EEObject3.default);
		
		exports.default = AssetLoader;
	
	/***/ },
	/* 2 */
	/***/ function(module, exports) {
	
			Object.defineProperty(exports, "__esModule", {
			    value: true
			});exports.default=window.GrimoireJS.Base.EEObject;
	
	/***/ },
	/* 3 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
		    return new (P || (P = Promise))(function (resolve, reject) {
		        function fulfilled(value) {
		            try {
		                step(generator.next(value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function rejected(value) {
		            try {
		                step(generator["throw"](value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function step(result) {
		            result.done ? resolve(result.value) : new P(function (resolve) {
		                resolve(result.value);
		            }).then(fulfilled, rejected);
		        }
		        step((generator = generator.apply(thisArg, _arguments || [])).next());
		    });
		};
		/**
		 * Resolve resources with caching.
		 */
		/**
		 * Resolve resources with caching.
		 */
		var CacheResolver = function () {
		    function CacheResolver(toAbsolute) {
		        _classCallCheck(this, CacheResolver);
		
		        this.toAbsolute = toAbsolute;
		        this.cache = {};
		        this.resolvers = {};
		    }
		
		    _createClass(CacheResolver, [{
		        key: "resolve",
		        value: function resolve(src, resolver) {
		            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
		                var abs, result;
		                return regeneratorRuntime.wrap(function _callee$(_context) {
		                    while (1) {
		                        switch (_context.prev = _context.next) {
		                            case 0:
		                                abs = this.toAbsolute(src);
		
		                                if (!this._cached(abs)) {
		                                    _context.next = 5;
		                                    break;
		                                }
		
		                                return _context.abrupt("return", this.cache[abs]);
		
		                            case 5:
		                                if (!this._resolving(abs)) {
		                                    _context.next = 11;
		                                    break;
		                                }
		
		                                _context.next = 8;
		                                return this.resolvers[abs];
		
		                            case 8:
		                                return _context.abrupt("return", _context.sent);
		
		                            case 11:
		                                this.resolvers[abs] = resolver(abs);
		                                _context.next = 14;
		                                return this.resolvers[abs];
		
		                            case 14:
		                                result = _context.sent;
		
		                                this._resolved(abs, result);
		                                return _context.abrupt("return", result);
		
		                            case 17:
		                            case "end":
		                                return _context.stop();
		                        }
		                    }
		                }, _callee, this);
		            }));
		        }
		    }, {
		        key: "_cached",
		        value: function _cached(abs) {
		            return typeof this.cache[abs] !== "undefined";
		        }
		    }, {
		        key: "_resolving",
		        value: function _resolving(abs) {
		            return typeof this.resolvers[abs] !== "undefined";
		        }
		    }, {
		        key: "_resolved",
		        value: function _resolved(abs, result) {
		            delete this.resolvers[abs];
		            this.cache[abs] = result;
		        }
		    }]);
		
		    return CacheResolver;
		}();
		
		exports.default = CacheResolver;
	
	/***/ },
	/* 4 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _CacheResolver2 = __webpack_require__(3);
		
		var _CacheResolver3 = _interopRequireDefault(_CacheResolver2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var ExternalResourceResolver = function (_CacheResolver) {
		    _inherits(ExternalResourceResolver, _CacheResolver);
		
		    function ExternalResourceResolver() {
		        _classCallCheck(this, ExternalResourceResolver);
		
		        return _possibleConstructorReturn(this, (ExternalResourceResolver.__proto__ || Object.getPrototypeOf(ExternalResourceResolver)).call(this, ExternalResourceResolver._toAbsolute));
		    }
		
		    _createClass(ExternalResourceResolver, null, [{
		        key: "_toAbsolute",
		        value: function _toAbsolute(href) {
		            if (href.match(/^blob\:/m)) {
		                return href;
		            }
		            var link = document.createElement("a");
		            link.href = href;
		            return link.protocol + "//" + link.host + link.pathname + link.search + link.hash;
		        }
		    }]);
		
		    return ExternalResourceResolver;
		}(_CacheResolver3.default);
		
		exports.default = ExternalResourceResolver;
	
	/***/ },
	/* 5 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.ImageResolver = undefined;
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
		
		var _ExternalResourceResolver = __webpack_require__(4);
		
		var _ExternalResourceResolver2 = _interopRequireDefault(_ExternalResourceResolver);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var ImageResolver = exports.ImageResolver = function (_ExternalResourceReso) {
		    _inherits(ImageResolver, _ExternalResourceReso);
		
		    function ImageResolver() {
		        _classCallCheck(this, ImageResolver);
		
		        return _possibleConstructorReturn(this, (ImageResolver.__proto__ || Object.getPrototypeOf(ImageResolver)).apply(this, arguments));
		    }
		
		    _createClass(ImageResolver, [{
		        key: "resolve",
		        value: function resolve(path) {
		            return _get(ImageResolver.prototype.__proto__ || Object.getPrototypeOf(ImageResolver.prototype), "resolve", this).call(this, path, function (abs) {
		                return new Promise(function (resolve, reject) {
		                    var imgTag = new Image();
		                    imgTag.onload = function () {
		                        resolve(imgTag);
		                    };
		                    imgTag.onerror = function (e) {
		                        reject("Error has been occured during loading \"" + abs + "(" + path + ")\"\n" + e);
		                    };
		                    imgTag.src = abs;
		                });
		            });
		        }
		    }]);
		
		    return ImageResolver;
		}(_ExternalResourceResolver2.default);
		
		exports.default = new ImageResolver();
	
	/***/ },
	/* 6 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.TextFileResolver = undefined;
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
		
		var _ExternalResourceResolver = __webpack_require__(4);
		
		var _ExternalResourceResolver2 = _interopRequireDefault(_ExternalResourceResolver);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var TextFileResolver = exports.TextFileResolver = function (_ExternalResourceReso) {
		    _inherits(TextFileResolver, _ExternalResourceReso);
		
		    function TextFileResolver() {
		        _classCallCheck(this, TextFileResolver);
		
		        return _possibleConstructorReturn(this, (TextFileResolver.__proto__ || Object.getPrototypeOf(TextFileResolver)).apply(this, arguments));
		    }
		
		    _createClass(TextFileResolver, [{
		        key: "resolve",
		        value: function resolve(path) {
		            return _get(TextFileResolver.prototype.__proto__ || Object.getPrototypeOf(TextFileResolver.prototype), "resolve", this).call(this, path, function (abs) {
		                return new Promise(function (resolve, reject) {
		                    var xhr = new XMLHttpRequest();
		                    xhr.open("GET", abs);
		                    xhr.onload = function (v) {
		                        resolve(xhr.responseText);
		                    };
		                    xhr.onerror = function (e) {
		                        reject(e);
		                    };
		                    xhr.send();
		                });
		            });
		        }
		    }]);
		
		    return TextFileResolver;
		}(_ExternalResourceResolver2.default);
		
		exports.default = new TextFileResolver();
	
	/***/ },
	/* 7 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _grimoirejs = __webpack_require__(8);
		
		var _grimoirejs2 = _interopRequireDefault(_grimoirejs);
		
		var _AssetLoader = __webpack_require__(1);
		
		var _AssetLoader2 = _interopRequireDefault(_AssetLoader);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		var _defaultLoader = __webpack_require__(10);
		
		var _defaultLoader2 = _interopRequireDefault(_defaultLoader);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
		    return new (P || (P = Promise))(function (resolve, reject) {
		        function fulfilled(value) {
		            try {
		                step(generator.next(value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function rejected(value) {
		            try {
		                step(generator["throw"](value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function step(result) {
		            result.done ? resolve(result.value) : new P(function (resolve) {
		                resolve(result.value);
		            }).then(fulfilled, rejected);
		        }
		        step((generator = generator.apply(thisArg, _arguments || [])).next());
		    });
		};
		
		/**
		 * アセットの読み込みを司るコンポーネント。ローダーの表示などを司る。
		 */
		var AssetLoadingManagerComponent = function (_Component) {
		    _inherits(AssetLoadingManagerComponent, _Component);
		
		    function AssetLoadingManagerComponent() {
		        _classCallCheck(this, AssetLoadingManagerComponent);
		
		        var _this = _possibleConstructorReturn(this, (AssetLoadingManagerComponent.__proto__ || Object.getPrototypeOf(AssetLoadingManagerComponent)).apply(this, arguments));
		
		        _this.loader = new _AssetLoader2.default();
		        return _this;
		    }
		
		    _createClass(AssetLoadingManagerComponent, [{
		        key: "$treeInitialized",
		        value: function $treeInitialized() {
		            if (this.getAttribute("autoStart")) {
		                this._autoStart();
		            }
		            this._documentResolver();
		        }
		    }, {
		        key: "$awake",
		        value: function $awake() {
		            var _this2 = this;
		
		            this.companion.set(_grimoirejs2.default.ns(this.name.ns)("loader"), this.loader);
		            this.loader.register(new Promise(function (resolve) {
		                _this2._documentResolver = resolve;
		            }));
		            var canvasContainer = this.companion.get("canvasContainer");
		            if (!this.getAttribute("enableLoader")) {
		                return;
		            }
		            var loaderContainer = document.createElement("div");
		            loaderContainer.innerHTML = _defaultLoader2.default;
		            loaderContainer.style.width = loaderContainer.style.height = "100%";
		            canvasContainer.appendChild(loaderContainer);
		            this._loaderElement = loaderContainer;
		        }
		    }, {
		        key: "_autoStart",
		        value: function _autoStart() {
		            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
		                return regeneratorRuntime.wrap(function _callee$(_context) {
		                    while (1) {
		                        switch (_context.prev = _context.next) {
		                            case 0:
		                                _context.next = 2;
		                                return this.loader.promise;
		
		                            case 2:
		                                if (this._loaderElement) {
		                                    this._loaderElement.remove();
		                                }
		                                this.node.emit("asset-load-completed");
		                                this.tree("goml").setAttribute("loopEnabled", true);
		
		                            case 5:
		                            case "end":
		                                return _context.stop();
		                        }
		                    }
		                }, _callee, this);
		            }));
		        }
		    }]);
		
		    return AssetLoadingManagerComponent;
		}(_Component3.default);
		
		exports.default = AssetLoadingManagerComponent;
		
		AssetLoadingManagerComponent.attributes = {
		    /**
		     * ローディング状況(読み取り専用)
		     *
		     * 現在の読み込み状況を0-1で表す。
		     */
		    loadingProgress: {
		        default: 0,
		        converter: "Number"
		    },
		    /**
		     * リソースの読み込み完了後に、自動的にレンダリングループを開始するかどうか
		     */
		    autoStart: {
		        default: true,
		        converter: "Boolean"
		    },
		    /**
		     * リソースのロード時にローディング画面を表示するかどうか
		     */
		    enableLoader: {
		        default: true,
		        converter: "Boolean"
		    }
		};
	
	/***/ },
	/* 8 */
	/***/ function(module, exports) {
	
			Object.defineProperty(exports, "__esModule", {
			    value: true
			});exports.default=window.GrimoireJS;
	
	/***/ },
	/* 9 */
	/***/ function(module, exports) {
	
			Object.defineProperty(exports, "__esModule", {
			    value: true
			});exports.default=window.GrimoireJS.Node.Component;
	
	/***/ },
	/* 10 */
	/***/ function(module, exports) {
	
		module.exports = "<div style=\"width:100%;height:100%;position: relative;\">\n    <div style=\"width: 55px;height: 55px;border-radius: 100%;border: 5px solid #381794;border-right-color: #FC659D;animation: rotate 1s linear infinite;position: absolute;top: 0;left: 0;right: 0;bottom: 0;margin: auto;\"></div>\n</div>\n<style type=\"text/css\">\n    @keyframes rotate {\n        from {\n            transform: rotate(0deg);\n        }\n        to {\n            transform: rotate(360deg);\n        }\n    }\n</style>\n"
	
	/***/ },
	/* 11 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _GLM = __webpack_require__(12);
		
		var _GLM2 = _interopRequireDefault(_GLM);
		
		var _Vector = __webpack_require__(13);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		var _Vector3 = __webpack_require__(14);
		
		var _Vector4 = _interopRequireDefault(_Vector3);
		
		var _Matrix = __webpack_require__(15);
		
		var _Matrix2 = _interopRequireDefault(_Matrix);
		
		var _RenderQueue = __webpack_require__(16);
		
		var _RenderQueue2 = _interopRequireDefault(_RenderQueue);
		
		var _TransformComponent = __webpack_require__(17);
		
		var _TransformComponent2 = _interopRequireDefault(_TransformComponent);
		
		var _SceneComponent = __webpack_require__(18);
		
		var _SceneComponent2 = _interopRequireDefault(_SceneComponent);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var vec3 = _GLM2.default.vec3,
		    vec4 = _GLM2.default.vec4,
		    mat4 = _GLM2.default.mat4;
		
		/**
		 * シーンを描画するカメラのコンポーネント
		 *
		 * このコンポーネントによって、透視射影や正方射影などの歪みを調整します。
		 * また、このコンポーネントの付属するノードに属する`Transoform`によって、カメラの位置や向きが確定されます。
		 */
		var CameraComponent = function (_Component) {
		    _inherits(CameraComponent, _Component);
		
		    function CameraComponent() {
		        _classCallCheck(this, CameraComponent);
		
		        var _this = _possibleConstructorReturn(this, (CameraComponent.__proto__ || Object.getPrototypeOf(CameraComponent)).apply(this, arguments));
		
		        _this._renderQueue = new _RenderQueue2.default();
		        _this._eyeCache = _Vector4.default.Zero;
		        _this._lookAtCache = _Vector4.default.Zero;
		        _this._upCache = _Vector4.default.Zero;
		        _this.__viewMatrix = new _Matrix2.default();
		        _this.__projectionMatrix = new _Matrix2.default();
		        _this.__invProjectionMatrix = new _Matrix2.default();
		        _this.__projectionViewMatrix = new _Matrix2.default();
		        _this._orthographic = false;
		        return _this;
		    }
		
		    _createClass(CameraComponent, [{
		        key: "$awake",
		        value: function $awake() {
		            var _this2 = this;
		
		            this.getAttributeRaw("far").watch(function (v) {
		                _this2.Far = v;
		            }, true);
		            this.getAttributeRaw("near").watch(function (v) {
		                _this2.Near = v;
		            }, true);
		            this.getAttributeRaw("fovy").watch(function (v) {
		                _this2.Fovy = v;
		            }, true);
		            this.getAttributeRaw("aspect").watch(function (v) {
		                _this2.Aspect = v;
		            }, true);
		            this.getAttributeRaw("orthoSize").watch(function (v) {
		                _this2.OrthoSize = v;
		            }, true);
		            this.getAttributeRaw("orthogonal").watch(function (v) {
		                _this2.OrthographicMode = v;
		            }, true);
		            this.getAttributeRaw("autoAspect").boundTo("_autoAspect");
		        }
		    }, {
		        key: "$mount",
		        value: function $mount() {
		            this.transform = this.node.getComponent(_TransformComponent2.default);
		            this.containedScene = CameraComponent._findContainedScene(this.node);
		            this.containedScene.queueRegistory.registerQueue(this._renderQueue);
		            this.node.on("transformUpdated", this.updateTransform.bind(this));
		            this.updateTransform();
		        }
		    }, {
		        key: "$unmount",
		        value: function $unmount() {
		            this.containedScene.queueRegistory.unregisterQueue(this._renderQueue);
		            this.containedScene = null;
		        }
		    }, {
		        key: "updateContainedScene",
		        value: function updateContainedScene(loopIndex) {
		            if (this.containedScene) {
		                this.containedScene.updateScene(loopIndex);
		            }
		        }
		    }, {
		        key: "renderScene",
		        value: function renderScene(args) {
		            args = args;
		            if (this.containedScene) {
		                this._justifyAspect(args);
		                args.sceneDescription = this.containedScene.sceneDescription;
		                this._renderQueue.renderAll(args, true, args.loopIndex);
		            }
		        }
		    }, {
		        key: "_justifyAspect",
		        value: function _justifyAspect(args) {
		            if (this._autoAspect) {
		                var asp = args.viewport.Width / args.viewport.Height;
		                if (this._aspectCache !== asp) {
		                    this.setAttribute("aspect", asp);
		                    this._aspectCache = asp;
		                }
		            }
		        }
		    }, {
		        key: "updateTransform",
		        value: function updateTransform() {
		            var transform = this.transform;
		            vec3.transformMat4(this._eyeCache.rawElements, _Vector4.default.Zero.rawElements, transform.globalTransform.rawElements);
		            vec4.transformMat4(this._lookAtCache.rawElements, CameraComponent._frontOrigin.rawElements, transform.globalTransform.rawElements);
		            vec3.add(this._lookAtCache.rawElements, this._lookAtCache.rawElements, this._eyeCache.rawElements);
		            vec4.transformMat4(this._upCache.rawElements, CameraComponent._upOrigin.rawElements, transform.globalTransform.rawElements);
		            mat4.lookAt(this.__viewMatrix.rawElements, this._eyeCache.rawElements, this._lookAtCache.rawElements, this._upCache.rawElements);
		            mat4.mul(this.__projectionViewMatrix.rawElements, this.__projectionMatrix.rawElements, this.__viewMatrix.rawElements);
		        }
		    }, {
		        key: "_recalculateProjection",
		        value: function _recalculateProjection() {
		            if (!this._orthographic) {
		                mat4.perspective(this.__projectionMatrix.rawElements, this._fovy, this._aspect, this._near, this._far);
		            } else {
		                mat4.ortho(this.__projectionMatrix.rawElements, -this._orthoSize * this._aspect, this._orthoSize * this._aspect, -this._orthoSize, this._orthoSize, this._near, this._far);
		            }
		            mat4.mul(this.__projectionViewMatrix.rawElements, this.__projectionMatrix.rawElements, this.__viewMatrix.rawElements);
		            mat4.invert(this.__invProjectionMatrix.rawElements, this.__projectionMatrix.rawElements);
		        }
		    }, {
		        key: "ViewMatrix",
		        get: function get() {
		            return this.__viewMatrix;
		        }
		    }, {
		        key: "ProjectionMatrix",
		        get: function get() {
		            return this.__projectionMatrix;
		        }
		    }, {
		        key: "InvProjectionMatrix",
		        get: function get() {
		            return this.__invProjectionMatrix;
		        }
		    }, {
		        key: "ProjectionViewMatrix",
		        get: function get() {
		            return this.__projectionViewMatrix;
		        }
		    }, {
		        key: "Far",
		        get: function get() {
		            return this._far;
		        },
		        set: function set(far) {
		            this._far = far;
		            this._recalculateProjection();
		        }
		    }, {
		        key: "Near",
		        get: function get() {
		            return this._near;
		        },
		        set: function set(near) {
		            this._near = near;
		            this._recalculateProjection();
		        }
		    }, {
		        key: "Aspect",
		        get: function get() {
		            return this._aspect;
		        },
		        set: function set(aspect) {
		            this._aspect = aspect;
		            this._recalculateProjection();
		        }
		    }, {
		        key: "Fovy",
		        get: function get() {
		            return this._fovy;
		        },
		        set: function set(fov) {
		            this._fovy = fov;
		            this._recalculateProjection();
		        }
		    }, {
		        key: "OrthoSize",
		        get: function get() {
		            return this._orthoSize;
		        },
		        set: function set(size) {
		            this._orthoSize = size;
		        }
		    }, {
		        key: "OrthographicMode",
		        set: function set(isOrtho) {
		            this._orthographic = isOrtho;
		            this._recalculateProjection();
		        },
		        get: function get() {
		            return this._orthographic;
		        }
		    }, {
		        key: "AutoAspect",
		        set: function set(autoMode) {
		            if (this._autoAspect !== autoMode) {
		                this._autoAspect = autoMode;
		                this._recalculateProjection();
		            }
		        },
		        get: function get() {
		            return this._autoAspect;
		        }
		        /**
		        * Find scene tag recursively.
		        * @param  {GomlNode}       node [the node to searching currently]
		        * @return {SceneComponent}      [the scene component found]
		        */
		
		    }], [{
		        key: "_findContainedScene",
		        value: function _findContainedScene(node) {
		            if (node.parent) {
		                var scene = node.parent.getComponent(_SceneComponent2.default);
		                if (scene) {
		                    return scene;
		                } else {
		                    return CameraComponent._findContainedScene(node.parent);
		                }
		            } else {
		                return null;
		            }
		        }
		    }]);
		
		    return CameraComponent;
		}(_Component3.default);
		
		exports.default = CameraComponent;
		
		CameraComponent._frontOrigin = new _Vector2.default(0, 0, -1, 0);
		CameraComponent._upOrigin = new _Vector2.default(0, 1, 0, 0);
		CameraComponent.attributes = {
		    /**
		     * カメラの視野角。
		     * orthogonal属性がtrueである場合この属性は無視されます。
		     */
		    fovy: {
		        default: "45d",
		        converter: "Angle2D"
		    },
		    /**
		     * カメラに映るもっとも近い距離です。
		     * 0よりも大きく、far属性よりも小さい必要があります。
		     */
		    near: {
		        default: 0.01,
		        converter: "Number"
		    },
		    /**
		     * カメラに映る最も遠い距離です。
		     * near属性よりも大きい必要があります。
		     *
		     * far - nearの値があまりにも大きいと、Z-fighting(手前の物体が奥に表示されたように見えたりする)現象が起きる可能性があります。
		     * この差があまりに大きい時、カメラに映る物体の座標の小さいz座標の値の差は0に近似されます。
		     * 逆にこの値が小さい時は、カメラに映る物体はある程度小さいz座標の差でも問題なく表示されます。
		     * **大切なのは、写したい空間よりも無駄に大きくしないこと。常に適切な値を設定するべきです**
		     */
		    far: {
		        default: 100,
		        converter: "Number"
		    },
		    /**
		     * カメラのアスペクト比
		     * カメラの横の大きさと縦の大きさの比率を指定します。autoAspect属性がtrueである時、毎回のレンダリング時にこの値を自動調整します。
		     */
		    aspect: {
		        default: 1.6,
		        converter: "Number"
		    },
		    /**
		     * アスペクト比の自動調整が有効か否か
		     * レンダリング時にそのビューポートの大きさに応じて比率を自動調整するかどうかを示します。
		     */
		    autoAspect: {
		        default: true,
		        converter: "Boolean"
		    },
		    /**
		     * 正射影時の横の基準サイズ
		     * 正射影時はfovy属性を用いて自動的に写す領域を決定できません。
		     * そのため、横の一片のサイズをこの属性で指定します。**アスペクト比は計算に用いられることに注意してください。**
		     */
		    orthoSize: {
		        default: 100,
		        converter: "Number"
		    },
		    /**
		     * このカメラが正射影かどうか
		     *
		     * この属性がfalseである場合、カメラは透視射影としてシーンをレンダリングします。この場合、レンダリング結果にパース(奥行き感)が出ます。
		     * 一方、この属性がtrueである場合、カメラは正射影としてシーンをレンダリングします。この場合、レンダリング結果には奥行き感は出ません。
		     */
		    orthogonal: {
		        default: false,
		        converter: "Boolean"
		    }
		};
	
	/***/ },
	/* 12 */
	/***/ function(module, exports) {
	
			Object.defineProperty(exports, "__esModule", {
			    value: true
			});exports.default=window.GrimoireJS.lib.math.GLM;
	
	/***/ },
	/* 13 */
	/***/ function(module, exports) {
	
			Object.defineProperty(exports, "__esModule", {
			    value: true
			});exports.default=window.GrimoireJS.lib.math.Vector4;
	
	/***/ },
	/* 14 */
	/***/ function(module, exports) {
	
			Object.defineProperty(exports, "__esModule", {
			    value: true
			});exports.default=window.GrimoireJS.lib.math.Vector3;
	
	/***/ },
	/* 15 */
	/***/ function(module, exports) {
	
			Object.defineProperty(exports, "__esModule", {
			    value: true
			});exports.default=window.GrimoireJS.lib.math.Matrix;
	
	/***/ },
	/* 16 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var RenderQueue = function () {
		    function RenderQueue() {
		        _classCallCheck(this, RenderQueue);
		
		        this._rendeables = [];
		    }
		
		    _createClass(RenderQueue, [{
		        key: "add",
		        value: function add(rendarable) {
		            this._rendeables.push({
		                rendarable: rendarable,
		                priortyCache: Number.MIN_VALUE
		            });
		        }
		    }, {
		        key: "remove",
		        value: function remove(rendarable) {
		            var index = 0;
		            for (; index < this._rendeables.length; index++) {
		                var r = this._rendeables[index];
		                if (r.rendarable.index === rendarable.index) {
		                    break;
		                }
		            }
		            if (this._rendeables.length !== index) {
		                this._rendeables.splice(index, 1);
		            }
		        }
		    }, {
		        key: "renderAll",
		        value: function renderAll(args, cameraMoved, frameNumber) {
		            for (var i = 0; i < this._rendeables.length; i++) {
		                this._rendeables[i].priortyCache = this._rendeables[i].rendarable.getRenderingPriorty(args.camera, cameraMoved, this._rendeables[i].priortyCache);
		            }
		            this._rendeables.sort(function (a, b) {
		                return a.priortyCache - b.priortyCache;
		            });
		            this._rendeables.forEach(function (r) {
		                r.rendarable.render(args);
		            });
		        }
		    }]);
		
		    return RenderQueue;
		}();
		
		exports.default = RenderQueue;
	
	/***/ },
	/* 17 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Matrix = __webpack_require__(15);
		
		var _Matrix2 = _interopRequireDefault(_Matrix);
		
		var _Vector = __webpack_require__(14);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		var _Vector3 = __webpack_require__(13);
		
		var _Vector4 = _interopRequireDefault(_Vector3);
		
		var _GLM = __webpack_require__(12);
		
		var _GLM2 = _interopRequireDefault(_GLM);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var mat4 = _GLM2.default.mat4,
		    vec3 = _GLM2.default.vec3,
		    vec4 = _GLM2.default.vec4;
		/**
		 * シーン中に存在する物体の変形を司るコンポーネント
		 *
		 * このコンポーネントによって物体の座標や回転量、拡大料などが定義されます。
		 * シーン中の全ての物体は必ずこのコンポーネントを含まなければなりません。
		 */
		
		var TransformComponent = function (_Component) {
		    _inherits(TransformComponent, _Component);
		
		    function TransformComponent() {
		        _classCallCheck(this, TransformComponent);
		
		        /**
		         * Local transform matrix representing scaling,rotation and translation of attached object.
		         * @return {[type]} [description]
		         */
		        var _this = _possibleConstructorReturn(this, (TransformComponent.__proto__ || Object.getPrototypeOf(TransformComponent)).apply(this, arguments));
		
		        _this.localTransform = new _Matrix2.default();
		        /**
		         * Global transform that consider parent transform and local transform
		         * @return {[type]} [description]
		         */
		        _this.globalTransform = new _Matrix2.default();
		        /**
		         * The children transform should be notified when this transform was updated.
		         * @type {TransformComponent[]}
		         */
		        _this._children = [];
		        /**
		         * Calculation cache to
		         * @return {[type]} [description]
		         */
		        _this._cachePVM = new _Matrix2.default();
		        _this._cacheVM = new _Matrix2.default();
		        /**
		         * Cache of forward direction of this object
		         */
		        _this._forward = new _Vector2.default([0, 0, -1, 0]);
		        /**
		         * Cache of up direction of this object.
		         */
		        _this._up = new _Vector2.default([0, 1, 0, 0]);
		        /**
		         * Cache of right direction of this object.
		         */
		        _this._right = new _Vector2.default([1, 0, 0, 0]);
		        _this._globalPosition = new _Vector2.default([0, 0, 0]);
		        _this._globalScale = new _Vector2.default([1, 1, 1]);
		        _this._matrixTransformMode = false;
		        return _this;
		    }
		
		    _createClass(TransformComponent, [{
		        key: "calcPVM",
		        value: function calcPVM(camera) {
		            mat4.mul(this._cachePVM.rawElements, camera.ProjectionViewMatrix.rawElements, this.globalTransform.rawElements);
		            return this._cachePVM;
		        }
		    }, {
		        key: "calcVM",
		        value: function calcVM(camera) {
		            mat4.mul(this._cacheVM.rawElements, camera.ViewMatrix.rawElements, this.globalTransform.rawElements);
		            return this._cacheVM;
		        }
		    }, {
		        key: "$awake",
		        value: function $awake() {
		            var _this2 = this;
		
		            // register observers
		            this.getAttributeRaw("position").watch(function (v) {
		                _this2._localPosition = v;
		                _this2._matrixTransformMode = false;
		                _this2.updateTransform(true);
		            });
		            this.getAttributeRaw("rotation").watch(function (v) {
		                _this2._localRotation = v;
		                _this2._matrixTransformMode = false;
		                _this2.updateTransform();
		            });
		            this.getAttributeRaw("scale").watch(function (v) {
		                _this2._localScale = v;
		                _this2._matrixTransformMode = false;
		                _this2.updateTransform(true);
		            });
		            this.getAttributeRaw("rawMatrix").watch(function (v) {
		                if (v !== null) {
		                    var mat = v;
		                    _this2._matrixTransformMode = true;
		                    // TODO should be addded?
		                    // mat4.getTranslation(this._localPosition.rawElements, mat.rawElements);
		                    // mat4.getScaling(this._localScale.rawElements, mat.rawElements);
		                    // mat4.getRotation(this._localRotation.rawElements, mat.rawElements);
		                    _this2.localTransform = mat;
		                    _this2.updateGlobalTransform();
		                }
		            });
		            // assign attribute values to field
		            this._localPosition = this.getAttribute("position");
		            this._localRotation = this.getAttribute("rotation");
		            this._localScale = this.getAttribute("scale");
		        }
		    }, {
		        key: "$mount",
		        value: function $mount() {
		            this._parentTransform = this.node.parent.getComponent(TransformComponent);
		            if (this._parentTransform) {
		                this._parentTransform._children.push(this);
		            }
		            this.updateTransform();
		        }
		    }, {
		        key: "$unmount",
		        value: function $unmount() {
		            if (this._parentTransform) {
		                this._parentTransform._children.splice(this._parentTransform._children.indexOf(this), 1);
		                this._parentTransform = null;
		            }
		        }
		        /**
		         * update local transform and global transform.
		         * This need to be called if you manually edit raw elements of scale,position or rotation to recalculate transform matricies.
		         */
		
		    }, {
		        key: "updateTransform",
		        value: function updateTransform(noDirectionalUpdate) {
		            if (!this._matrixTransformMode) {
		                mat4.fromRotationTranslationScale(this.localTransform.rawElements, this._localRotation.rawElements, this._localPosition.rawElements, this._localScale.rawElements);
		            }
		            this.updateGlobalTransform(noDirectionalUpdate);
		        }
		        /**
		         * Update global transoform.
		         */
		
		    }, {
		        key: "updateGlobalTransform",
		        value: function updateGlobalTransform(noDirectionalUpdate) {
		            if (!this._parentTransform) {
		                mat4.copy(this.globalTransform.rawElements, this.localTransform.rawElements);
		            } else {
		                mat4.mul(this.globalTransform.rawElements, this._parentTransform.globalTransform.rawElements, this.localTransform.rawElements);
		            }
		            if (!noDirectionalUpdate) {
		                this._updateDirections();
		            }
		            this._updateGlobalProperty();
		            this.node.emit("transformUpdated", this);
		            this._children.forEach(function (v) {
		                return v.updateGlobalTransform(noDirectionalUpdate);
		            });
		        }
		    }, {
		        key: "_updateDirections",
		        value: function _updateDirections() {
		            vec4.transformMat4(this._forward.rawElements, TransformComponent._forwardBase.rawElements, this.globalTransform.rawElements);
		            vec4.transformMat4(this._up.rawElements, TransformComponent._upBase.rawElements, this.globalTransform.rawElements);
		            vec4.transformMat4(this._right.rawElements, TransformComponent._rightBase.rawElements, this.globalTransform.rawElements);
		        }
		    }, {
		        key: "_updateGlobalProperty",
		        value: function _updateGlobalProperty() {
		            if (!this._parentTransform) {
		                vec3.copy(this._globalPosition.rawElements, this._localPosition.rawElements);
		                vec3.copy(this._globalScale.rawElements, this._localScale.rawElements);
		            } else {
		                vec3.transformMat4(this._globalPosition.rawElements, this._localPosition.rawElements, this._parentTransform.globalTransform.rawElements);
		                vec3.transformMat4(this._globalScale.rawElements, this._localScale.rawElements, this._parentTransform.globalTransform.rawElements); // TODO buggy
		            }
		        }
		    }, {
		        key: "globalPosition",
		        get: function get() {
		            return this._globalPosition;
		        }
		    }, {
		        key: "localPosition",
		        get: function get() {
		            return this._localPosition;
		        },
		        set: function set(val) {
		            this._localPosition = val;
		            this.setAttribute("position", val);
		        }
		    }, {
		        key: "localRotation",
		        get: function get() {
		            return this._localRotation;
		        },
		        set: function set(val) {
		            this._localRotation = val;
		            this.setAttribute("rotation", val);
		        }
		    }, {
		        key: "globalScale",
		        get: function get() {
		            return this._globalScale;
		        }
		    }, {
		        key: "localScale",
		        get: function get() {
		            return this._localScale;
		        },
		        set: function set(val) {
		            this._localScale = val;
		            this.setAttribute("scale", val);
		        }
		    }, {
		        key: "forward",
		        get: function get() {
		            return this._forward;
		        }
		    }, {
		        key: "up",
		        get: function get() {
		            return this._up;
		        }
		    }, {
		        key: "right",
		        get: function get() {
		            return this._right;
		        }
		    }]);
		
		    return TransformComponent;
		}(_Component3.default);
		
		exports.default = TransformComponent;
		
		TransformComponent.attributes = {
		    /**
		     * この物体の座標
		     */
		    position: {
		        converter: "Vector3",
		        default: [0, 0, 0]
		    },
		    /**
		     * この物体の回転量
		     */
		    rotation: {
		        converter: "Rotation3",
		        default: [0, 0, 0, 1]
		    },
		    /**
		     * この物体の拡大率
		     */
		    scale: {
		        converter: "Vector3",
		        default: [1, 1, 1]
		    },
		    /**
		     * 利用されません
		     */
		    rawMatrix: {
		        converter: "Object",
		        default: null
		    }
		};
		/**
		 * Source vector to be multiplied with global transform to calculate forward direction of attached object.
		 */
		TransformComponent._forwardBase = new _Vector4.default(0, 0, -1, 0);
		/**
		 * Source vector to be multiplied with global transform to calculate up direction of attached object.
		 */
		TransformComponent._upBase = new _Vector4.default(0, 1, 0, 0);
		/**
		 * Source vector to be multiplied with global transform to calculate right direction of attached object.
		 */
		TransformComponent._rightBase = new _Vector4.default(1, 0, 0, 0);
	
	/***/ },
	/* 18 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _RenderQueueRegistry = __webpack_require__(19);
		
		var _RenderQueueRegistry2 = _interopRequireDefault(_RenderQueueRegistry);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * 特定のシーン内に関連する処理を行うためのコンポーネント
		 *
		 * このコンポーネントには属性が存在しません。
		 */
		var SceneComponent = function (_Component) {
		    _inherits(SceneComponent, _Component);
		
		    function SceneComponent() {
		        _classCallCheck(this, SceneComponent);
		
		        var _this = _possibleConstructorReturn(this, (SceneComponent.__proto__ || Object.getPrototypeOf(SceneComponent)).apply(this, arguments));
		
		        _this.queueRegistory = new _RenderQueueRegistry2.default();
		        return _this;
		    }
		
		    _createClass(SceneComponent, [{
		        key: "$mount",
		        value: function $mount() {
		            var _this2 = this;
		
		            this.sceneDescription = {};
		            SceneComponent._sceneDescriptionCreationHandlers.forEach(function (v) {
		                return v(_this2.sceneDescription, _this2);
		            });
		        }
		        /**
		         * Notify update scene only when send update message is needed.
		         * @param {number} loopIndex [description]
		         */
		
		    }, {
		        key: "updateScene",
		        value: function updateScene(loopIndex) {
		            if (this._lastUpdateIndex !== loopIndex) {
		                this.node.broadcastMessage("update", this.sceneDescription);
		                this._lastUpdateIndex = loopIndex;
		            }
		        }
		    }], [{
		        key: "onSceneDescriptionCreation",
		        value: function onSceneDescriptionCreation(handler) {
		            SceneComponent._sceneDescriptionCreationHandlers.push(handler);
		        }
		    }]);
		
		    return SceneComponent;
		}(_Component3.default);
		
		exports.default = SceneComponent;
		
		SceneComponent.attributes = {};
		SceneComponent._sceneDescriptionCreationHandlers = [];
	
	/***/ },
	/* 19 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var RenderQueueRegistry = function () {
		    function RenderQueueRegistry() {
		        _classCallCheck(this, RenderQueueRegistry);
		
		        this._queues = [];
		        this._renderables = [];
		    }
		
		    _createClass(RenderQueueRegistry, [{
		        key: "registerQueue",
		        value: function registerQueue(queue) {
		            this._queues.push(queue);
		            this._renderables.forEach(function (r) {
		                return queue.add(r);
		            });
		        }
		    }, {
		        key: "unregisterQueue",
		        value: function unregisterQueue(queue) {
		            var index = this._queues.indexOf(queue);
		            if (index > -1) {
		                this._queues.splice(index, 1);
		            }
		        }
		    }, {
		        key: "addRenderable",
		        value: function addRenderable(rendarable) {
		            this._renderables.push(rendarable);
		            this._queues.forEach(function (q) {
		                return q.add(rendarable);
		            });
		            rendarable.setRenderableIndex(this._renderables.length);
		        }
		    }, {
		        key: "removeRenderable",
		        value: function removeRenderable(renderable) {
		            var index = this._renderables.indexOf(renderable);
		            if (index === -1) {
		                return; // Could not find specified renderable
		            }
		            this._renderables.splice(index, 1);
		            this._renderables.forEach(function (r, i) {
		                r.setRenderableIndex(i + 1);
		            });
		            this._queues.forEach(function (q) {
		                return q.remove(renderable);
		            });
		        }
		    }, {
		        key: "getByIndex",
		        value: function getByIndex(index) {
		            return this._renderables[index];
		        }
		    }]);
		
		    return RenderQueueRegistry;
		}();
		
		exports.default = RenderQueueRegistry;
	
	/***/ },
	/* 20 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _MaterialFactory = __webpack_require__(21);
		
		var _MaterialFactory2 = _interopRequireDefault(_MaterialFactory);
		
		var _GrimoireInterface = __webpack_require__(46);
		
		var _GrimoireInterface2 = _interopRequireDefault(_GrimoireInterface);
		
		var _Texture2D = __webpack_require__(47);
		
		var _Texture2D2 = _interopRequireDefault(_Texture2D);
		
		var _GLExtRequestor = __webpack_require__(48);
		
		var _GLExtRequestor2 = _interopRequireDefault(_GLExtRequestor);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var ns = _GrimoireInterface2.default.ns("HTTP://GRIMOIRE.GL/NS/DEFAULT");
		var ResizeMode;
		(function (ResizeMode) {
		    ResizeMode[ResizeMode["Aspect"] = 0] = "Aspect";
		    ResizeMode[ResizeMode["Fit"] = 1] = "Fit";
		    ResizeMode[ResizeMode["Manual"] = 2] = "Manual";
		})(ResizeMode || (ResizeMode = {}));
		/**
		 * キャンバスの初期化及び設定を司るコンポーネント
		 *
		 * このコンポーネントによって、適切な位置に`<canvas>`を初期化してWebGLコンテキストを初期化します。
		 */
		
		var CanvasInitializerComponent = function (_Component) {
		    _inherits(CanvasInitializerComponent, _Component);
		
		    function CanvasInitializerComponent() {
		        _classCallCheck(this, CanvasInitializerComponent);
		
		        return _possibleConstructorReturn(this, (CanvasInitializerComponent.__proto__ || Object.getPrototypeOf(CanvasInitializerComponent)).apply(this, arguments));
		    }
		
		    _createClass(CanvasInitializerComponent, [{
		        key: "$awake",
		        value: function $awake() {
		            var _this2 = this;
		
		            this._scriptTag = this.companion.get("scriptElement");
		            if (this._isContainedInBody(this._scriptTag)) {
		                // canvas should be placed siblings of the script tag
		                this._generateCanvas(this._scriptTag);
		            } else {
		                throw new Error("goml script should have body as ancesotor to instanciate canvas element in the location");
		            }
		            // apply sizes on changed
		            this.getAttributeRaw("width").watch(function (v) {
		                _this2._resize();
		            });
		            this.getAttributeRaw("height").watch(function (v) {
		                _this2._resize();
		            });
		            this.getAttributeRaw("antialias").watch(function (v) {
		                console.warn("Changing antialias attribute is not supported. This is only works when the canvas element created.");
		            });
		            this.getAttributeRaw("preserveDrawingBuffer").watch(function (v) {
		                console.warn("Changing preserveDrawingBuffer attribute is not supported. This is only works when the canvas element created.");
		            });
		        }
		        /**
		         * Generate canvas element
		         * @param  {Element}           parent [description]
		         * @return {HTMLCanvasElement}        [description]
		         */
		
		    }, {
		        key: "_generateCanvas",
		        value: function _generateCanvas(scriptTag) {
		            var _this3 = this;
		
		            this._autoFixForBody(scriptTag);
		            this.canvas = document.createElement("canvas");
		            window.addEventListener("resize", function () {
		                return _this3._onWindowResize();
		            });
		            this._configureCanvas(this.canvas, scriptTag);
		            var gl = this._getContext(this.canvas);
		            this.companion.set(ns("gl"), gl);
		            this.companion.set(ns("canvasElement"), this.canvas);
		            this.companion.set(ns("MaterialFactory"), new _MaterialFactory2.default(gl));
		            this.companion.set(ns("GLExtRequestor"), new _GLExtRequestor2.default(gl));
		            _Texture2D2.default.generateDefaultTexture(gl);
		            return this.canvas;
		        }
		    }, {
		        key: "_resize",
		        value: function _resize(supressBroadcast) {
		            var canvas = this.companion.get("canvasElement");
		            var widthRaw = this.getAttribute("width");
		            var heightRaw = this.getAttribute("height");
		            this._widthMode = this._asResizeMode(widthRaw);
		            this._heightMode = this._asResizeMode(heightRaw);
		            if (this._widthMode === this._heightMode && this._widthMode === ResizeMode.Aspect) {
		                throw new Error("Width and height could not have aspect mode in same time!");
		            }
		            if (this._widthMode === ResizeMode.Aspect) {
		                this._ratio = widthRaw.aspect;
		            }
		            if (this._heightMode === ResizeMode.Aspect) {
		                this._ratio = heightRaw.aspect;
		            }
		            if (this._widthMode === ResizeMode.Manual) {
		                this._applyManualWidth(widthRaw.size, supressBroadcast);
		            }
		            if (this._heightMode === ResizeMode.Manual) {
		                this._applyManualHeight(heightRaw.size, supressBroadcast);
		            }
		            this._onWindowResize(supressBroadcast);
		        }
		    }, {
		        key: "_onWindowResize",
		        value: function _onWindowResize(supressBroadcast) {
		            var size = this._getParentSize();
		            if (this._widthMode === ResizeMode.Fit) {
		                this._applyManualWidth(size.width, supressBroadcast);
		            }
		            if (this._heightMode === ResizeMode.Fit) {
		                if (size.height === 0 && _GrimoireInterface2.default.debug) {
		                    console.warn("Canvas height parameter specified as fit and height of parent element is 0.\n This is possibly the reason you haven't set css to html or body element.");
		                }
		                this._applyManualHeight(size.height, supressBroadcast);
		            }
		        }
		    }, {
		        key: "_applyManualWidth",
		        value: function _applyManualWidth(width, supressBroadcast) {
		            if (width === this.canvas.width) {
		                return;
		            }
		            this.canvas.width = width;
		            this._canvasContainer.style.width = width + "px";
		            if (!supressBroadcast) {
		                this.node.broadcastMessage(1, "resizeCanvas");
		            }
		            if (this._heightMode === ResizeMode.Aspect) {
		                this._applyManualHeight(width / this._ratio, supressBroadcast);
		            }
		        }
		    }, {
		        key: "_applyManualHeight",
		        value: function _applyManualHeight(height, supressBroadcast) {
		            if (height === this.canvas.height) {
		                return;
		            }
		            this.canvas.height = height;
		            this._canvasContainer.style.height = height + "px";
		            if (!supressBroadcast) {
		                this.node.broadcastMessage(1, "resizeCanvas");
		            }
		            if (this._widthMode === ResizeMode.Aspect) {
		                this._applyManualWidth(height * this._ratio, supressBroadcast);
		            }
		        }
		    }, {
		        key: "_getParentSize",
		        value: function _getParentSize() {
		            var parent = this._canvasContainer.parentElement;
		            var boundingBox = parent.getBoundingClientRect();
		            return boundingBox;
		        }
		        /**
		         * Get resize mode from raw attribute of height or width
		         * @param  {string  | number}      mode [description]
		         * @return {ResizeMode}   [description]
		         */
		
		    }, {
		        key: "_asResizeMode",
		        value: function _asResizeMode(cso) {
		            if (cso.mode === "fit") {
		                return ResizeMode.Fit;
		            } else if (cso.mode === "aspect") {
		                return ResizeMode.Aspect;
		            } else {
		                return ResizeMode.Manual;
		            }
		        }
		    }, {
		        key: "_configureCanvas",
		        value: function _configureCanvas(canvas, scriptTag) {
		            canvas.style.position = "absolute";
		            canvas.style.top = "0px";
		            canvas.style.left = "0px";
		            this._canvasContainer = document.createElement("div");
		            this._canvasContainer.style.position = "relative";
		            this._canvasContainer.style.overflow = "hidden";
		            this._canvasContainer.appendChild(canvas);
		            if (this.getAttribute("containerId")) {
		                this._canvasContainer.id = this.getAttribute("containerId");
		            }
		            if (this.getAttribute("containerClass")) {
		                this._canvasContainer.className = this.getAttribute("containerClass");
		            }
		            this.companion.set(ns("canvasContainer"), this._canvasContainer);
		            scriptTag.parentElement.insertBefore(this._canvasContainer, scriptTag.nextSibling);
		            this._resize(true);
		        }
		    }, {
		        key: "_getContext",
		        value: function _getContext(canvas) {
		            var contextConfig = {
		                antialias: this.getAttribute("antialias"),
		                preserveDrawingBuffer: this.getAttribute("preserveDrawingBuffer")
		            };
		            var context = canvas.getContext("webgl", contextConfig);
		            if (!context) {
		                context = canvas.getContext("webgl-experimental", contextConfig);
		            }
		            return context;
		        }
		        /**
		         * Check the tag is included in the body
		         * @param  {Element} tag [description]
		         * @return {boolean}     [description]
		         */
		
		    }, {
		        key: "_isContainedInBody",
		        value: function _isContainedInBody(tag) {
		            if (!tag.parentElement) {
		                return false;
		            }
		            if (tag.parentNode.nodeName === "BODY") {
		                return true;
		            }
		            return this._isContainedInBody(tag.parentElement);
		        }
		    }, {
		        key: "_autoFixForBody",
		        value: function _autoFixForBody(scriptTag) {
		            if (scriptTag.parentElement.nodeName === "BODY") {
		                var boudningBox = document.body.getBoundingClientRect();
		                if (boudningBox.height === 0) {
		                    document.body.style.height = "100%";
		                    document.body.parentElement.style.height = "100%";
		                }
		            }
		        }
		    }]);
		
		    return CanvasInitializerComponent;
		}(_Component3.default);
		
		CanvasInitializerComponent.attributes = {
		    /**
		     * キャンバスタグの横幅を指定します。
		     */
		    width: {
		        default: "fit",
		        converter: "CanvasSize"
		    },
		    /**
		     * キャンバスタグの縦幅を指定します。
		     */
		    height: {
		        default: "fit",
		        converter: "CanvasSize"
		    },
		    /**
		     * キャンバス要素の直接の親要素のコンテナに割り当てるidを指定します。
		     */
		    containerId: {
		        default: "",
		        converter: "String"
		    },
		    /**
		     * キャンバス要素の直接の親要素のコンテナに割り当てるクラス名を指定します。
		     */
		    containerClass: {
		        default: "gr-container",
		        converter: "String"
		    },
		    /**
		     * GLコンテキストの初期化時に、preserveDrawingBufferフラグを有効にするか指定します。
		     *
		     * 描画結果をdataURLに変換する際などはこの属性がtrueでないと正常にレンダリング結果を取得できません。
		     */
		    preserveDrawingBuffer: {
		        default: true,
		        converter: "Boolean"
		    },
		    /**
		     * GLコンテキストの初期化時に、MSAAによるアンチエイリアスを有効にするか指定します。
		     *
		     * この属性は、途中で動的に変更することができません。
		     */
		    antialias: {
		        default: true,
		        converter: "Boolean"
		    }
		};
		exports.default = CanvasInitializerComponent;
	
	/***/ },
	/* 21 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Parser = __webpack_require__(22);
		
		var _Parser2 = _interopRequireDefault(_Parser);
		
		var _MacroRegistory = __webpack_require__(29);
		
		var _MacroRegistory2 = _interopRequireDefault(_MacroRegistory);
		
		var _TextFileResolver = __webpack_require__(6);
		
		var _TextFileResolver2 = _interopRequireDefault(_TextFileResolver);
		
		var _Material = __webpack_require__(31);
		
		var _Material2 = _interopRequireDefault(_Material);
		
		var _header = __webpack_require__(45);
		
		var _header2 = _interopRequireDefault(_header);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
		    return new (P || (P = Promise))(function (resolve, reject) {
		        function fulfilled(value) {
		            try {
		                step(generator.next(value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function rejected(value) {
		            try {
		                step(generator["throw"](value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function step(result) {
		            result.done ? resolve(result.value) : new P(function (resolve) {
		                resolve(result.value);
		            }).then(fulfilled, rejected);
		        }
		        step((generator = generator.apply(thisArg, _arguments || [])).next());
		    });
		};
		
		/**
		 * Manage materialGenerators for materials.
		 * Materials can be instanciated with this instance.
		 * Every gl reference can contain 1 of MaterialFactory at most.
		 */
		var MaterialFactory = function () {
		    function MaterialFactory(gl) {
		        _classCallCheck(this, MaterialFactory);
		
		        this.gl = gl;
		        this.shaderHeader = MaterialFactory.defaultShaderHeader;
		        this.macro = new _MacroRegistory2.default();
		        if (MaterialFactory.factories.has(gl)) {
		            throw new Error("MaterialFactory can not be instanciated dupelicately for a WebGLRenderingContext.");
		        }
		        MaterialFactory.factories.set(gl, this);
		    }
		    /**
		     * Obtain an instance of MaterialFactory from WebGLRenderingContext
		     * @param  {WebGLRenderingContext} gl [description]
		     * @return {MaterialFactory}          [description]
		     */
		
		
		    _createClass(MaterialFactory, [{
		        key: "instanciate",
		        value: function instanciate(typeName) {
		            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
		                return regeneratorRuntime.wrap(function _callee$(_context) {
		                    while (1) {
		                        switch (_context.prev = _context.next) {
		                            case 0:
		                                if (!MaterialFactory.materialGenerators[typeName]) {
		                                    _context.next = 4;
		                                    break;
		                                }
		
		                                return _context.abrupt("return", MaterialFactory.materialGenerators[typeName](this));
		
		                            case 4:
		                                _context.next = 6;
		                                return this._waitForRegistered(typeName);
		
		                            case 6:
		                                return _context.abrupt("return", _context.sent);
		
		                            case 7:
		                            case "end":
		                                return _context.stop();
		                        }
		                    }
		                }, _callee, this);
		            }));
		        }
		    }, {
		        key: "_waitForRegistered",
		        value: function _waitForRegistered(typeName) {
		            var _this = this;
		
		            return new Promise(function (resolve) {
		                MaterialFactory._onRegister(typeName, function () {
		                    resolve(MaterialFactory.materialGenerators[typeName](_this));
		                });
		            });
		        }
		    }], [{
		        key: "get",
		        value: function get(gl) {
		            var factory = this.factories.get(gl);
		            if (!factory) {
		                throw new Error("There was no associated MaterialFactory with specified WebGLRenderingContext");
		            }
		            return factory;
		        }
		    }, {
		        key: "addMaterialType",
		        value: function addMaterialType(typeName, materialGenerator) {
		            MaterialFactory.materialGenerators[typeName] = materialGenerator;
		            if (MaterialFactory.registerdHandlers[typeName]) {
		                MaterialFactory.registerdHandlers[typeName].forEach(function (t) {
		                    return t();
		                });
		            }
		        }
		        /**
		         * Add source of .sort material as specified typename.
		         * @param  {string}        typeName [description]
		         * @param  {string}        source   [description]
		         * @return {Promise<void>}          [description]
		         */
		
		    }, {
		        key: "addSORTMaterial",
		        value: function addSORTMaterial(typeName, source) {
		            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee2() {
		                var techniques;
		                return regeneratorRuntime.wrap(function _callee2$(_context2) {
		                    while (1) {
		                        switch (_context2.prev = _context2.next) {
		                            case 0:
		                                _context2.next = 2;
		                                return _Parser2.default.parse(source);
		
		                            case 2:
		                                techniques = _context2.sent;
		
		                                MaterialFactory.addMaterialType(typeName, function (factory) {
		                                    return new _Material2.default(factory.gl, techniques);
		                                });
		
		                            case 4:
		                            case "end":
		                                return _context2.stop();
		                        }
		                    }
		                }, _callee2, this);
		            }));
		        }
		        /**
		         * Add source of .sort material from external url as specified typeName.
		         * @param  {string}        typeName [description]
		         * @param  {string}        url      [description]
		         * @return {Promise<void>}          [description]
		         */
		
		    }, {
		        key: "addSORTMaterialFromURL",
		        value: function addSORTMaterialFromURL(typeName, url) {
		            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee3() {
		                var source;
		                return regeneratorRuntime.wrap(function _callee3$(_context3) {
		                    while (1) {
		                        switch (_context3.prev = _context3.next) {
		                            case 0:
		                                _context3.next = 2;
		                                return _TextFileResolver2.default.resolve(url);
		
		                            case 2:
		                                source = _context3.sent;
		                                _context3.next = 5;
		                                return MaterialFactory.addSORTMaterial(typeName, source);
		
		                            case 5:
		                            case "end":
		                                return _context3.stop();
		                        }
		                    }
		                }, _callee3, this);
		            }));
		        }
		    }, {
		        key: "_onRegister",
		        value: function _onRegister(factoryName, handler) {
		            if (MaterialFactory.registerdHandlers[factoryName]) {
		                MaterialFactory.registerdHandlers[factoryName].push(handler);
		            } else {
		                MaterialFactory.registerdHandlers[factoryName] = [handler];
		            }
		        }
		    }]);
		
		    return MaterialFactory;
		}();
		/**
		 * Map for gl reference and MaterialFactory.
		 * @type {Map<WebGLRenderingContext,MaterialFactory>}
		 */
		
		
		exports.default = MaterialFactory;
		MaterialFactory.factories = new Map();
		MaterialFactory.defaultShaderHeader = _header2.default;
		/**
		 * Actual material generator.
		 */
		MaterialFactory.materialGenerators = {};
		MaterialFactory.registerdHandlers = {};
	
	/***/ },
	/* 22 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _HashCalculator = __webpack_require__(23);
		
		var _HashCalculator2 = _interopRequireDefault(_HashCalculator);
		
		var _SortTransformUtility = __webpack_require__(24);
		
		var _SortTransformUtility2 = _interopRequireDefault(_SortTransformUtility);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var SortParser = function () {
		    function SortParser() {
		        _classCallCheck(this, SortParser);
		    }
		
		    _createClass(SortParser, null, [{
		        key: "parse",
		        value: function parse(source) {
		            var sourceHash = _HashCalculator2.default.calcHash(source);
		            if (SortParser._parsedCache[sourceHash] !== void 0) {
		                return new Promise(function (resolve, reject) {
		                    resolve(SortParser._parsedCache[sourceHash]);
		                });
		            } else {
		                return SortParser._parse(source).then(function (v) {
		                    SortParser._parsedCache[source] = v;
		                    return v;
		                });
		            }
		        }
		    }, {
		        key: "_parse",
		        value: function _parse(source) {
		            return new Promise(function (resolve, reject) {
		                var result = {};
		                _SortTransformUtility2.default.resolveImports(_SortTransformUtility2.default.removeComment(source)).then(function (uncommented) {
		                    try {
		                        var techniqueSources = _SortTransformUtility2.default.separateTechniqueSource(uncommented);
		                        for (var key in techniqueSources) {
		                            result[key] = SortParser._parseTechnique(techniqueSources[key]);
		                        }
		                        resolve(result);
		                    } catch (e) {
		                        reject(e);
		                    }
		                });
		            });
		        }
		    }, {
		        key: "_parseTechnique",
		        value: function _parseTechnique(techniqueSource) {
		            var drawOrder = _SortTransformUtility2.default.fetchDrawOrder(techniqueSource) || "Auto";
		            var passSources = _SortTransformUtility2.default.separatePassSource(techniqueSource);
		            var passes = new Array(passSources.length);
		            for (var i = 0; i < passSources.length; i++) {
		                passes[i] = SortParser._parsePassSource(passSources[i]);
		            }
		            return {
		                drawOrder: drawOrder,
		                passes: passes
		            };
		        }
		    }, {
		        key: "_parsePassSource",
		        value: function _parsePassSource(passSource) {
		            var shaderSource = _SortTransformUtility2.default.removePreferences(passSource);
		            var attributes = _SortTransformUtility2.default.parseVariables(passSource, "attribute");
		            var uniforms = _SortTransformUtility2.default.parseVariables(passSource, "uniform");
		            var macros = _SortTransformUtility2.default.parseMacros(passSource);
		            var states = _SortTransformUtility2.default.parsePreferences(passSource);
		            return {
		                fragment: shaderSource,
		                vertex: shaderSource,
		                attributes: attributes,
		                uniforms: uniforms,
		                macros: macros,
		                states: states
		            };
		        }
		    }]);
		
		    return SortParser;
		}();
		/**
		 * Cache to prevent double loading
		 */
		
		
		SortParser._parsedCache = {};
		exports.default = SortParser;
	
	/***/ },
	/* 23 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var HashCalculator = function () {
		    function HashCalculator() {
		        _classCallCheck(this, HashCalculator);
		    }
		
		    _createClass(HashCalculator, null, [{
		        key: "calcHash",
		        value: function calcHash(source) {
		            var hash = 0;
		            if (source.length === 0) return hash;
		            for (var i = 0; i < source.length; i++) {
		                var char = source.charCodeAt(i);
		                hash = (hash << 5) - hash + char;
		                hash = hash & hash; // Convert to 32bit integer
		            }
		            return hash;
		        }
		    }]);
		
		    return HashCalculator;
		}();
		
		exports.default = HashCalculator;
	
	/***/ },
	/* 24 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Preferences = __webpack_require__(25);
		
		var _Preferences2 = _interopRequireDefault(_Preferences);
		
		var _TypeToConstant = __webpack_require__(26);
		
		var _TypeToConstant2 = _interopRequireDefault(_TypeToConstant);
		
		var _NameSemanticsPair = __webpack_require__(27);
		
		var _NameSemanticsPair2 = _interopRequireDefault(_NameSemanticsPair);
		
		var _ImportResolver = __webpack_require__(28);
		
		var _ImportResolver2 = _interopRequireDefault(_ImportResolver);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
		    return new (P || (P = Promise))(function (resolve, reject) {
		        function fulfilled(value) {
		            try {
		                step(generator.next(value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function rejected(value) {
		            try {
		                step(generator["throw"](value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function step(result) {
		            result.done ? resolve(result.value) : new P(function (resolve) {
		                resolve(result.value);
		            }).then(fulfilled, rejected);
		        }
		        step((generator = generator.apply(thisArg, _arguments || [])).next());
		    });
		};
		
		var SortTransformUtility = function () {
		    function SortTransformUtility() {
		        _classCallCheck(this, SortTransformUtility);
		    }
		
		    _createClass(SortTransformUtility, null, [{
		        key: "separateTechniqueSource",
		
		        /**
		         * Separate .sort shader text with @Technique statements.
		         * @param  {string} uncommentedSource [description]
		         * @return {[type]}                   [description]
		         */
		        value: function separateTechniqueSource(uncommentedSource) {
		            if (uncommentedSource.indexOf("@Technique") === -1) {
		                return { default: uncommentedSource };
		            } else {
		                var result = {};
		                var regex = /@Technique\s+([a-zA-Z0-9_]+)/g;
		                var regexResult = void 0;
		                while (regexResult = regex.exec(uncommentedSource)) {
		                    var techniqueName = regexResult[1];
		                    if (result[techniqueName] !== void 0) {
		                        throw new Error("Technique name " + techniqueName + " is dupelicated");
		                    } else {
		                        result[techniqueName] = SortTransformUtility.obtainNextSection(uncommentedSource, "{", "}", regexResult.index + regexResult.length);
		                    }
		                }
		                return result;
		            }
		        }
		        /**
		         * Separate technique source with @Pass statement.
		         * @param  {string}   uncommentedSource [description]
		         * @return {string[]}                   [description]
		         */
		
		    }, {
		        key: "separatePassSource",
		        value: function separatePassSource(uncommentedSource) {
		            if (uncommentedSource.indexOf("@Pass") === -1) {
		                return [uncommentedSource];
		            } else {
		                var result = [];
		                var regex = /@Pass/g;
		                var regexResult = void 0;
		                while (regexResult = regex.exec(uncommentedSource)) {
		                    result.push(SortTransformUtility.obtainNextSection(uncommentedSource, "{", "}", regexResult.index + regexResult.length));
		                }
		                return result;
		            }
		        }
		        /**
		         * Fetch draw order preference from technique source.
		         * @param  {string} uncommentedTechniqueSource [description]
		         * @return {string}                            [description]
		         */
		
		    }, {
		        key: "fetchDrawOrder",
		        value: function fetchDrawOrder(uncommentedTechniqueSource) {
		            var regexResult = /@DrawOrder\s*\((\w+)\)/g.exec(uncommentedTechniqueSource);
		            if (regexResult) {
		                var firstPassIndex = uncommentedTechniqueSource.indexOf("@Pass");
		                if (firstPassIndex !== -1 && firstPassIndex < regexResult.index) {
		                    throw new Error("DrawOrder preference should be just under @Technique section");
		                }
		                return regexResult[1];
		            }
		            return null;
		        }
		    }, {
		        key: "removePreferences",
		        value: function removePreferences(source) {
		            var regex = /@.+$/gm;
		            return source.replace(regex, "");
		        }
		    }, {
		        key: "resolveImports",
		        value: function resolveImports(uncommentedSource) {
		            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
		                var regexResult, importContent;
		                return regeneratorRuntime.wrap(function _callee$(_context) {
		                    while (1) {
		                        switch (_context.prev = _context.next) {
		                            case 0:
		                                if (false) {
		                                    _context.next = 17;
		                                    break;
		                                }
		
		                                regexResult = /\s*@import\s+"([^"]+)"/.exec(uncommentedSource);
		
		                                if (regexResult) {
		                                    _context.next = 4;
		                                    break;
		                                }
		
		                                return _context.abrupt("break", 17);
		
		                            case 4:
		                                importContent = void 0;
		                                _context.t0 = SortTransformUtility;
		                                _context.next = 8;
		                                return _ImportResolver2.default.resolve(regexResult[1]);
		
		                            case 8:
		                                _context.t1 = _context.sent;
		                                _context.next = 11;
		                                return _context.t0.resolveImports.call(_context.t0, _context.t1);
		
		                            case 11:
		                                importContent = _context.sent;
		
		                                if (importContent) {
		                                    _context.next = 14;
		                                    break;
		                                }
		
		                                throw new Error("Required shader chunk '" + regexResult[1] + "' was not found!!");
		
		                            case 14:
		                                uncommentedSource = uncommentedSource.replace(regexResult[0], "\n" + importContent + "\n");
		                                _context.next = 0;
		                                break;
		
		                            case 17:
		                                return _context.abrupt("return", uncommentedSource);
		
		                            case 18:
		                            case "end":
		                                return _context.stop();
		                        }
		                    }
		                }, _callee, this);
		            }));
		        }
		    }, {
		        key: "parseMacros",
		        value: function parseMacros(source) {
		            var result = {};
		            var regex = /@ExposeMacro\s*\(\s*([a-zA-Z0-9_]+)\s*,\s*([a-zA-Z0-9_]+)\s*,\s*([a-zA-Z0-9_]+)\s*,\s*([a-zA-Z0-9_]+)\s*\)/g;
		            var regexResult = void 0;
		            while (regexResult = regex.exec(source)) {
		                if (!regexResult[1] || !regexResult[2] || !regexResult[3] || !regexResult[4]) {
		                    throw new Error("Invalid parameter was passed on @ExposeMacro preference on '" + regexResult[0] + "'");
		                }
		                if (regexResult[1] !== "bool" && regexResult[1] !== "int") {
		                    throw new Error("Invalid macro type \"" + regexResult[1] + "\". regexResult type must be int or bool");
		                }
		                var value = void 0;
		                if (regexResult[1] === "bool") {
		                    if (regexResult[4] !== "true" && regexResult[4] !== "false") {
		                        throw new Error("Default macro value \"" + regexResult[4] + "\" is invalid for bool type macro. Must be true or false");
		                    }
		                    value = regexResult[4] === "true";
		                } else {
		                    value = parseFloat(regexResult[4]);
		                    if (isNaN(value)) {
		                        throw new Error("Default macro value \"" + regexResult[4] + "\" is invalid for int type macro. Must be a number.");
		                    }
		                }
		                result[regexResult[2]] = {
		                    name: regexResult[2],
		                    macroName: regexResult[3],
		                    type: regexResult[1],
		                    value: value,
		                    target: "expose"
		                };
		            }
		            regex = /@ReferMacro\s*\(\s*([a-zA-Z0-9_]+)\s*,\s*(.+)\s*\)/g;
		            while (regexResult = regex.exec(source)) {
		                if (!regexResult[1] || !regexResult[2]) {
		                    throw new Error("Invalid parameter was passed on @ReferMacro preference on '" + regexResult[0] + "'");
		                }
		                result[regexResult[1]] = {
		                    name: regexResult[1],
		                    macroName: regexResult[1],
		                    value: regexResult[2],
		                    target: "refer"
		                };
		            }
		            return result;
		        }
		    }, {
		        key: "parsePreferences",
		        value: function parsePreferences(source) {
		            var result = {
		                enable: [WebGLRenderingContext.CULL_FACE, WebGLRenderingContext.BLEND, WebGLRenderingContext.DEPTH_TEST],
		                functions: {
		                    blendColor: [0, 0, 0, 0],
		                    cullFace: [WebGLRenderingContext.BACK],
		                    blendFuncSeparate: [WebGLRenderingContext.ONE, WebGLRenderingContext.ZERO, WebGLRenderingContext.ONE, WebGLRenderingContext.ZERO],
		                    blendEquationSeparate: [WebGLRenderingContext.FUNC_ADD, WebGLRenderingContext.FUNC_ADD],
		                    lineWidth: [1],
		                    frontFace: [WebGLRenderingContext.CCW],
		                    depthRange: [0, 1],
		                    depthFunc: [WebGLRenderingContext.LESS]
		                }
		            };
		            var regex = /@([A-Za-z]+)\(([a-zA-Z_0-9,\.\-]*)\)/g;
		            var regexResult = void 0;
		            while (regexResult = regex.exec(source)) {
		                var prefParser = _Preferences2.default[regexResult[1]];
		                if (!prefParser) {
		                    throw new Error("Unknown pass preference " + regexResult[1] + " was specified.");
		                }
		                prefParser(result, regexResult[2].split(","));
		            }
		            return result;
		        }
		    }, {
		        key: "asValidJSON",
		        value: function asValidJSON(json) {
		            var regex = /([\{,]\s*)([a-zA-Z0-9_]+)(\s*\:)/gm;
		            var result = json.replace(regex, '$1"$2"$3');
		            return result;
		        }
		    }, {
		        key: "removeComment",
		        value: function removeComment(source) {
		            var text = "";
		            var isLineComment = false;
		            var isMultiLineComment = false;
		            for (var i = 0; i < source.length; i++) {
		                var c = source.charAt(i);
		                if (c === "/") {
		                    if (i + 1 < source.length) {
		                        if (source.charAt(i + 1) === "/" && !isMultiLineComment) {
		                            isLineComment = true;
		                            i++;
		                            continue;
		                        } else if (source.charAt(i + 1) === "*" && !isLineComment) {
		                            isMultiLineComment = true;
		                            i++;
		                            continue;
		                        }
		                    }
		                }
		                if (c === "*" && isMultiLineComment && i + 1 < source.length && source.charAt(i + 1) === "/") {
		                    isMultiLineComment = false;
		                    i++;
		                    continue;
		                }
		                if (c === "\n") {
		                    if (isLineComment) {
		                        text += "\n";
		                        isLineComment = false;
		                        continue;
		                    } else if (isMultiLineComment) {
		                        text += "\n"; // for keeping line break
		                    }
		                }
		                if (!isLineComment && !isMultiLineComment) {
		                    text += c;
		                }
		            }
		            return text;
		        }
		    }, {
		        key: "obtainNextSection",
		        value: function obtainNextSection(source, begin, end, offset) {
		            var beginningPosition = source.indexOf(begin, offset);
		            if (beginningPosition === -1) {
		                throw new Error("Begining section charactor '" + begin + "' was not found.");
		            }
		            if (begin.length > 1 || end.length > 1) {
		                throw new Error("Invalid parameter");
		            }
		            var matchingCount = 1;
		            var beginCode = begin.charCodeAt(0);
		            var endCode = end.charCodeAt(0);
		            for (var i = beginningPosition + 1; i < source.length; i++) {
		                var current = source.charCodeAt(i);
		                if (current === beginCode) {
		                    matchingCount++;
		                } else if (current === endCode) {
		                    matchingCount--;
		                }
		                if (matchingCount === 0) {
		                    return source.substring(beginningPosition + 1, i);
		                }
		            }
		            throw new Error("Invalid bracket matching");
		        }
		    }, {
		        key: "generateVariableFetchRegex",
		        value: function generateVariableFetchRegex(variableType) {
		            return new RegExp("(?:@([a-zA-Z0-9_]+)?(\\{.+\\})?)?\\s*" + variableType + "\\s+(?:(lowp|mediump|highp)\\s+)?([a-z0-9A-Z]+)\\s+([a-zA-Z0-9_]+)(?:\\s*\\[\\s*([a-zA-Z0-9_]+)\\s*\\]\\s*)?\\s*;", "g");
		        }
		    }, {
		        key: "parseVariables",
		        value: function parseVariables(source, variableType) {
		            var result = {};
		            var regex = SortTransformUtility.generateVariableFetchRegex(variableType);
		            var regexResult = void 0;
		            while (regexResult = regex.exec(source)) {
		                var name = regexResult[5];
		                var type = _TypeToConstant2.default[regexResult[4]];
		                var precision = regexResult[3];
		                var rawAnnotations = regexResult[2];
		                var isArray = regexResult[6] !== void 0;
		                var arrayCount = undefined;
		                var semantic = regexResult[1];
		                if (!semantic) {
		                    semantic = _NameSemanticsPair2.default[variableType][name];
		                    if (!semantic) {
		                        semantic = variableType === "uniform" ? "USER_VALUE" : name.toUpperCase();
		                    }
		                }
		                if (isArray) {
		                    arrayCount = parseInt(regexResult[6], 10);
		                    if (isNaN(arrayCount)) {
		                        arrayCount = regexResult[6];
		                    }
		                }
		                result[name] = {
		                    semantic: semantic,
		                    name: name,
		                    type: type,
		                    precision: precision,
		                    attributes: rawAnnotations ? JSON.parse(SortTransformUtility.asValidJSON(rawAnnotations)) : {},
		                    isArray: isArray,
		                    count: arrayCount
		                };
		            }
		            return result;
		        }
		    }]);
		
		    return SortTransformUtility;
		}();
		
		exports.default = SortTransformUtility;
	
	/***/ },
	/* 25 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		function asGLConstantArgs(args, length) {
		    if (args.length !== length) {
		        throw new Error("Unmatching argument count on preference parse");
		    }
		    return args.map(function (arg) {
		        var argNum = WebGLRenderingContext[arg];
		        if (typeof argNum !== "number") {
		            throw new Error("Unknown WebGL constant " + arg + " was specified");
		        }
		        return argNum;
		    });
		}
		function asNumberArgs(args, length) {
		    if (args.length !== length) {
		        throw new Error("Unmatching argument count on preference parse");
		    }
		    return args.map(function (arg) {
		        var argNum = Number.parseFloat(arg);
		        if (isNaN(argNum)) {
		            throw new Error("Failed to parse number on preference parsing");
		        }
		        return argNum;
		    });
		}
		function asBooleanArgs(args, length) {
		    if (args.length !== length) {
		        throw new Error("Unmatching argument count on preference parse");
		    }
		    return args.map(function (arg) {
		        if (arg !== "true" && arg !== "false") {
		            throw new Error(arg + " is not boolean");
		        }
		        return arg === "true";
		    });
		}
		exports.default = {
		    Enable: function Enable(state, args) {
		        var enableTarget = WebGLRenderingContext[args[0]];
		        if (typeof enableTarget !== "number") {
		            throw new Error("Unknown WebGL constant \"" + args[0] + "\" was specified on @Enable");
		        }
		        state.enable.push(enableTarget);
		    },
		    Disable: function Disable(state, args) {
		        var disableTarget = WebGLRenderingContext[args[0]];
		        if (typeof disableTarget !== "number") {
		            throw new Error("Unknown WebGL constant \"" + args[0] + "\" was specified on @Disable");
		        }
		        var index = state.enable.indexOf(disableTarget);
		        if (index !== index) {
		            state.enable.splice(index, 1);
		        }
		    },
		    BlendFunc: function BlendFunc(state, args) {
		        var config = asGLConstantArgs(args, 2);
		        state.functions.blendFuncSeparate = [config[0], config[1], config[0], config[1]];
		    },
		    BlendFuncSeparate: function BlendFuncSeparate(state, args) {
		        state.functions.blendFuncSeparate = asGLConstantArgs(args, 4);
		    },
		    BlendEquation: function BlendEquation(state, args) {
		        var config = asGLConstantArgs(args, 1);
		        state.functions.blendEquationSeparate = [config[0], config[0]];
		    },
		    BlendEquationSeparate: function BlendEquationSeparate(state, args) {
		        state.functions.blendEquationSeparate = asGLConstantArgs(args, 4);
		    },
		    BlendColor: function BlendColor(state, args) {
		        state.functions.blendColor = asNumberArgs(args, 4);
		    },
		    ColorMask: function ColorMask(state, args) {
		        state.functions.colorMask = asBooleanArgs(args, 4);
		        state.enable.push(WebGLRenderingContext.COLOR_WRITEMASK);
		    },
		    CullFace: function CullFace(state, args) {
		        state.functions.cullFace = asGLConstantArgs(args, 1);
		    },
		    DepthFunc: function DepthFunc(state, args) {
		        state.functions.depthFunc = asGLConstantArgs(args, 1);
		    },
		    DepthRange: function DepthRange(state, args) {
		        state.functions.depthRange = asNumberArgs(args, 2);
		    },
		    FrontFace: function FrontFace(state, args) {
		        state.functions.frontFace = asGLConstantArgs(args, 1);
		    },
		    LineWidth: function LineWidth(state, args) {
		        state.functions.lineWidth = asNumberArgs(args, 1);
		    },
		    PolygonOffset: function PolygonOffset(state, args) {
		        state.functions.polygonOffset = asNumberArgs(args, 2);
		        state.enable.push(WebGLRenderingContext.POLYGON_OFFSET_FILL);
		    },
		    Scissor: function Scissor(state, args) {
		        state.functions.scissor = asNumberArgs(args, 4);
		        state.enable.push(WebGLRenderingContext.SCISSOR_TEST);
		    },
		    ExposeMacro: function ExposeMacro() {
		        return;
		    },
		    ReferMacro: function ReferMacro() {
		        return;
		    }
		};
	
	/***/ },
	/* 26 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		if (!WebGLRenderingContext.ONE) {
		    throw new Error("WebGLRenderingContext constant can not be retrived!");
		}
		var gl = WebGLRenderingContext;
		var result = {
		    vec2: gl.FLOAT_VEC2,
		    vec3: gl.FLOAT_VEC3,
		    vec4: gl.FLOAT_VEC4,
		    ivec2: gl.INT_VEC2,
		    ivec3: gl.INT_VEC3,
		    ivec4: gl.INT_VEC4,
		    bvec2: gl.BOOL_VEC2,
		    bvec3: gl.BOOL_VEC3,
		    bvec4: gl.BOOL_VEC4,
		    float: gl.FLOAT,
		    int: gl.INT,
		    bool: gl.BOOL,
		    sampler2D: gl.SAMPLER_2D,
		    samplerCube: gl.SAMPLER_CUBE,
		    mat4: gl.FLOAT_MAT4,
		    mat3: gl.FLOAT_MAT3,
		    mat2: gl.FLOAT_MAT2
		};
		exports.default = result;
	
	/***/ },
	/* 27 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.default = {
		    attribute: {
		        position: "POSITION",
		        normal: "NORMAL",
		        texCoord: "TEXCOORD"
		    },
		    uniform: {
		        _time: "TIME",
		        _viewportSize: "VIEWPORT_SIZE",
		        _matL: "LOCAL",
		        _matM: "MODEL",
		        _matV: "VIEW",
		        _matP: "PROJECTION",
		        _matVM: "MODELVIEW",
		        _matPVM: "MODELVIEWPROJECTION",
		        _matIM: "MODELINVERSE",
		        _matIV: "VIEWINVERSE",
		        _matIP: "PROJECTIONINVERSE",
		        _matIVM: "MODELVIEWINVERSE",
		        _matIPVM: "MODELVIEWPROJECTIONINVERSE",
		        _matITM: "MODELINVERMousETRANSPOSE",
		        _matITVM: "MODELVIEWINVERSETRANSPOSE"
		    }
		};
	
	/***/ },
	/* 28 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.ImportResolver = undefined;
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
		
		var _CacheResolver2 = __webpack_require__(3);
		
		var _CacheResolver3 = _interopRequireDefault(_CacheResolver2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
		    return new (P || (P = Promise))(function (resolve, reject) {
		        function fulfilled(value) {
		            try {
		                step(generator.next(value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function rejected(value) {
		            try {
		                step(generator["throw"](value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function step(result) {
		            result.done ? resolve(result.value) : new P(function (resolve) {
		                resolve(result.value);
		            }).then(fulfilled, rejected);
		        }
		        step((generator = generator.apply(thisArg, _arguments || [])).next());
		    });
		};
		
		var ImportResolver = exports.ImportResolver = function (_CacheResolver) {
		    _inherits(ImportResolver, _CacheResolver);
		
		    function ImportResolver() {
		        _classCallCheck(this, ImportResolver);
		
		        var _this = _possibleConstructorReturn(this, (ImportResolver.__proto__ || Object.getPrototypeOf(ImportResolver)).call(this, function (str) {
		            var regex = /^https?:\/\/.*/gm;
		            return regex.test(str) ? ImportResolver._toAbsolute(str) : str;
		        }));
		
		        _this.staticImports = {};
		        return _this;
		    }
		
		    _createClass(ImportResolver, [{
		        key: "resolve",
		        value: function resolve(path) {
		            var _this2 = this;
		
		            return _get(ImportResolver.prototype.__proto__ || Object.getPrototypeOf(ImportResolver.prototype), "resolve", this).call(this, path, function (abs) {
		                return _this2._resolve(path);
		            });
		        }
		    }, {
		        key: "_resolve",
		        value: function _resolve(path) {
		            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
		                return regeneratorRuntime.wrap(function _callee$(_context) {
		                    while (1) {
		                        switch (_context.prev = _context.next) {
		                            case 0:
		                                if (!this.staticImports[path]) {
		                                    _context.next = 4;
		                                    break;
		                                }
		
		                                return _context.abrupt("return", this.staticImports[path]);
		
		                            case 4:
		                                _context.next = 6;
		                                return this._fromExternal(path);
		
		                            case 6:
		                                return _context.abrupt("return", _context.sent);
		
		                            case 7:
		                            case "end":
		                                return _context.stop();
		                        }
		                    }
		                }, _callee, this);
		            }));
		        }
		    }, {
		        key: "_fromExternal",
		        value: function _fromExternal(path) {
		            return new Promise(function (resolve, reject) {
		                var xhr = new XMLHttpRequest();
		                xhr.open("GET", path);
		                xhr.onload = function (v) {
		                    resolve(xhr.responseText);
		                };
		                xhr.onerror = function (e) {
		                    reject(e);
		                };
		                xhr.send();
		            });
		        }
		    }], [{
		        key: "_toAbsolute",
		        value: function _toAbsolute(href) {
		            var link = document.createElement("a");
		            link.href = href;
		            return link.protocol + "//" + link.host + link.pathname + link.search + link.hash;
		        }
		    }]);
		
		    return ImportResolver;
		}(_CacheResolver3.default);
		
		exports.default = new ImportResolver();
	
	/***/ },
	/* 29 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _DefaultMacro = __webpack_require__(30);
		
		var _DefaultMacro2 = _interopRequireDefault(_DefaultMacro);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		 * Manage macros which would be appended head of all shaders grimoire.js would load.
		 */
		var MacroRegistory = function () {
		    function MacroRegistory() {
		        _classCallCheck(this, MacroRegistory);
		
		        /**
		         * The map of macro.
		         */
		        this._macro = {};
		        /**
		         * Handlers functions for changing macro.
		         */
		        this._observers = {};
		        for (var key in _DefaultMacro2.default) {
		            this.setValue(key, _DefaultMacro2.default[key]);
		        }
		    }
		    /**
		     * Set the value of macros.
		     * @param {string}    key [description]
		     * @param {string =   null}        val [description]
		     */
		
		
		    _createClass(MacroRegistory, [{
		        key: "setValue",
		        value: function setValue(key) {
		            var val = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
		
		            if (val === null) {
		                val = "";
		            }
		            if (this._macro[key] !== val) {
		                this._macro[key] = val;
		                if (!this._observers[key]) {
		                    this._observers[key] = [];
		                }
		                this._notifyMacroChanged(key, val);
		            }
		        }
		        /**
		         * Get the value of macro.
		         * @param  {string} key [description]
		         * @return {string}     [description]
		         */
		
		    }, {
		        key: "getValue",
		        value: function getValue(key) {
		            var macro = this._macro[key];
		            if (macro === null) {
		                return "";
		            } else {
		                return macro;
		            }
		        }
		    }, {
		        key: "watch",
		        value: function watch(macroName, handler) {
		            var immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
		
		            var observers = this._observers[macroName];
		            if (!observers) {
		                observers = this._observers[macroName] = [];
		            }
		            observers.push(handler);
		            if (immediate && this._macro[macroName] !== void 0) {
		                handler(this._macro[macroName], true);
		            }
		        }
		    }, {
		        key: "unwatch",
		        value: function unwatch(macroName, handler) {
		            var observers = this._observers[macroName];
		            if (!observers) {
		                return false;
		            }
		            for (var i = 0; i < observers.length; i++) {
		                if (observers[i] === handler) {
		                    observers.splice(i, 1);
		                    return true;
		                }
		            }
		        }
		    }, {
		        key: "_notifyMacroChanged",
		        value: function _notifyMacroChanged(key, value) {
		            for (var i = 0; i < this._observers[key].length; i++) {
		                this._observers[key][i](value, false);
		            }
		        }
		    }]);
		
		    return MacroRegistory;
		}();
		
		exports.default = MacroRegistory;
	
	/***/ },
	/* 30 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.default = {
		    "GRIMOIRE": null,
		    "WEBGL_VERSION": "1"
		};
	
	/***/ },
	/* 31 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Technique = __webpack_require__(32);
		
		var _Technique2 = _interopRequireDefault(_Technique);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var Material = function () {
		    function Material(gl, techniqueRecipes) {
		        _classCallCheck(this, Material);
		
		        this.gl = gl;
		        this.techniqueRecipes = techniqueRecipes;
		        this.argumentDeclarations = {};
		        this.arguments = {};
		        this.macroDeclarations = {};
		        this.techniques = {};
		        this._macroObserver = {};
		        for (var key in techniqueRecipes) {
		            this.techniques[key] = new _Technique2.default(this, techniqueRecipes[key]);
		        }
		    }
		
		    _createClass(Material, [{
		        key: "draw",
		        value: function draw(arg) {
		            var technique = this.techniques[arg.technique];
		            if (technique) {
		                technique.draw(arg);
		            }
		        }
		    }, {
		        key: "addMacroObserver",
		        value: function addMacroObserver(key, macroDeclaration, onChanged) {
		            if (!this._macroObserver[key]) {
		                this._macroObserver[key] = [];
		            }
		            this._macroObserver[key].push(onChanged);
		            this.macroDeclarations[key] = macroDeclaration;
		        }
		    }, {
		        key: "setMacroValue",
		        value: function setMacroValue(key, value) {
		            if (this._macroObserver[key]) {
		                this._macroObserver[key].forEach(function (o) {
		                    return o(value);
		                });
		            }
		        }
		    }, {
		        key: "addArgument",
		        value: function addArgument(key, argumentDeclaration) {
		            this.argumentDeclarations[key] = argumentDeclaration;
		        }
		    }, {
		        key: "deleteArgument",
		        value: function deleteArgument(key) {
		            delete this.argumentDeclarations[key];
		        }
		    }]);
		
		    return Material;
		}();
		
		exports.default = Material;
	
	/***/ },
	/* 32 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Pass = __webpack_require__(33);
		
		var _Pass2 = _interopRequireDefault(_Pass);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var Technique = function () {
		    function Technique(material, recipe) {
		        _classCallCheck(this, Technique);
		
		        this.material = material;
		        this.passes = [];
		        if (recipe.drawOrder === "Auto") {
		            this.drawOrder = "UseAlpha";
		        } else {
		            this.drawOrder = recipe.drawOrder;
		        }
		        this.passes = recipe.passes.map(function (p) {
		            return new _Pass2.default(material, p);
		        });
		    }
		
		    _createClass(Technique, [{
		        key: "draw",
		        value: function draw(args) {
		            for (var i = 0; i < this.passes.length; i++) {
		                this.passes[i].draw(args);
		            }
		        }
		    }, {
		        key: "dispose",
		        value: function dispose() {
		            this.passes.forEach(function (p) {
		                return p.dispose();
		            });
		        }
		    }]);
		
		    return Technique;
		}();
		
		exports.default = Technique;
	
	/***/ },
	/* 33 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _ManagedProgram = __webpack_require__(34);
		
		var _ManagedProgram2 = _interopRequireDefault(_ManagedProgram);
		
		var _ManagedShader = __webpack_require__(39);
		
		var _ManagedShader2 = _interopRequireDefault(_ManagedShader);
		
		var _MaterialFactory = __webpack_require__(21);
		
		var _MaterialFactory2 = _interopRequireDefault(_MaterialFactory);
		
		var _Geometry = __webpack_require__(41);
		
		var _Geometry2 = _interopRequireDefault(_Geometry);
		
		var _UniformResolverRegistry = __webpack_require__(44);
		
		var _UniformResolverRegistry2 = _interopRequireDefault(_UniformResolverRegistry);
		
		var _header = __webpack_require__(45);
		
		var _header2 = _interopRequireDefault(_header);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var Pass = function () {
		    function Pass(material, passRecipe) {
		        var _this = this;
		
		        _classCallCheck(this, Pass);
		
		        this.material = material;
		        this.passRecipe = passRecipe;
		        this._macro = {};
		        var registers = _UniformResolverRegistry2.default.generateRegisterers(material, passRecipe);
		        this._registers = registers.registerers;
		        this._disposers = registers.disposers;
		        this._gl = material.gl;
		        var factory = _MaterialFactory2.default.get(this._gl);
		        var macroRegister = factory.macro;
		        // register macro
		
		        var _loop = function _loop(key) {
		            var macro = passRecipe.macros[key];
		            _this._macro[macro.macroName] = macro.value;
		            if (macro.target === "expose") {
		                _this.material.addMacroObserver(key, {
		                    converter: macro.type === "bool" ? "Boolean" : "Number",
		                    default: macro.value
		                }, function (value) {
		                    if (macro.type === "bool") {
		                        _this._macro[macro.macroName] = value ? "" : undefined;
		                    } else {
		                        _this._macro[macro.macroName] = value;
		                    }
		                    _this._updateProgram();
		                });
		            } else if (macro.target === "refer") {
		                _this._macro[macro.macroName] = macro.value;
		                macroRegister.watch(macro.macroName, function (val, immediate) {
		                    _this._macro[macro.macroName] = val;
		                    if (!immediate) {
		                        _this._updateProgram();
		                    }
		                }, true);
		            }
		        };
		
		        for (var key in passRecipe.macros) {
		            _loop(key);
		        }
		        this._updateProgram();
		        this._disables = Pass._glEnableTargets.concat();
		        for (var i = 0; i < passRecipe.states.enable.length; i++) {
		            var enable = passRecipe.states.enable[i];
		            var index = this._disables.indexOf(enable);
		            if (index > -1) {
		                this._disables.splice(index, 1);
		            }
		        }
		    }
		
		    _createClass(Pass, [{
		        key: "draw",
		        value: function draw(args) {
		            this.program.use();
		            for (var i = 0; i < this._registers.length; i++) {
		                this._registers[i](this.program.uniforms, args);
		            }
		            this._configure();
		            for (var key in this.passRecipe.attributes) {
		                var attribute = this.passRecipe.attributes[key];
		                _Geometry2.default.bindBufferToAttribute(args.geometry, this.program, key, attribute.semantic);
		            }
		            _Geometry2.default.drawWithCurrentVertexBuffer(args.geometry, args.targetBuffer, args.drawCount, args.drawOffset);
		        }
		    }, {
		        key: "dispose",
		        value: function dispose() {
		            for (var i = 0; i < this._disposers.length; i++) {
		                this._disposers[i]();
		            }
		        }
		    }, {
		        key: "_configure",
		        value: function _configure() {
		            var states = this.passRecipe.states;
		            var functions = this.passRecipe.states.functions;
		            for (var i = 0; i < states.enable.length; i++) {
		                this._gl.enable(states.enable[i]);
		            }
		            for (var _i = 0; _i < this._disables.length; _i++) {
		                this._gl.disable(this._disables[_i]);
		            }
		            if (functions.blendColor) {
		                this._gl.blendColor(functions.blendColor[0], functions.blendColor[1], functions.blendColor[2], functions.blendColor[3]);
		            }
		            if (functions.blendEquationSeparate) {
		                this._gl.blendEquationSeparate(functions.blendEquationSeparate[0], functions.blendEquationSeparate[1]);
		            }
		            if (functions.blendFuncSeparate) {
		                this._gl.blendFuncSeparate(functions.blendFuncSeparate[0], functions.blendFuncSeparate[1], functions.blendFuncSeparate[2], functions.blendFuncSeparate[3]);
		            }
		            if (functions.colorMask) {
		                this._gl.colorMask(functions.colorMask[0], functions.colorMask[1], functions.colorMask[2], functions.colorMask[3]);
		            }
		            if (functions.cullFace) {
		                this._gl.cullFace(functions.cullFace[0]);
		            }
		            if (functions.depthFunc) {
		                this._gl.depthFunc(functions.depthFunc[0]);
		            }
		            if (functions.depthMask) {
		                this._gl.depthMask(functions.depthMask[0]);
		            }
		            if (functions.depthRange) {
		                this._gl.depthRange(functions.depthRange[0], functions.depthRange[1]);
		            }
		            if (functions.frontFace) {
		                this._gl.frontFace(functions.frontFace[0]);
		            }
		            if (functions.lineWidth) {
		                this._gl.lineWidth(functions.lineWidth[0]);
		            }
		            if (functions.polygonOffset) {
		                this._gl.polygonOffset(functions.polygonOffset[0], functions.polygonOffset[1]);
		            }
		            if (functions.scissor) {
		                this._gl.scissor(functions.scissor[0], functions.scissor[1], functions.scissor[2], functions.scissor[3]);
		            }
		        }
		    }, {
		        key: "_updateProgram",
		        value: function _updateProgram() {
		            var lFS = this.fs;
		            this.fs = _ManagedShader2.default.getShader(this._gl, WebGLRenderingContext.FRAGMENT_SHADER, this._generateShaderCode("FS"));
		            var lVS = this.vs;
		            this.vs = _ManagedShader2.default.getShader(this._gl, WebGLRenderingContext.VERTEX_SHADER, this._generateShaderCode("VS"));
		            if (lFS && lVS) {
		                lFS.release();
		                lVS.release();
		            }
		            var lP = this.program;
		            this.program = _ManagedProgram2.default.getProgram(this._gl, [this.vs, this.fs]);
		            if (lP) {
		                lP.release();
		            }
		        }
		    }, {
		        key: "_generateShaderCode",
		        value: function _generateShaderCode(shaderType) {
		            return "#define " + shaderType + "\n" + this._macroCode() + "\n" + _header2.default + "/*BEGINNING OF USER CODE*/\n" + (shaderType === "VS" ? this.passRecipe.vertex : this.passRecipe.fragment);
		        }
		    }, {
		        key: "_macroCode",
		        value: function _macroCode() {
		            var macroCode = "";
		            for (var macroName in this._macro) {
		                macroCode += "#define " + macroName + " " + this._macro[macroName] + "\n";
		            }
		            return macroCode;
		        }
		    }]);
		
		    return Pass;
		}();
		
		exports.default = Pass;
		
		Pass._glEnableTargets = [WebGLRenderingContext.CULL_FACE, WebGLRenderingContext.DEPTH_TEST, WebGLRenderingContext.STENCIL_TEST, WebGLRenderingContext.BLEND, WebGLRenderingContext.SCISSOR_TEST, WebGLRenderingContext.DITHER, WebGLRenderingContext.POLYGON_OFFSET_FILL, WebGLRenderingContext.SAMPLE_ALPHA_TO_COVERAGE, WebGLRenderingContext.SAMPLE_COVERAGE];
	
	/***/ },
	/* 34 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _HashCalculator = __webpack_require__(23);
		
		var _HashCalculator2 = _interopRequireDefault(_HashCalculator);
		
		var _Program2 = __webpack_require__(35);
		
		var _Program3 = _interopRequireDefault(_Program2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var ManagedProgram = function (_Program) {
		    _inherits(ManagedProgram, _Program);
		
		    function ManagedProgram(gl, hash) {
		        _classCallCheck(this, ManagedProgram);
		
		        var _this = _possibleConstructorReturn(this, (ManagedProgram.__proto__ || Object.getPrototypeOf(ManagedProgram)).call(this, gl));
		
		        _this.hash = hash;
		        _this._referenceCount = 0;
		        return _this;
		    }
		
		    _createClass(ManagedProgram, [{
		        key: "release",
		        value: function release() {
		            this._referenceCount--;
		            if (this._referenceCount === 0) {
		                this.destroy();
		                ManagedProgram._managedPrograms.get(this.gl)[this.hash] = void 0;
		            }
		        }
		    }], [{
		        key: "getProgram",
		        value: function getProgram(gl, shaders) {
		            if (!ManagedProgram._managedPrograms.has(gl)) {
		                ManagedProgram._managedPrograms.set(gl, {});
		            }
		            var programs = ManagedProgram._managedPrograms.get(gl);
		            var hashSource = "";
		            shaders = shaders.sort();
		            shaders.forEach(function (s) {
		                hashSource += s.index + ",";
		            });
		            var hash = _HashCalculator2.default.calcHash(hashSource);
		            if (programs[hash] === void 0) {
		                programs[hash] = new ManagedProgram(gl, hash);
		                programs[hash].update(shaders);
		            }
		            programs[hash]._referenceCount++;
		            return programs[hash];
		        }
		    }]);
		
		    return ManagedProgram;
		}(_Program3.default);
		
		exports.default = ManagedProgram;
		
		ManagedProgram._managedPrograms = new Map();
	
	/***/ },
	/* 35 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
		
		var _ResourceCache = __webpack_require__(36);
		
		var _ResourceCache2 = _interopRequireDefault(_ResourceCache);
		
		var _UniformProxy = __webpack_require__(37);
		
		var _UniformProxy2 = _interopRequireDefault(_UniformProxy);
		
		var _ResourceBase2 = __webpack_require__(38);
		
		var _ResourceBase3 = _interopRequireDefault(_ResourceBase2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Manages WebGLProgram related stuff.
		 */
		var Program = function (_ResourceBase) {
		    _inherits(Program, _ResourceBase);
		
		    function Program(gl) {
		        _classCallCheck(this, Program);
		
		        var _this = _possibleConstructorReturn(this, (Program.__proto__ || Object.getPrototypeOf(Program)).call(this, gl));
		
		        _this._uniformLocations = {};
		        _this._attributeLocations = {};
		        _this.uniforms = new _UniformProxy2.default(_this);
		        _this.program = gl.createProgram();
		        return _this;
		    }
		    /**
		     * Check this program is the last used one or not.
		     * @return {boolean} [description]
		     */
		
		
		    _createClass(Program, [{
		        key: "update",
		
		        /**
		         * Update program with shader instance.
		         * The array might be set of vertex shader and fragment shader couple.
		         * @param {Shader[]} shaders [description]
		         */
		        value: function update(shaders) {
		            var _this2 = this;
		
		            if (this.valid) {
		                // detach all attached shaders previously
		                var preciousShaders = this.gl.getAttachedShaders(this.program);
		                preciousShaders.forEach(function (s) {
		                    return _this2.gl.detachShader(_this2.program, s);
		                });
		            }
		            this._uniformLocations = {}; // reset location caches
		            this._attributeLocations = {};
		            // attach all shader passed
		            shaders.forEach(function (shader) {
		                _this2.gl.attachShader(_this2.program, shader.shader);
		            });
		            this.gl.linkProgram(this.program); // link program and check errors
		            if (!this.gl.getProgramParameter(this.program, WebGLRenderingContext.LINK_STATUS)) {
		                var errorLog = this.gl.getProgramInfoLog(this.program);
		                throw new Error("LINK FAILED\n" + errorLog);
		            }
		            this.valid = true;
		        }
		        /**
		         * Use this program for drawing.
		         */
		
		    }, {
		        key: "use",
		        value: function use() {
		            if (!this.isLastUsed) {
		                this.gl.useProgram(this.program);
		            }
		            this.uniforms.onUse();
		        }
		        /**
		         * Destroy this instance.
		         */
		
		    }, {
		        key: "destroy",
		        value: function destroy() {
		            _get(Program.prototype.__proto__ || Object.getPrototypeOf(Program.prototype), "destroy", this).call(this);
		            this.gl.deleteProgram(this.program);
		            this._uniformLocations = {};
		            this._attributeLocations = {};
		        }
		        /**
		         * Fetch attribute location from this program.
		         * @param  {string} variableName [description]
		         * @return {number}              [description]
		         */
		
		    }, {
		        key: "findAttributeLocation",
		        value: function findAttributeLocation(variableName) {
		            if (this._attributeLocations[variableName] === void 0) {
		                this._attributeLocations[variableName] = this.gl.getAttribLocation(this.program, variableName);
		                this._safeEnableVertexAttribArray(this._attributeLocations[variableName]);
		                return this._attributeLocations[variableName];
		            } else {
		                return this._attributeLocations[variableName];
		            }
		        }
		        /**
		         * Fetch uniform location from this program
		         * @param  {string}               variableName [description]
		         * @return {WebGLUniformLocation}              [description]
		         */
		
		    }, {
		        key: "findUniformLocation",
		        value: function findUniformLocation(variableName) {
		            var location = this._uniformLocations[variableName];
		            if (location === void 0) {
		                return this._uniformLocations[variableName] = this.gl.getUniformLocation(this.program, variableName);
		            } else {
		                return location;
		            }
		        }
		    }, {
		        key: "_safeEnableVertexAttribArray",
		        value: function _safeEnableVertexAttribArray(location) {
		            if (location < 0) {
		                return;
		            }
		            this.gl.enableVertexAttribArray(location);
		        }
		    }, {
		        key: "isLastUsed",
		        get: function get() {
		            return _ResourceCache2.default.useProgramCheck(this.gl, this.program);
		        }
		    }]);
		
		    return Program;
		}(_ResourceBase3.default);
		
		exports.default = Program;
	
	/***/ },
	/* 36 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var ResourceCache = exports.ResourceCache = function () {
		    function ResourceCache() {
		        _classCallCheck(this, ResourceCache);
		
		        this._lastUsedPrograms = new Map();
		    }
		    /**
		     * Save the specified WebGLProgram as last used program.
		     * And check the specified program was used last time.
		     */
		
		
		    _createClass(ResourceCache, [{
		        key: "useProgramCheck",
		        value: function useProgramCheck(gl, program) {
		            if (this._lastUsedPrograms.get(gl) === program) {
		                return true;
		            }
		            this._lastUsedPrograms.set(gl, program);
		            return false;
		        }
		    }]);
		
		    return ResourceCache;
		}();
		
		exports.default = new ResourceCache();
	
	/***/ },
	/* 37 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var mat3Cache = new Float32Array(9);
		
		var UniformProxy = function () {
		    function UniformProxy(program) {
		        _classCallCheck(this, UniformProxy);
		
		        this.program = program;
		        this._currentTextureRegister = 0;
		        this._gl = program.gl;
		    }
		
		    _createClass(UniformProxy, [{
		        key: "uniformBool",
		        value: function uniformBool(variableName, val) {
		            var _this = this;
		
		            this._pass(variableName, function (l) {
		                return _this._gl.uniform1i(l, val ? 1 : 0);
		            });
		        }
		    }, {
		        key: "uniformMatrix",
		        value: function uniformMatrix(variableName, mat) {
		            var _this2 = this;
		
		            this._pass(variableName, function (l) {
		                _this2._gl.uniformMatrix4fv(l, false, mat.rawElements);
		            });
		        }
		    }, {
		        key: "uniformMatrix3",
		        value: function uniformMatrix3(variableName, mat) {
		            var _this3 = this;
		
		            this._pass(variableName, function (l) {
		                var r = mat.rawElements;
		                for (var i = 0; i < 3; i++) {
		                    mat3Cache[3 * i + 0] = r[4 * i + 0];
		                    mat3Cache[3 * i + 1] = r[4 * i + 1];
		                    mat3Cache[3 * i + 2] = r[4 * i + 2];
		                }
		                _this3._gl.uniformMatrix3fv(l, false, mat3Cache);
		            });
		        }
		    }, {
		        key: "uniformMatrixArray",
		        value: function uniformMatrixArray(variableName, matricies) {
		            var _this4 = this;
		
		            var length = matricies.length / 16;
		
		            var _loop = function _loop(i) {
		                _this4._passAsArray(variableName, i, function (l) {
		                    return _this4._gl.uniformMatrix4fv(l, false, new Float32Array(matricies.buffer, matricies.byteOffset + i * 64));
		                });
		            };
		
		            for (var i = 0; i < length; i++) {
		                _loop(i);
		            }
		        }
		    }, {
		        key: "uniformFloat",
		        value: function uniformFloat(variableName, val) {
		            var _this5 = this;
		
		            this._pass(variableName, function (l) {
		                return _this5._gl.uniform1f(l, val);
		            });
		        }
		    }, {
		        key: "uniformFloatArray",
		        value: function uniformFloatArray(variableName, val) {
		            var _this6 = this;
		
		            this._pass(variableName, function (l) {
		                return _this6._gl.uniform1fv(l, val);
		            });
		        }
		    }, {
		        key: "uniformInt",
		        value: function uniformInt(variableName, val) {
		            var _this7 = this;
		
		            this._pass(variableName, function (l) {
		                return _this7._gl.uniform1i(l, val);
		            });
		        }
		    }, {
		        key: "uniformVector2",
		        value: function uniformVector2(variableName, val) {
		            var _this8 = this;
		
		            this._pass(variableName, function (l) {
		                return _this8._gl.uniform2f(l, val.X, val.Y);
		            });
		        }
		    }, {
		        key: "uniformIntVector2",
		        value: function uniformIntVector2(variableName, val) {
		            var _this9 = this;
		
		            this._pass(variableName, function (l) {
		                return _this9._gl.uniform2i(l, val.X, val.Y);
		            });
		        }
		    }, {
		        key: "uniformVector2Array",
		        value: function uniformVector2Array(variableName, val) {
		            var _this10 = this;
		
		            this._pass(variableName, function (l) {
		                return _this10._gl.uniform2fv(l, val);
		            });
		        }
		    }, {
		        key: "uniformVector3",
		        value: function uniformVector3(variableName, val) {
		            var _this11 = this;
		
		            this._pass(variableName, function (l) {
		                return _this11._gl.uniform3f(l, val.X, val.Y, val.Z);
		            });
		        }
		    }, {
		        key: "uniformIntVector3",
		        value: function uniformIntVector3(variableName, val) {
		            var _this12 = this;
		
		            this._pass(variableName, function (l) {
		                return _this12._gl.uniform3i(l, val.X, val.Y, val.Z);
		            });
		        }
		    }, {
		        key: "uniformVector3Array",
		        value: function uniformVector3Array(variableName, val) {
		            var _this13 = this;
		
		            this._pass(variableName, function (l) {
		                return _this13._gl.uniform3fv(l, val);
		            });
		        }
		    }, {
		        key: "uniformColor3",
		        value: function uniformColor3(variableName, val) {
		            var _this14 = this;
		
		            this._pass(variableName, function (l) {
		                return _this14._gl.uniform3f(l, val.R, val.G, val.B);
		            });
		        }
		    }, {
		        key: "uniformVector4",
		        value: function uniformVector4(variableName, val) {
		            var _this15 = this;
		
		            this._pass(variableName, function (l) {
		                return _this15._gl.uniform4f(l, val.X, val.Y, val.Z, val.W);
		            });
		        }
		    }, {
		        key: "uniformIntVector4",
		        value: function uniformIntVector4(variableName, val) {
		            var _this16 = this;
		
		            this._pass(variableName, function (l) {
		                return _this16._gl.uniform4f(l, val.X, val.Y, val.Z, val.W);
		            });
		        }
		    }, {
		        key: "uniformVector4Array",
		        value: function uniformVector4Array(variableName, val) {
		            var _this17 = this;
		
		            this._pass(variableName, function (l) {
		                return _this17._gl.uniform4fv(l, val);
		            });
		        }
		    }, {
		        key: "uniformColor4",
		        value: function uniformColor4(variableName, val) {
		            var _this18 = this;
		
		            this._pass(variableName, function (l) {
		                return _this18._gl.uniform4f(l, val.R, val.G, val.B, val.A);
		            });
		        }
		    }, {
		        key: "uniformTexture2D",
		        value: function uniformTexture2D(variableName, val) {
		            if (val.valid) {
		                val.register(this._currentTextureRegister);
		                this.uniformInt(variableName, this._currentTextureRegister);
		                this._currentTextureRegister++;
		            } else {
		                console.warn("The texture assigned to '" + variableName + "' is not valid.");
		            }
		        }
		    }, {
		        key: "onUse",
		        value: function onUse() {
		            this._currentTextureRegister = 0;
		        }
		    }, {
		        key: "_pass",
		        value: function _pass(variableName, act) {
		            var location = this.program.findUniformLocation(variableName);
		            if (location) {
		                act(location);
		            }
		        }
		    }, {
		        key: "_passAsArray",
		        value: function _passAsArray(variableName, index, act) {
		            var location = this.program.findUniformLocation(variableName + "[" + index + "]");
		            if (location) {
		                act(location);
		            }
		        }
		    }]);
		
		    return UniformProxy;
		}();
		
		exports.default = UniformProxy;
	
	/***/ },
	/* 38 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var ResourceBase = function () {
		    function ResourceBase(gl) {
		        _classCallCheck(this, ResourceBase);
		
		        this.gl = gl;
		        this.destroyed = false;
		        this.index = ResourceBase._maxIndex++;
		        this.valid = false;
		    }
		
		    _createClass(ResourceBase, [{
		        key: "destroy",
		        value: function destroy() {
		            this.destroyed = true;
		        }
		    }, {
		        key: "valid",
		        get: function get() {
		            return this._valid;
		        },
		        set: function set(val) {
		            var _this = this;
		
		            if (this._valid === val) {
		                return;
		            }
		            this._valid = val;
		            if (this._valid) {
		                this._validResolve(this);
		            } else {
		                this.validPromise = new Promise(function (resolve) {
		                    _this._validResolve = resolve;
		                });
		            }
		        }
		    }]);
		
		    return ResourceBase;
		}();
		
		ResourceBase._maxIndex = 0;
		exports.default = ResourceBase;
	
	/***/ },
	/* 39 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _HashCalculator = __webpack_require__(23);
		
		var _HashCalculator2 = _interopRequireDefault(_HashCalculator);
		
		var _Shader2 = __webpack_require__(40);
		
		var _Shader3 = _interopRequireDefault(_Shader2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * Provides abstraction of shader instance.
		 * If specified shader source was instanced already, delegate actual instance.
		 * And counts reference of shader and if that shader was released and the count is zero, this shader resource would be deleted automatically.
		 *
		 * DO NOT instanciate this class directly. Use getShader method instead.
		 */
		var ManagedShader = function (_Shader) {
		    _inherits(ManagedShader, _Shader);
		
		    function ManagedShader(gl, type, sourceCode, hash) {
		        _classCallCheck(this, ManagedShader);
		
		        var _this = _possibleConstructorReturn(this, (ManagedShader.__proto__ || Object.getPrototypeOf(ManagedShader)).call(this, gl, type, sourceCode));
		
		        _this.type = type;
		        _this.sourceCode = sourceCode;
		        _this.hash = hash;
		        _this._referenceCount = 0;
		        return _this;
		    }
		    /**
		     * Obtain a reference to shader.
		     * @param  {WebGLRenderingContext} gl     [description]
		     * @param  {number}                type   [description]
		     * @param  {string}                shader [description]
		     * @return {ManagedShader}                [description]
		     */
		
		
		    _createClass(ManagedShader, [{
		        key: "release",
		
		        /**
		         * Release shader instance from reference.
		         * Do not call this method dupelicately per a getShader call.
		         *
		         * That would make this shader disposed unintendedly.
		         */
		        value: function release() {
		            this._referenceCount--;
		            if (this._referenceCount === 0) {
		                this.destroy();
		                ManagedShader._managedShaders.get(this.gl)[this.hash] = void 0;
		            }
		        }
		    }], [{
		        key: "getShader",
		        value: function getShader(gl, type, shader) {
		            if (!ManagedShader._managedShaders.has(gl)) {
		                ManagedShader._managedShaders.set(gl, {});
		            }
		            var shaders = ManagedShader._managedShaders.get(gl);
		            var hash = _HashCalculator2.default.calcHash(shader + type);
		            if (shaders[hash] === void 0) {
		                shaders[hash] = new ManagedShader(gl, type, shader, hash);
		            }
		            shaders[hash]._referenceCount++;
		            return shaders[hash];
		        }
		    }]);
		
		    return ManagedShader;
		}(_Shader3.default);
		
		exports.default = ManagedShader;
		
		ManagedShader._managedShaders = new Map();
	
	/***/ },
	/* 40 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
		
		var _ResourceBase2 = __webpack_require__(38);
		
		var _ResourceBase3 = _interopRequireDefault(_ResourceBase2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var Shader = function (_ResourceBase) {
		    _inherits(Shader, _ResourceBase);
		
		    function Shader(gl, type, sourceCode) {
		        _classCallCheck(this, Shader);
		
		        var _this = _possibleConstructorReturn(this, (Shader.__proto__ || Object.getPrototypeOf(Shader)).call(this, gl));
		
		        _this.type = type;
		        _this.sourceCode = sourceCode;
		        _this.shader = gl.createShader(type);
		        if (sourceCode) {
		            _this.update(sourceCode);
		        }
		        return _this;
		    }
		
		    _createClass(Shader, [{
		        key: "update",
		        value: function update(source) {
		            this.gl.shaderSource(this.shader, source);
		            this.gl.compileShader(this.shader);
		            if (!this.gl.getShaderParameter(this.shader, WebGLRenderingContext.COMPILE_STATUS)) {
		                throw new Error("Compiling shader failed.\nSourceCode:\n" + this._insertLineNumbers(source) + "\n\nErrorCode:" + this.gl.getShaderInfoLog(this.shader));
		            }
		            this.sourceCode = source;
		            this.valid = true;
		        }
		    }, {
		        key: "destroy",
		        value: function destroy() {
		            _get(Shader.prototype.__proto__ || Object.getPrototypeOf(Shader.prototype), "destroy", this).call(this);
		            this.gl.deleteShader(this.shader);
		        }
		    }, {
		        key: "_insertLineNumbers",
		        value: function _insertLineNumbers(source) {
		            source = "1:" + source;
		            var lN = 2;
		            for (var i = 0; i < source.length; i++) {
		                var c = source.charAt(i);
		                if (c === '\n') {
		                    source = source.substring(0, i + 1) + (lN + ":") + source.substring(i + 1, source.length);
		                    i++;
		                    lN++;
		                }
		            }
		            return source;
		        }
		    }]);
		
		    return Shader;
		}(_ResourceBase3.default);
		
		exports.default = Shader;
	
	/***/ },
	/* 41 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Vector = __webpack_require__(14);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		var _AABB = __webpack_require__(42);
		
		var _AABB2 = _interopRequireDefault(_AABB);
		
		var _Buffer = __webpack_require__(43);
		
		var _Buffer2 = _interopRequireDefault(_Buffer);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		 * The geometry class for managing buffer resource
		 */
		var Geometry = function () {
		    function Geometry(gl) {
		        _classCallCheck(this, Geometry);
		
		        this.gl = gl;
		        /**
		         * Vertex buffer
		         * @type {Buffer[]}
		         */
		        this.buffers = [];
		        this.indices = {};
		        this.accessors = {};
		        this.aabb = new _AABB2.default([_Vector2.default.Zero]);
		    }
		
		    _createClass(Geometry, [{
		        key: "addAttributes",
		        value: function addAttributes(buffer, accessors) {
		            var usage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : WebGLRenderingContext.STATIC_DRAW;
		
		            buffer = this._ensureToBeVertexBuffer(buffer, usage);
		            var index = this.buffers.length;
		            this.buffers.push(buffer);
		            for (var semantic in accessors) {
		                var accessor = accessors[semantic];
		                accessor.bufferIndex = index;
		                if (accessor.size === void 0) {
		                    throw new Error("Accessor specified with the semantics \"" + semantic + "\" is not containing size as paranmeter.");
		                }
		                if (accessor.type === void 0) {
		                    accessor.type = WebGLRenderingContext.FLOAT;
		                }
		                if (accessor.stride === void 0) {
		                    accessor.stride = accessor.size * this._attribTypeToByteSize(accessor.type);
		                }
		                if (accessor.offset === void 0) {
		                    accessor.offset = 0;
		                }
		                this.accessors[semantic] = accessor;
		            }
		        }
		        /**
		         * add new index buffer to this geometry.
		         * @param {string}                       indexName [description]
		         * @param {Buffer|number[]|BufferSource} buffer    [description]
		         * @param {number                    =         WebGLRenderingContext.TRIANGLES} topology [description]
		         * @param {number                    =         0}                               offset   [description]
		         * @param {number                    =         null}                            count    [description]
		         * @param {number                    =         0}                               type     [description]
		         */
		
		    }, {
		        key: "addIndex",
		        value: function addIndex(indexName, buffer) {
		            var topology = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : WebGLRenderingContext.TRIANGLES;
		            var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
		            var count = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
		            var type = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;
		
		            if (!count) {
		                if (buffer instanceof _Buffer2.default || buffer instanceof ArrayBuffer || buffer instanceof DataView) {
		                    throw new Error("The argument 'count' is necessary if you specified buffer with an instance of Buffer or ArrayBuffer");
		                } else {
		                    count = buffer["length"];
		                }
		            }
		            if (type === 0) {
		                type = this._indexTypeFromCount(count);
		            }
		            buffer = this._ensureToBeIndexBuffer(buffer, type);
		            this.indices[indexName] = {
		                byteOffset: offset,
		                byteSize: this._indexTypeToByteSize(type),
		                type: type,
		                topology: topology,
		                count: count,
		                index: buffer
		            };
		        }
		    }, {
		        key: "drawByDefault",
		        value: function drawByDefault(indexName, attribNames, program) {
		            var _this = this;
		
		            var count = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Number.MAX_VALUE;
		            var offset = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
		
		            attribNames.forEach(function (name) {
		                Geometry.bindBufferToAttribute(_this, program, name, name);
		            });
		            Geometry.drawWithCurrentVertexBuffer(this, indexName, count, offset);
		        }
		        /**
		         * bind a vertex buffer to specified attribute variable.
		         * @param  {Geometry} geometry      [description]
		         * @param  {Program}  program       [description]
		         * @param  {string}   attributeName [description]
		         * @param  {string}   semantics    [description]
		         * @return {boolean}                [description]
		         */
		
		    }, {
		        key: "_ensureToBeVertexBuffer",
		
		        /**
		         * Make sure buffer sources converted into Buffer
		         * @param  {Buffer|BufferSource|number[]} buffer [description]
		         * @return {Buffer}                              [description]
		         */
		        value: function _ensureToBeVertexBuffer(buffer, usage) {
		            if (!(buffer instanceof _Buffer2.default)) {
		                var bufferSource = buffer;
		                if (Array.isArray(bufferSource)) {
		                    bufferSource = new Float32Array(bufferSource);
		                }
		                buffer = new _Buffer2.default(this.gl, WebGLRenderingContext.ARRAY_BUFFER, usage);
		                buffer.update(bufferSource);
		            }
		            return buffer;
		        }
		        /**
		         * Make sure buffer sources converted into Buffer
		         * @param  {Buffer|BufferSource|number[]} buffer [description]
		         * @return {Buffer}                              [description]
		         */
		
		    }, {
		        key: "_ensureToBeIndexBuffer",
		        value: function _ensureToBeIndexBuffer(buffer, type) {
		            if (!(buffer instanceof _Buffer2.default)) {
		                var bufferSource = buffer;
		                if (Array.isArray(bufferSource)) {
		                    bufferSource = new (this._indexTypeToArrayConstructor(type))(bufferSource);
		                }
		                buffer = new _Buffer2.default(this.gl, WebGLRenderingContext.ELEMENT_ARRAY_BUFFER, WebGLRenderingContext.STATIC_DRAW);
		                buffer.update(bufferSource);
		            } else {
		                if (buffer.target !== WebGLRenderingContext.ELEMENT_ARRAY_BUFFER) {
		                    throw new Error("The usage of buffer specified as index buffer is not ELEMENT_ARRAY_BUFFER");
		                }
		            }
		            return buffer;
		        }
		    }, {
		        key: "_indexTypeFromCount",
		        value: function _indexTypeFromCount(count) {
		            if (count < 256) {
		                return WebGLRenderingContext.UNSIGNED_BYTE;
		            } else if (count < 65536) {
		                return WebGLRenderingContext.UNSIGNED_SHORT;
		            } else if (count < 4294967296) {
		                return WebGLRenderingContext.UNSIGNED_INT;
		            } else {
		                throw new Error("Index count exceeds 4,294,967,296. WebGL can not handle such a big index buffer");
		            }
		        }
		    }, {
		        key: "_indexTypeToArrayConstructor",
		        value: function _indexTypeToArrayConstructor(type) {
		            switch (type) {
		                case WebGLRenderingContext.UNSIGNED_BYTE:
		                    return Uint8Array;
		                case WebGLRenderingContext.UNSIGNED_SHORT:
		                    return Uint16Array;
		                case WebGLRenderingContext.UNSIGNED_INT:
		                    return Uint32Array;
		                default:
		                    throw new Error("Unsupported index type");
		            }
		        }
		    }, {
		        key: "_indexTypeToByteSize",
		        value: function _indexTypeToByteSize(type) {
		            switch (type) {
		                case WebGLRenderingContext.UNSIGNED_BYTE:
		                    return 1;
		                case WebGLRenderingContext.UNSIGNED_SHORT:
		                    return 2;
		                case WebGLRenderingContext.UNSIGNED_INT:
		                    return 4;
		                default:
		                    throw new Error("Unsupported index type");
		            }
		        }
		    }, {
		        key: "_attribTypeToByteSize",
		        value: function _attribTypeToByteSize(type) {
		            switch (type) {
		                case WebGLRenderingContext.FLOAT:
		                    return 4;
		                default:
		                    throw new Error("Unsupported attribute variable type \"" + type + "\"");
		            }
		        }
		    }], [{
		        key: "bindBufferToAttribute",
		        value: function bindBufferToAttribute(geometry, program, attributeName, semantics) {
		            var index = program.findAttributeLocation(attributeName);
		            if (index < 0) {
		                return false;
		            }
		            var accessors = geometry.accessors[semantics];
		            if (!accessors) {
		                throw new Error("Specified buffer \"" + semantics + " was not found on this geometry while attempt to bind \"" + attributeName + "\" of attribute variables.\n\n\t  All of the vertex buffer available on this geometry is " + Object.keys(geometry.accessors) + "\"");
		            }
		            var buffer = geometry.buffers[accessors.bufferIndex];
		            buffer.bind();
		            program.gl.vertexAttribPointer(index, accessors.size, accessors.type, false, accessors.stride, accessors.offset);
		            return true;
		        }
		    }, {
		        key: "drawWithCurrentVertexBuffer",
		        value: function drawWithCurrentVertexBuffer(geometry, indexName) {
		            var count = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.MAX_VALUE;
		            var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
		
		            var targetIndex = geometry.indices[indexName];
		            if (targetIndex === void 0) {
		                throw new Error("Specified index buffer \"" + indexName + "\" was not found on this geometry.All of the index buffer available on this geometry is \"" + Object.keys(geometry.indices) + "\"");
		            }
		            targetIndex.index.bind();
		            targetIndex.index.gl.drawElements(targetIndex.topology, Math.min(targetIndex.count, count), targetIndex.type, Math.min(offset * targetIndex.byteSize + targetIndex.byteOffset, targetIndex.byteOffset + (targetIndex.count - 1) * targetIndex.byteSize));
		        }
		    }]);
		
		    return Geometry;
		}();
		
		exports.default = Geometry;
		
		Geometry._lastGeometry = new Map();
	
	/***/ },
	/* 42 */
	/***/ function(module, exports) {
	
			Object.defineProperty(exports, "__esModule", {
			    value: true
			});exports.default=window.GrimoireJS.lib.math.AABB;
	
	/***/ },
	/* 43 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
		
		var _ResourceBase2 = __webpack_require__(38);
		
		var _ResourceBase3 = _interopRequireDefault(_ResourceBase2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var Buffer = function (_ResourceBase) {
		    _inherits(Buffer, _ResourceBase);
		
		    function Buffer(gl) {
		        var target = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : WebGLRenderingContext.ARRAY_BUFFER;
		        var usage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : WebGLRenderingContext.STATIC_DRAW;
		
		        _classCallCheck(this, Buffer);
		
		        var _this = _possibleConstructorReturn(this, (Buffer.__proto__ || Object.getPrototypeOf(Buffer)).call(this, gl));
		
		        _this.target = target;
		        _this.usage = usage;
		        _this.buffer = gl.createBuffer();
		        return _this;
		    }
		
		    _createClass(Buffer, [{
		        key: "update",
		        value: function update(length, subBuffer) {
		            this.bind();
		            if (subBuffer) {
		                if (!this.valid) {
		                    this.gl.bufferData(this.target, length + subBuffer.byteLength, this.usage);
		                }
		                this.gl.bufferSubData(this.target, length, subBuffer);
		            } else {
		                if (typeof length === "number") {
		                    this.gl.bufferData(this.target, length, this.usage);
		                } else {
		                    this.gl.bufferData(this.target, length, this.usage);
		                }
		            }
		            this.valid = true;
		        }
		    }, {
		        key: "bind",
		        value: function bind() {
		            this.gl.bindBuffer(this.target, this.buffer);
		        }
		    }, {
		        key: "destroy",
		        value: function destroy() {
		            _get(Buffer.prototype.__proto__ || Object.getPrototypeOf(Buffer.prototype), "destroy", this).call(this);
		            this.gl.deleteBuffer(this.buffer);
		        }
		    }]);
		
		    return Buffer;
		}(_ResourceBase3.default);
		
		exports.default = Buffer;
	
	/***/ },
	/* 44 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var UniformResolverRegistry = exports.UniformResolverRegistry = function () {
		    function UniformResolverRegistry() {
		        _classCallCheck(this, UniformResolverRegistry);
		
		        this._generators = {};
		    }
		
		    _createClass(UniformResolverRegistry, [{
		        key: "add",
		        value: function add(semantic, generator) {
		            if (typeof generator !== "function") {
		                throw new Error("secound argument of add must be function");
		            }
		            this._generators[semantic.toUpperCase()] = generator;
		        }
		    }, {
		        key: "generateRegisterers",
		        value: function generateRegisterers(material, passInfo) {
		            var registerers = [],
		                disposers = [];
		            for (var key in passInfo.uniforms) {
		                var valueInfo = passInfo.uniforms[key];
		                var semantic = valueInfo.semantic;
		                var registeredGenerator = this._generators[semantic];
		                if (!registeredGenerator) {
		                    throw new Error("There was no suitable registerer for specified semantic " + semantic);
		                }
		                var registerer = registeredGenerator(valueInfo, material);
		                if (typeof registerer === "function") {
		                    registerers.push(registerer);
		                } else {
		                    registerers.push(registerer.register);
		                    if (registerer.dispose) {
		                        disposers.push(registerer.dispose);
		                    }
		                }
		            }
		            return {
		                registerers: registerers,
		                disposers: disposers
		            };
		        }
		    }]);
		
		    return UniformResolverRegistry;
		}();
		
		exports.default = new UniformResolverRegistry();
	
	/***/ },
	/* 45 */
	/***/ function(module, exports) {
	
		module.exports = "/*Header start*/\n// helper macros\n#ifdef FS\n  #define FS_PREC(prec,type) precision prec type;\n  #define VS_PREC(prec,type)\n#endif\n#ifdef VS\n#define VS_PREC(prec,type) precision prec type;\n#define FS_PREC(prec,type)\n#endif\n// constants\n#define PI 3.141592653589793\n#define E 2.718281828459045\n#define LN2 0.6931471805599453\n#define LN10 2.302585092994046\n#define LOG2E 1.4426950408889634\n#define LOG10E 0.4342944819032518\n#define SQRT2 1.4142135623730951\n#define SQRT1_2 0.7071067811865476\n\n/*Header end*/\n"
	
	/***/ },
	/* 46 */
	/***/ function(module, exports) {
	
			Object.defineProperty(exports, "__esModule", {
			    value: true
			});exports.default=window.GrimoireJS.GrimoireInterface;
	
	/***/ },
	/* 47 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
		
		var _ResourceBase2 = __webpack_require__(38);
		
		var _ResourceBase3 = _interopRequireDefault(_ResourceBase2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var Texture2D = function (_ResourceBase) {
		    _inherits(Texture2D, _ResourceBase);
		
		    function Texture2D(gl) {
		        _classCallCheck(this, Texture2D);
		
		        var _this = _possibleConstructorReturn(this, (Texture2D.__proto__ || Object.getPrototypeOf(Texture2D)).call(this, gl));
		
		        _this._texParameterChanged = true;
		        _this._magFilter = WebGLRenderingContext.LINEAR;
		        _this._minFilter = WebGLRenderingContext.LINEAR;
		        _this._wrapS = WebGLRenderingContext.REPEAT;
		        _this._wrapT = WebGLRenderingContext.REPEAT;
		        if (!Texture2D._maxTextureSize) {
		            Texture2D._maxTextureSize = gl.getParameter(WebGLRenderingContext.MAX_TEXTURE_SIZE);
		        }
		        _this.texture = gl.createTexture();
		        return _this;
		    }
		
		    _createClass(Texture2D, [{
		        key: "update",
		        value: function update(levelOrImage, widthOrConfig, height, border, format, type, pixels, config) {
		            this.gl.bindTexture(WebGLRenderingContext.TEXTURE_2D, this.texture);
		            var uploadConfig = void 0;
		            var image = void 0;
		            var width = void 0;
		            var level = void 0;
		            if (height === void 0) {
		                uploadConfig = widthOrConfig || {
		                    flipY: false,
		                    premultipliedAlpha: false
		                };
		                image = levelOrImage;
		            } else {
		                level = levelOrImage;
		                width = widthOrConfig;
		                uploadConfig = config || {
		                    flipY: false,
		                    premultipliedAlpha: false
		                };
		            }
		            if (uploadConfig.flipY === void 0) {
		                uploadConfig.flipY = false;
		            }
		            if (uploadConfig.premultipliedAlpha === void 0) {
		                uploadConfig.premultipliedAlpha = false;
		            }
		            this.gl.pixelStorei(WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL, uploadConfig.flipY ? 1 : 0);
		            this.gl.pixelStorei(WebGLRenderingContext.UNPACK_PREMULTIPLY_ALPHA_WEBGL, uploadConfig.premultipliedAlpha ? 1 : 0);
		            if (height === void 0) {
		                if (image instanceof HTMLImageElement) {
		                    this.gl.texImage2D(WebGLRenderingContext.TEXTURE_2D, 0, WebGLRenderingContext.RGBA, WebGLRenderingContext.RGBA, WebGLRenderingContext.UNSIGNED_BYTE, this._justifyImage(image));
		                } else if (image instanceof HTMLCanvasElement) {
		                    this.gl.texImage2D(WebGLRenderingContext.TEXTURE_2D, 0, WebGLRenderingContext.RGBA, WebGLRenderingContext.RGBA, WebGLRenderingContext.UNSIGNED_BYTE, this._justifyCanvas(image));
		                } else if (image instanceof HTMLVideoElement) {
		                    this.gl.texImage2D(WebGLRenderingContext.TEXTURE_2D, 0, WebGLRenderingContext.RGBA, WebGLRenderingContext.RGBA, WebGLRenderingContext.UNSIGNED_BYTE, this._justifyVideo(image));
		                }
		            } else {
		                if (pixels === void 0) {
		                    pixels = null;
		                }
		                this.gl.texImage2D(WebGLRenderingContext.TEXTURE_2D, level, format, width, height, border, format, type, pixels);
		            }
		            this._ensureMipmap();
		            this.valid = true;
		        }
		    }, {
		        key: "register",
		        value: function register(registerNumber) {
		            this.gl.activeTexture(WebGLRenderingContext.TEXTURE0 + registerNumber);
		            this.gl.bindTexture(WebGLRenderingContext.TEXTURE_2D, this.texture);
		            if (this._texParameterChanged) {
		                this._updateTexParameter();
		            }
		        }
		    }, {
		        key: "destroy",
		        value: function destroy() {
		            _get(Texture2D.prototype.__proto__ || Object.getPrototypeOf(Texture2D.prototype), "destroy", this).call(this);
		            this.gl.deleteTexture(this.texture);
		        }
		        // There should be more effective way to resize texture
		
		    }, {
		        key: "_justifyImage",
		        value: function _justifyImage(img) {
		            var w = img.naturalWidth,
		                h = img.naturalHeight;
		            var size = Math.min(Math.pow(2, Math.log(Math.min(w, h)) / Math.LN2 | 0), Texture2D._maxTextureSize); // largest 2^n integer that does not exceed s
		            if (w !== h || w !== size) {
		                var canv = document.createElement("canvas");
		                canv.height = canv.width = size;
		                canv.getContext("2d").drawImage(img, 0, 0, w, h, 0, 0, size, size);
		                return canv;
		            }
		            return img;
		        }
		    }, {
		        key: "_justifyCanvas",
		        value: function _justifyCanvas(canvas) {
		            var w = canvas.width;
		            var h = canvas.height;
		            var size = Math.pow(2, Math.log(Math.min(w, h)) / Math.LN2 | 0); // largest 2^n integer that does not exceed s
		            if (w !== h || w !== size) {
		                canvas.height = canvas.width = size * 2;
		            }
		            return canvas;
		        }
		    }, {
		        key: "_justifyVideo",
		        value: function _justifyVideo(video) {
		            var w = video.videoWidth,
		                h = video.videoHeight;
		            var size = Math.pow(2, Math.log(Math.min(w, h)) / Math.LN2 | 0); // largest 2^n integer that does not exceed s
		            if (w !== h || w !== size) {
		                var canv = document.createElement("canvas");
		                canv.height = canv.width = size;
		                canv.getContext("2d").drawImage(video, 0, 0, w, h, 0, 0, size, size);
		                return canv;
		            }
		            return video;
		        }
		    }, {
		        key: "_updateTexParameter",
		        value: function _updateTexParameter() {
		            this.gl.texParameteri(WebGLRenderingContext.TEXTURE_2D, WebGLRenderingContext.TEXTURE_MIN_FILTER, this._minFilter);
		            this.gl.texParameteri(WebGLRenderingContext.TEXTURE_2D, WebGLRenderingContext.TEXTURE_MAG_FILTER, this._magFilter);
		            this.gl.texParameteri(WebGLRenderingContext.TEXTURE_2D, WebGLRenderingContext.TEXTURE_WRAP_S, this._wrapS);
		            this.gl.texParameteri(WebGLRenderingContext.TEXTURE_2D, WebGLRenderingContext.TEXTURE_WRAP_T, this._wrapT);
		            this._texParameterChanged = false;
		        }
		    }, {
		        key: "_ensureMipmap",
		        value: function _ensureMipmap() {
		            if (Texture2D._filtersNeedsMipmap.indexOf(this.magFilter) >= 0 || Texture2D._filtersNeedsMipmap.indexOf(this.minFilter) >= 0) {
		                this.gl.bindTexture(WebGLRenderingContext.TEXTURE_2D, this.texture);
		                this.gl.generateMipmap(WebGLRenderingContext.TEXTURE_2D);
		            }
		        }
		    }, {
		        key: "magFilter",
		        get: function get() {
		            return this._magFilter;
		        },
		        set: function set(filter) {
		            if (this._magFilter !== filter) {
		                this._texParameterChanged = true;
		                this._magFilter = filter;
		                this._ensureMipmap();
		            }
		        }
		    }, {
		        key: "minFilter",
		        get: function get() {
		            return this._minFilter;
		        },
		        set: function set(filter) {
		            if (this._minFilter !== filter) {
		                this._texParameterChanged = true;
		                this._minFilter = filter;
		                this._ensureMipmap();
		            }
		        }
		    }, {
		        key: "wrapS",
		        get: function get() {
		            return this._wrapS;
		        },
		        set: function set(filter) {
		            if (this._wrapS !== filter) {
		                this._texParameterChanged = true;
		                this._wrapS = filter;
		            }
		        }
		    }, {
		        key: "wrapT",
		        get: function get() {
		            return this._wrapT;
		        },
		        set: function set(filter) {
		            if (this._wrapT !== filter) {
		                this._texParameterChanged = true;
		                this._wrapT = filter;
		            }
		        }
		    }], [{
		        key: "generateDefaultTexture",
		        value: function generateDefaultTexture(gl) {
		            Texture2D.defaultTextures.set(gl, null); // for preventing called this method recursively by instanciating default texture
		            var texture = new Texture2D(gl);
		            texture.update(0, 1, 1, 0, WebGLRenderingContext.RGBA, WebGLRenderingContext.UNSIGNED_BYTE, new Uint8Array([0, 0, 0, 0]));
		            Texture2D.defaultTextures.set(gl, texture);
		        }
		    }]);
		
		    return Texture2D;
		}(_ResourceBase3.default);
		
		exports.default = Texture2D;
		
		Texture2D.defaultTextures = new Map();
		/**
		 * ミップマップの更新が必要なフィルタ
		 * @type {number[]}
		 */
		Texture2D._filtersNeedsMipmap = [WebGLRenderingContext.LINEAR_MIPMAP_LINEAR, WebGLRenderingContext.LINEAR_MIPMAP_NEAREST, WebGLRenderingContext.NEAREST_MIPMAP_LINEAR, WebGLRenderingContext.NEAREST_MIPMAP_NEAREST];
	
	/***/ },
	/* 48 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _MaterialFactory = __webpack_require__(21);
		
		var _MaterialFactory2 = _interopRequireDefault(_MaterialFactory);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var GLExtRequestor = function () {
		    function GLExtRequestor(gl) {
		        _classCallCheck(this, GLExtRequestor);
		
		        this.gl = gl;
		        this.extensions = {};
		        this._readyExtensions = {};
		        this._resolveRequested();
		        GLExtRequestor._requestObserver.push(this._resolveExtensionSafely);
		    }
		    /**
		     * Request extension to use.
		     * @param {string} str [description]
		     */
		
		
		    _createClass(GLExtRequestor, [{
		        key: "_resolveRequested",
		
		        /**
		         * Resolve all extension requested already.
		         */
		        value: function _resolveRequested() {
		            var _this = this;
		
		            GLExtRequestor._requestedExtensions.forEach(function (e) {
		                _this._resolveExtensionSafely(e.extensionName);
		            });
		        }
		    }, {
		        key: "_resolveExtensionSafely",
		        value: function _resolveExtensionSafely(extName) {
		            var e = GLExtRequestor._requestedExtensions[GLExtRequestor._requestIndexOf(extName)];
		            if (!this._resolveExtension(e.extensionName) && e.isNecessary) {
		                throw new Error("A WebGL extension '" + e.extensionName + "' was requested. But that is not supported on this device.");
		            }
		        }
		    }, {
		        key: "_resolveExtension",
		        value: function _resolveExtension(name) {
		            if (this._readyExtensions[name]) {
		                return true;
		            }
		            var ext = void 0;
		            if (typeof GLExtRequestor._customExtensionResolvers[name] === "undefined") {
		                ext = this.extensions[name] = this.gl.getExtension(name);
		            } else {
		                ext = this.extensions[name] = GLExtRequestor._customExtensionResolvers[name](this.gl);
		            }
		            this._readyExtensions[name] = this.extensions[name] !== void 0;
		            if (ext) {
		                _MaterialFactory2.default.get(this.gl).macro.setValue(name.toUpperCase(), "");
		            }
		            return !!this._readyExtensions[name];
		        }
		    }], [{
		        key: "request",
		        value: function request(extName) {
		            var isNecessary = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
		
		            var index = GLExtRequestor._requestIndexOf(extName);
		            if (index > -1 && isNecessary) {
		                GLExtRequestor._requestedExtensions[index] = { extensionName: extName, isNecessary: isNecessary };
		            } else if (index === -1) {
		                GLExtRequestor._requestedExtensions.push({ extensionName: extName, isNecessary: isNecessary });
		            }
		            GLExtRequestor._requestObserver.forEach(function (o) {
		                return o(extName);
		            });
		        }
		    }, {
		        key: "_requestIndexOf",
		        value: function _requestIndexOf(extName) {
		            for (var i = 0; i < GLExtRequestor._requestedExtensions.length; i++) {
		                if (GLExtRequestor._requestedExtensions[i].extensionName === extName) {
		                    return i;
		                }
		            }
		            return -1;
		        }
		    }]);
		
		    return GLExtRequestor;
		}();
		/**
		 * Extension list requested to use.
		 * @type {string[]}
		 */
		
		
		exports.default = GLExtRequestor;
		GLExtRequestor._requestedExtensions = [];
		/**
		 * Some of extensions needed to override resolving extensions by this.
		 */
		GLExtRequestor._customExtensionResolvers = {};
		GLExtRequestor._requestObserver = [];
		GLExtRequestor._customExtensionResolvers["WEBGL_color_buffer_float"] = function (gl) {
		    var isSupported = void 0;
		    if (gl.getExtension("WEBGL_color_buffer_float") === null) {
		        var fbo = gl.createFramebuffer();
		        var tex = gl.createTexture();
		        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);
		        gl.bindTexture(gl.TEXTURE_2D, tex);
		        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.FLOAT, null);
		        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tex, 0);
		        if (gl.checkFramebufferStatus(gl.FRAMEBUFFER) !== gl.FRAMEBUFFER_COMPLETE) {
		            isSupported = false;
		        } else {
		            isSupported = true;
		        }
		        gl.deleteTexture(tex);
		        gl.deleteFramebuffer(fbo);
		    } else {
		        isSupported = true;
		    }
		    return isSupported;
		};
	
	/***/ },
	/* 49 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _MeshRendererComponent = __webpack_require__(50);
		
		var _MeshRendererComponent2 = _interopRequireDefault(_MeshRendererComponent);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var ClickableMeshComponent = function (_Component) {
		    _inherits(ClickableMeshComponent, _Component);
		
		    function ClickableMeshComponent() {
		        _classCallCheck(this, ClickableMeshComponent);
		
		        return _possibleConstructorReturn(this, (ClickableMeshComponent.__proto__ || Object.getPrototypeOf(ClickableMeshComponent)).apply(this, arguments));
		    }
		
		    _createClass(ClickableMeshComponent, [{
		        key: "$mount",
		        value: function $mount() {
		            this._meshRenderer = this.node.getComponent(_MeshRendererComponent2.default);
		            if (!this._meshRenderer) {
		                throw new Error("ClickableMeshComponent must be attached with MeshRenderer");
		            }
		        }
		    }, {
		        key: "render",
		        value: function render() {}
		    }, {
		        key: "onclick",
		        value: function onclick() {}
		    }]);
		
		    return ClickableMeshComponent;
		}(_Component3.default);
		
		exports.default = ClickableMeshComponent;
		
		ClickableMeshComponent.attributes = {};
	
	/***/ },
	/* 50 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _SceneComponent = __webpack_require__(18);
		
		var _SceneComponent2 = _interopRequireDefault(_SceneComponent);
		
		var _MaterialContainerComponent = __webpack_require__(51);
		
		var _MaterialContainerComponent2 = _interopRequireDefault(_MaterialContainerComponent);
		
		var _TransformComponent = __webpack_require__(17);
		
		var _TransformComponent2 = _interopRequireDefault(_TransformComponent);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		var _GLM = __webpack_require__(12);
		
		var _GLM2 = _interopRequireDefault(_GLM);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var vec3 = _GLM2.default.vec3;
		/**
		 * シーン中に存在するメッシュ一つあたりのレンダリングを司るコンポーネント
		 *
		 * このメッシュが、対象となるノードの`Transform`や描画に用いる`Camera`、マテリアルなどを考慮して実際のレンダリングを行います。
		 */
		
		var MeshRenderer = function (_Component) {
		    _inherits(MeshRenderer, _Component);
		
		    function MeshRenderer() {
		        _classCallCheck(this, MeshRenderer);
		
		        var _this = _possibleConstructorReturn(this, (MeshRenderer.__proto__ || Object.getPrototypeOf(MeshRenderer)).apply(this, arguments));
		
		        _this._priortyCalcCache = new Float32Array(3);
		        return _this;
		    }
		    /**
		    * Find scene tag recursively.
		    * @param  {GomlNode}       node [the node to searching currently]
		    * @return {SceneComponent}      [the scene component found]
		    */
		
		
		    _createClass(MeshRenderer, [{
		        key: "getRenderingPriorty",
		        value: function getRenderingPriorty(camera, cameraMoved, lastPriorty) {
		            vec3.add(this._priortyCalcCache, camera.transform.globalPosition.rawElements, this.geometry.aabb.Center.rawElements);
		            vec3.sub(this._priortyCalcCache, this._priortyCalcCache, this._transformComponent.globalPosition.rawElements);
		            return this._materialContainer.getDrawPriorty(vec3.sqrLen(this._priortyCalcCache)); // Obtains distance between camera and center of aabb
		        }
		    }, {
		        key: "$awake",
		        value: function $awake() {
		            this.__bindAttributes();
		        }
		    }, {
		        key: "$mount",
		        value: function $mount() {
		            this._transformComponent = this.node.getComponent(_TransformComponent2.default);
		            this._materialContainer = this.node.getComponent(_MaterialContainerComponent2.default);
		            this._containedScene = MeshRenderer._findContainedScene(this.node);
		            this._containedScene.queueRegistory.addRenderable(this);
		        }
		    }, {
		        key: "$unmount",
		        value: function $unmount() {
		            this._containedScene.queueRegistory.removeRenderable(this);
		        }
		    }, {
		        key: "render",
		        value: function render(args) {
		            if (!this.node.isActive || !this.enabled || this.layer !== args.layer) {
		                return;
		            }
		            if (!this.geometry || !args.material && !this._materialContainer.material) {
		                return; // material is not instanciated yet.
		            }
		            var renderArgs = {
		                targetBuffer: this.targetBuffer,
		                geometry: this.geometry,
		                attributeValues: null,
		                camera: args.camera,
		                transform: this._transformComponent,
		                buffers: args.buffers,
		                viewport: args.viewport,
		                drawCount: this.drawCount,
		                drawOffset: this.drawOffset,
		                sceneDescription: args.sceneDescription,
		                technique: args.technique,
		                renderable: this
		            };
		            renderArgs.attributeValues = this._materialContainer.materialArgs;
		            this._materialContainer.material.draw(renderArgs);
		            this.node.emit("render", args);
		        }
		    }, {
		        key: "setRenderableIndex",
		        value: function setRenderableIndex(index) {
		            this.index = index;
		        }
		    }], [{
		        key: "_findContainedScene",
		        value: function _findContainedScene(node) {
		            if (node.parent) {
		                var scene = node.parent.getComponent(_SceneComponent2.default);
		                if (scene) {
		                    return scene;
		                } else {
		                    return MeshRenderer._findContainedScene(node.parent);
		                }
		            } else {
		                return null;
		            }
		        }
		    }]);
		
		    return MeshRenderer;
		}(_Component3.default);
		
		exports.default = MeshRenderer;
		
		MeshRenderer.attributes = {
		    /**
		     * 描画に用いる形状データ
		     */
		    geometry: {
		        converter: "Geometry",
		        default: "quad"
		    },
		    /**
		     * 描画に用いるインデックスバッファ名
		     */
		    targetBuffer: {
		        converter: "String",
		        default: "default"
		    },
		    /**
		     * このメッシュが属するレイヤー
		     *
		     * 詳しくは`render-scene`ノードを参考にしてください。
		     */
		    layer: {
		        converter: "String",
		        default: "default"
		    },
		    /**
		     * 描画するインデックスの個数
		     *
		     * デフォルトの状態でジオメトリの全インデックスを描画する
		     */
		    drawCount: {
		        converter: "Number",
		        default: Number.MAX_VALUE
		    },
		    /**
		     * 描画するジオメトリのインデックスのオフセット
		     */
		    drawOffset: {
		        converter: "Number",
		        default: 0
		    }
		};
	
	/***/ },
	/* 51 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _DrawPriorty = __webpack_require__(52);
		
		var _DrawPriorty2 = _interopRequireDefault(_DrawPriorty);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		var _grimoirejs = __webpack_require__(8);
		
		var _grimoirejs2 = _interopRequireDefault(_grimoirejs);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
		    return new (P || (P = Promise))(function (resolve, reject) {
		        function fulfilled(value) {
		            try {
		                step(generator.next(value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function rejected(value) {
		            try {
		                step(generator["throw"](value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function step(result) {
		            result.done ? resolve(result.value) : new P(function (resolve) {
		                resolve(result.value);
		            }).then(fulfilled, rejected);
		        }
		        step((generator = generator.apply(thisArg, _arguments || [])).next());
		    });
		};
		
		/**
		 * マテリアルとマテリアルへの属性を管理するためのコンポーネント
		 *
		 * このコンポーネントは将来的に`MeshRenderer`と統合されます。
		 * 指定されたマテリアルの初期化の管理や、マテリアルによって動的に追加される属性の管理を行います、
		 */
		var MaterialContainerComponent = function (_Component) {
		    _inherits(MaterialContainerComponent, _Component);
		
		    function MaterialContainerComponent() {
		        _classCallCheck(this, MaterialContainerComponent);
		
		        var _this = _possibleConstructorReturn(this, (MaterialContainerComponent.__proto__ || Object.getPrototypeOf(MaterialContainerComponent)).apply(this, arguments));
		
		        _this.materialArgs = {};
		        _this.materialReady = false;
		        _this.useMaterial = false;
		        return _this;
		    }
		
		    _createClass(MaterialContainerComponent, [{
		        key: "getDrawPriorty",
		        value: function getDrawPriorty(depth) {
		            if (!this.materialReady) {
		                return Number.MAX_VALUE;
		            }
		            var orderCriteria = _DrawPriorty2.default[this._drawOrder ? this._drawOrder : this.material.techniques["default"].drawOrder];
		            if (orderCriteria === void 0) {
		                throw new Error("Specified drawing order \"" + this.material.techniques["default"].drawOrder + "\" is not defined");
		            }
		            if (orderCriteria.descending) {
		                return (1.0 - depth / 10000) * orderCriteria.priorty;
		            } else {
		                return depth / 10000 * orderCriteria.priorty;
		            }
		        }
		    }, {
		        key: "$mount",
		        value: function $mount() {
		            this.getAttributeRaw("material").watch(this._onMaterialChanged.bind(this));
		            this.companion.get("loader").register(this._onMaterialChanged());
		            this.getAttributeRaw("drawOrder").boundTo("_drawOrder");
		        }
		        /**
		         * When the material attribute is changed.
		         */
		
		    }, {
		        key: "_onMaterialChanged",
		        value: function _onMaterialChanged() {
		            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
		                var materialPromise;
		                return regeneratorRuntime.wrap(function _callee$(_context) {
		                    while (1) {
		                        switch (_context.prev = _context.next) {
		                            case 0:
		                                materialPromise = this.getAttribute("material");
		
		                                if (!(materialPromise === void 0)) {
		                                    _context.next = 4;
		                                    break;
		                                }
		
		                                this.useMaterial = false;
		                                return _context.abrupt("return");
		
		                            case 4:
		                                this.useMaterial = true;
		                                if (this._registeredAttributes) {
		                                    this.__removeAttributes();
		                                }
		                                if (!this._materialComponent) {
		                                    this._prepareInternalMaterial(materialPromise);
		                                } else {
		                                    this._prepareExternalMaterial(materialPromise);
		                                }
		
		                            case 7:
		                            case "end":
		                                return _context.stop();
		                        }
		                    }
		                }, _callee, this);
		            }));
		        }
		        /**
		         * Resolve materials only when the material required from external material component.
		         * @return {Promise<void>} [description]
		         */
		
		    }, {
		        key: "_prepareExternalMaterial",
		        value: function _prepareExternalMaterial(materialPromise) {
		            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee2() {
		                var loader, material;
		                return regeneratorRuntime.wrap(function _callee2$(_context2) {
		                    while (1) {
		                        switch (_context2.prev = _context2.next) {
		                            case 0:
		                                loader = this.companion.get("loader");
		
		                                loader.register(materialPromise);
		                                _context2.next = 4;
		                                return materialPromise;
		
		                            case 4:
		                                material = _context2.sent;
		                                // waiting for material load completion
		                                this.material = material;
		                                this.materialArgs = this._materialComponent.materialArgs;
		                                this.materialReady = true;
		
		                            case 8:
		                            case "end":
		                                return _context2.stop();
		                        }
		                    }
		                }, _callee2, this);
		            }));
		        }
		    }, {
		        key: "_prepareInternalMaterial",
		        value: function _prepareInternalMaterial(materialPromise) {
		            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee3() {
		                var _this2 = this;
		
		                var loader, material, key, _loop, _key;
		
		                return regeneratorRuntime.wrap(function _callee3$(_context3) {
		                    while (1) {
		                        switch (_context3.prev = _context3.next) {
		                            case 0:
		                                // obtain promise of instanciating material
		                                loader = this.companion.get("loader");
		
		                                loader.register(materialPromise);
		
		                                if (materialPromise) {
		                                    _context3.next = 4;
		                                    break;
		                                }
		
		                                return _context3.abrupt("return");
		
		                            case 4:
		                                _context3.next = 6;
		                                return materialPromise;
		
		                            case 6:
		                                material = _context3.sent;
		                                // waiting for material load completion
		                                this.material = material;
		                                for (key in this.material.argumentDeclarations) {
		                                    this.__addAtribute(key, this.material.argumentDeclarations[key]);
		                                    this.getAttributeRaw(key).boundTo(key, this.material.arguments);
		                                }
		
		                                _loop = function _loop(_key) {
		                                    _this2.__addAtribute(_key, _this2.material.macroDeclarations[_key]);
		                                    _this2.getAttributeRaw(_key).watch(function (v) {
		                                        _this2.material.setMacroValue(_key, v);
		                                    }, true);
		                                };
		
		                                for (_key in this.material.macroDeclarations) {
		                                    _loop(_key);
		                                }
		                                this._registeredAttributes = true;
		                                this.materialReady = true;
		
		                            case 13:
		                            case "end":
		                                return _context3.stop();
		                        }
		                    }
		                }, _callee3, this);
		            }));
		        }
		    }], [{
		        key: "rewriteDefaultMaterial",
		        value: function rewriteDefaultMaterial(materialName) {
		            if (materialName !== MaterialContainerComponent._defaultMaterial) {
		                MaterialContainerComponent._defaultMaterial = materialName;
		                _grimoirejs2.default.componentDeclarations.get("MaterialContainer").attributes["material"].default = "new(" + materialName + ")";
		            }
		        }
		    }, {
		        key: "defaultMaterial",
		        get: function get() {
		            return this._defaultMaterial;
		        }
		    }]);
		
		    return MaterialContainerComponent;
		}(_Component3.default);
		
		exports.default = MaterialContainerComponent;
		
		MaterialContainerComponent.attributes = {
		    /**
		     * 対象のマテリアル
		     */
		    material: {
		        converter: "Material",
		        default: "new(unlit)",
		        componentBoundTo: "_materialComponent" // When the material was specified with the other material tag, this field would be assigned.
		    },
		    /**
		     * 描画順序
		     *
		     * デフォルトの状態では、マテリアルから読み込んだ描画順序設定を用います
		     */
		    drawOrder: {
		        converter: "String",
		        default: null
		    }
		};
		MaterialContainerComponent._defaultMaterial = "unlit";
	
	/***/ },
	/* 52 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.default = {
		    Background: { priorty: 1000 },
		    NoAlpha: { priorty: 2000 },
		    UseAlpha: { priorty: 3000, descending: true },
		    NoDepth: { priorty: 4000, descending: true },
		    Overlay: { priorty: 5000, descending: true }
		};
	
	/***/ },
	/* 53 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * フルスクリーン状態を管理するコンポーネント
		 *
		 * Grimoire.jsによって管理されているキャンバス(正確にはその親のコンテナ)のフルスクリーン状態等を管理します。
		 * (他の要素をフルスクリーン化することも可能ですが、通常このGrimoire.jsによって生成されるキャンバスを含むDOM要素に対して用いられます。)
		 *
		 * また、一部の古いブラウザでは動作しない機能であることに注意してください。
		 * また、`fullscreen`属性は必ず マウスのイベントなどのユーザーのインタラクションを伴うイベントからの呼び出しで **動的に** trueにされる必要があります。
		 *
		 * 最初からtrueに設定して初期状態でキャンバスをフルスクリーン状態にすることはWebAPIの制約上できません。
		 */
		var FullscreenComponent = function (_Component) {
		    _inherits(FullscreenComponent, _Component);
		
		    function FullscreenComponent() {
		        _classCallCheck(this, FullscreenComponent);
		
		        var _this = _possibleConstructorReturn(this, (FullscreenComponent.__proto__ || Object.getPrototypeOf(FullscreenComponent)).apply(this, arguments));
		
		        _this._fullscreen = false;
		        return _this;
		    }
		
		    _createClass(FullscreenComponent, [{
		        key: "$awake",
		        value: function $awake() {
		            var _this2 = this;
		
		            this.getAttributeRaw("fullscreen").watch(function (attr) {
		                if (_this2._fullscreen === attr) {
		                    return;
		                }
		                _this2._fullscreen = attr;
		                _this2._switchFullscreen();
		            });
		        }
		    }, {
		        key: "_switchFullscreen",
		        value: function _switchFullscreen() {
		            if (this._fullscreen) {
		                this.requestFullscreen(this.getAttribute("fullscreenTarget") || this.companion.get("canvasContainer"));
		            } else {
		                this.exitFullscreen();
		            }
		        }
		    }, {
		        key: "requestFullscreen",
		        value: function requestFullscreen(target) {
		            if (target.webkitRequestFullscreen) {
		                target.webkitRequestFullscreen(); //Chrome15+, Safari5.1+, Opera15+
		            } else if (target["mozRequestFullScreen"]) {
		                target["mozRequestFullScreen"](); //FF10+
		            } else if (target["msRequestFullscreen"]) {
		                target["msRequestFullscreen"](); //IE11+
		            } else if (target.requestFullscreen) {
		                target.requestFullscreen(); // HTML5 Fullscreen API仕様
		            } else {
		                console.error('ご利用のブラウザはフルスクリーン操作に対応していません');
		                return;
		            }
		        }
		        /*フルスクリーン終了用ファンクション*/
		
		    }, {
		        key: "exitFullscreen",
		        value: function exitFullscreen() {
		            if (document.webkitCancelFullScreen) {
		                document.webkitCancelFullScreen(); //Chrome15+, Safari5.1+, Opera15+
		            } else if (document["mozCancelFullScreen"]) {
		                document["mozCancelFullScreen"](); //FF10+
		            } else if (document["msExitFullscreen"]) {
		                document["msExitFullscreen"](); //IE11+
		            } else if (document["cancelFullScreen"]) {
		                document["cancelFullScreen"](); //Gecko:FullScreenAPI仕様
		            } else if (document.exitFullscreen) {
		                document.exitFullscreen(); // HTML5 Fullscreen API仕様
		            }
		        }
		    }]);
		
		    return FullscreenComponent;
		}(_Component3.default);
		
		exports.default = FullscreenComponent;
		
		FullscreenComponent.attributes = {
		    /**
		     * フルスクリーン状態かどうか
		     *
		     * このフラグをtrueにする際は、**必ず**、マウスイベントなどのユーザーのインタラクションを伴うイベントからの呼び出しで変更されなければなりません。
		     *
		     * したがって、GOMLで初期状態からこのフラグをtrueにすることはできません。
		     */
		    fullscreen: {
		        converter: "Boolean",
		        default: false
		    },
		    /**
		     * フルスクリーンにするDOM要素へのクエリ
		     *
		     * nullが指定された場合、キャンバスの親要素が用いられます。
		     */
		    fullscreenTarget: {
		        converter: "String",
		        default: null
		    }
		};
	
	/***/ },
	/* 54 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _GeometryFactory = __webpack_require__(55);
		
		var _GeometryFactory2 = _interopRequireDefault(_GeometryFactory);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * ジオメトリを生成するためのコンポーネント
		 *
		 * `type`属性に指定されたタイプのジオメトリを生成して、`name`属性に指定された名前で利用できる形にして登録します。
		 *
		 * このコンポーネントは`type`属性に応じて、**動的** に属性が増えることに気をつけてください。
		 */
		var GeometryComponent = function (_Component) {
		    _inherits(GeometryComponent, _Component);
		
		    function GeometryComponent() {
		        _classCallCheck(this, GeometryComponent);
		
		        return _possibleConstructorReturn(this, (GeometryComponent.__proto__ || Object.getPrototypeOf(GeometryComponent)).apply(this, arguments));
		    }
		
		    _createClass(GeometryComponent, [{
		        key: "$mount",
		        value: function $mount() {
		            var type = this.getAttribute("type");
		            if (type) {
		                var gf = this.companion.get("GeometryFactory");
		                var attrs = _GeometryFactory2.default.factoryArgumentDeclarations[type];
		                var geometryArgument = {};
		                for (var key in attrs) {
		                    this.__addAtribute(key, attrs[key]);
		                    geometryArgument[key] = this.getAttribute(key);
		                }
		                this.geometry = gf.instanciate(type, geometryArgument);
		                var gr = this.companion.get("GeometryRegistory");
		                var name = this.getAttribute("name");
		                if (!name) {
		                    throw new Error("Name was not specified");
		                }
		                gr.addGeometry(name, this.geometry);
		            }
		        }
		    }]);
		
		    return GeometryComponent;
		}(_Component3.default);
		
		exports.default = GeometryComponent;
		
		GeometryComponent.attributes = {
		    /**
		     * 生成するプリミティブのタイプ
		     *
		     * `GeometryFactory`に登録されたプリミティブのジェネレーターの名前を指します。
		     * この指定する名前によって、動的に属性が増えることに気をつけてください。
		     * また、増えたジオメトリの属性は動的に操作できないことに気をつけてください。
		     */
		    type: {
		        converter: "String",
		        default: null
		    },
		    /**
		     * ジオメトリにつける名前
		     *
		     * `GeometryConverter`によって取得される際に利用されるジオメトリ名です。
		     * もし、`quad`など事前に登録されたジオメトリを指定した場合、そのジオメトリを上書きすることができます。
		     */
		    name: {
		        converter: "String",
		        default: null
		    }
		};
	
	/***/ },
	/* 55 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		 * Provides the feature to instanciate primitive geometry.
		 */
		var GeometryFactory = function () {
		    function GeometryFactory(gl) {
		        _classCallCheck(this, GeometryFactory);
		
		        this.gl = gl;
		    }
		    /**
		     * Add new type geometry
		     * @param {string}                   typeName        [description]
		     * @param {IAttributeDeclaration }}             argumentDeclarations [description]
		     * @param {IGeometryFactoryDelegate} factoryDelegate [description]
		     */
		
		
		    _createClass(GeometryFactory, [{
		        key: "instanciate",
		        value: function instanciate(type, args) {
		            var factoryDelegate = GeometryFactory.factoryDelegates[type];
		            if (!factoryDelegate) {
		                throw new Error("Can not instanciate unknown geometry type " + type);
		            }
		            var geometry = factoryDelegate(this.gl, args);
		            if (GeometryFactory.factoryExtentions[type] !== void 0) {
		                GeometryFactory.factoryExtentions[type].forEach(function (v) {
		                    return v(geometry, args);
		                });
		            }
		            return geometry;
		        }
		    }, {
		        key: "instanciateAsDefault",
		        value: function instanciateAsDefault(type) {
		            var decl = GeometryFactory.factoryArgumentDeclarations[type];
		            var args = {};
		            for (var attr in decl) {
		                var attrDecl = decl[attr];
		                args[attr] = attrDecl.default;
		            }
		            return this.instanciate(type, args);
		        }
		    }], [{
		        key: "addType",
		        value: function addType(typeName, argumentDeclarations, factoryDelegate) {
		            GeometryFactory.factoryDelegates[typeName] = factoryDelegate;
		            GeometryFactory.factoryArgumentDeclarations[typeName] = argumentDeclarations;
		        }
		    }, {
		        key: "extend",
		        value: function extend(typeName, extender) {
		            if (GeometryFactory.factoryExtentions[typeName] === void 0) {
		                GeometryFactory.factoryExtentions[typeName] = [];
		            }
		            GeometryFactory.factoryExtentions[typeName].push(extender);
		        }
		    }]);
		
		    return GeometryFactory;
		}();
		/**
		 * Delegates to be used as factory
		 */
		
		
		exports.default = GeometryFactory;
		GeometryFactory.factoryDelegates = {};
		/**
		 * Argument inputs to be used for construction of geometry.
		 */
		GeometryFactory.factoryArgumentDeclarations = {};
		GeometryFactory.factoryExtentions = {};
	
	/***/ },
	/* 56 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _GeometryFactory = __webpack_require__(55);
		
		var _GeometryFactory2 = _interopRequireDefault(_GeometryFactory);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		var _grimoirejs = __webpack_require__(8);
		
		var _grimoirejs2 = _interopRequireDefault(_grimoirejs);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * ジオメトリを管理するコンポーネント
		 *
		 * あまりユーザーが直接操作することはありません。
		 */
		var GeometryRegistoryComponent = function (_Component) {
		    _inherits(GeometryRegistoryComponent, _Component);
		
		    function GeometryRegistoryComponent() {
		        _classCallCheck(this, GeometryRegistoryComponent);
		
		        var _this = _possibleConstructorReturn(this, (GeometryRegistoryComponent.__proto__ || Object.getPrototypeOf(GeometryRegistoryComponent)).apply(this, arguments));
		
		        _this._geometries = {};
		        return _this;
		    }
		
		    _createClass(GeometryRegistoryComponent, [{
		        key: "$awake",
		        value: function $awake() {
		            this._factory = new _GeometryFactory2.default(this.companion.get("gl"));
		            this.companion.set(this.name, this);
		            this.companion.set(_grimoirejs2.default.ns(this.name.ns)("GeometryFactory"), this._factory);
		            var _iteratorNormalCompletion = true;
		            var _didIteratorError = false;
		            var _iteratorError = undefined;
		
		            try {
		                for (var _iterator = this.getAttribute("defaultGeometry")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
		                    var geometry = _step.value;
		
		                    this.addGeometry(geometry, this._factory.instanciateAsDefault(geometry));
		                }
		            } catch (err) {
		                _didIteratorError = true;
		                _iteratorError = err;
		            } finally {
		                try {
		                    if (!_iteratorNormalCompletion && _iterator.return) {
		                        _iterator.return();
		                    }
		                } finally {
		                    if (_didIteratorError) {
		                        throw _iteratorError;
		                    }
		                }
		            }
		        }
		    }, {
		        key: "addGeometry",
		        value: function addGeometry(name, geometry) {
		            this._geometries[name] = geometry;
		        }
		    }, {
		        key: "removeGeometry",
		        value: function removeGeometry(name) {
		            if (this._geometries[name]) {
		                delete this._geometries[name];
		            }
		        }
		    }, {
		        key: "getGeometry",
		        value: function getGeometry(name) {
		            return this._geometries[name];
		        }
		    }]);
		
		    return GeometryRegistoryComponent;
		}(_Component3.default);
		
		exports.default = GeometryRegistoryComponent;
		
		GeometryRegistoryComponent.attributes = {
		    /**
		     * デフォルトで生成するジオメトリの種類
		     */
		    defaultGeometry: {
		        converter: "StringArray",
		        default: ["quad", "cube", "sphere"]
		    }
		};
	
	/***/ },
	/* 57 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _RenderSceneComponent = __webpack_require__(58);
		
		var _RenderSceneComponent2 = _interopRequireDefault(_RenderSceneComponent);
		
		var _TransformComponent = __webpack_require__(17);
		
		var _TransformComponent2 = _interopRequireDefault(_TransformComponent);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		var _Vector = __webpack_require__(13);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		var _Matrix = __webpack_require__(15);
		
		var _Matrix2 = _interopRequireDefault(_Matrix);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * (Deprecated)DOM要素とTransformを同期させるためのコンポーネント
		 *
		 * このコンポーネントはfundamentalからは削除されます。(別のパッケージとして分離予定)
		 */
		var HTMLBinderComponent = function (_Component) {
		    _inherits(HTMLBinderComponent, _Component);
		
		    function HTMLBinderComponent() {
		        _classCallCheck(this, HTMLBinderComponent);
		
		        var _this = _possibleConstructorReturn(this, (HTMLBinderComponent.__proto__ || Object.getPrototypeOf(HTMLBinderComponent)).apply(this, arguments));
		
		        _this._isFirstCall = true;
		        return _this;
		    }
		
		    _createClass(HTMLBinderComponent, [{
		        key: "$awake",
		        value: function $awake() {
		            this._canvasContainer = this.companion.get("canvasContainer");
		            this._currentTransform = this.node.getComponent(_TransformComponent2.default);
		        }
		    }, {
		        key: "$mount",
		        value: function $mount() {
		            this._canvasContainer = this.companion.get("canvasContainer");
		            this._currentTransform = this.node.getComponent(_TransformComponent2.default);
		            this.node.on("render", this._onRender.bind(this));
		        }
		    }, {
		        key: "$treeInitialized",
		        value: function $treeInitialized() {
		            var _this2 = this;
		
		            this.getAttributeRaw("targetRenderer").watch(function (v) {
		                if (_this2._rendererQuery !== v) {
		                    _this2._onRendererChanged();
		                }
		            }, true);
		            this.getAttributeRaw("htmlQuery").watch(function (v) {
		                _this2._onQueryChanged(v);
		            }, true);
		        }
		    }, {
		        key: "_onRender",
		        value: function _onRender(args) {
		            if (this._isFirstCall) {
		                this._onRendererChanged();
		                this._isFirstCall = false;
		            }
		            if (this._queriedElement && args.renderer === this._targetRenderer) {
		                var vp = args.viewport;
		                var rawPos = _Matrix2.default.transform(this._currentTransform.calcPVM(args.camera), new _Vector2.default(0, 0, 0, 1));
		                var rawScPos = {
		                    x: rawPos.X / rawPos.W,
		                    y: rawPos.Y / rawPos.W,
		                    z: rawPos.Z / rawPos.W
		                };
		                if (rawScPos.z >= -1 && rawScPos.z <= 1) {
		                    var scPos = {
		                        x: vp.Left + (rawScPos.x + 1) / 2 * vp.Width,
		                        y: vp.Top + (rawScPos.y + 1) / 2 * vp.Height
		                    };
		                    this._queriedElement.style.visibility = "visible";
		                    this._queriedElement.style.left = scPos.x + "px";
		                    this._queriedElement.style.bottom = scPos.y + "px";
		                } else {
		                    this._queriedElement.style.visibility = "hidden";
		                }
		            }
		        }
		        /**
		         * Restore default position of queried html
		         */
		
		    }, {
		        key: "_restoreDefault",
		        value: function _restoreDefault() {
		            this._canvasContainer.removeChild(this._queriedElement);
		            this._parentCache.appendChild(this._queriedElement);
		            var s = this._queriedElement.style;
		            var c = this._styleCache;
		            s.position = c["position"];
		            s.left = c["left"];
		            s.bottom = c["bottom"];
		            s.visibility = c["visibility"];
		        }
		    }, {
		        key: "_beginTrack",
		        value: function _beginTrack() {
		            this._parentCache.removeChild(this._queriedElement);
		            this._canvasContainer.appendChild(this._queriedElement);
		            this._queriedElement.style.position = "absolute";
		        }
		    }, {
		        key: "_onRendererChanged",
		        value: function _onRendererChanged() {
		            var _this3 = this;
		
		            var returned = false;
		            this.tree(this.getAttribute("targetRenderer")).forEach(function (n) {
		                if (returned) {
		                    return true;
		                } else {
		                    _this3._targetRenderer = n.getComponent(_RenderSceneComponent2.default);
		                    if (_this3._targetRenderer) {
		                        returned = true;
		                    }
		                }
		            });
		        }
		    }, {
		        key: "_onQueryChanged",
		        value: function _onQueryChanged(query) {
		            var queried = void 0;
		            if (query && query !== "") {
		                queried = document.querySelectorAll(query);
		            }
		            if (this._queriedElement) {
		                this._restoreDefault();
		            }
		            if (!queried || queried.length === 0) {
		                this._queriedElement = undefined;
		                this._parentCache = undefined;
		            } else {
		                this._queriedElement = queried.item(0);
		                var s = this._queriedElement.style;
		                this._styleCache = {
		                    position: s.position,
		                    visibility: s.visibility,
		                    left: s.left,
		                    bottom: s.bottom
		                };
		                this._parentCache = this._queriedElement.parentElement;
		                this._beginTrack();
		            }
		        }
		    }]);
		
		    return HTMLBinderComponent;
		}(_Component3.default);
		
		exports.default = HTMLBinderComponent;
		
		HTMLBinderComponent.attributes = {
		    htmlQuery: {
		        default: null,
		        converter: "String"
		    },
		    targetRenderer: {
		        default: "render-scene",
		        converter: "String"
		    }
		};
	
	/***/ },
	/* 58 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		var _FrameBuffer = __webpack_require__(59);
		
		var _FrameBuffer2 = _interopRequireDefault(_FrameBuffer);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var RenderSceneComponent = function (_Component) {
		    _inherits(RenderSceneComponent, _Component);
		
		    function RenderSceneComponent() {
		        _classCallCheck(this, RenderSceneComponent);
		
		        return _possibleConstructorReturn(this, (RenderSceneComponent.__proto__ || Object.getPrototypeOf(RenderSceneComponent)).apply(this, arguments));
		    }
		
		    _createClass(RenderSceneComponent, [{
		        key: "$awake",
		
		        // messages
		        value: function $awake() {
		            this.getAttributeRaw("layer").boundTo("layer");
		            this.getAttributeRaw("clearColor").boundTo("clearColor");
		            this.getAttributeRaw("clearColorEnabled").boundTo("clearColorEnabled");
		            this.getAttributeRaw("clearDepthEnabled").boundTo("clearDepthEnabled");
		            this.getAttributeRaw("clearDepth").boundTo("clearDepth");
		            this.getAttributeRaw("camera").boundTo("camera");
		            this.getAttributeRaw("technique").boundTo("technique");
		        }
		    }, {
		        key: "$mount",
		        value: function $mount() {
		            this._gl = this.companion.get("gl");
		            this._canvas = this.companion.get("canvasElement");
		        }
		    }, {
		        key: "$bufferUpdated",
		        value: function $bufferUpdated(args) {
		            var out = this.getAttribute("out");
		            if (out !== "default") {
		                this._fbo = new _FrameBuffer2.default(this.companion.get("gl"));
		                this._fbo.update(args.buffers[out]);
		                this._fboSize = args.bufferSizes[out];
		            }
		            var depthBuffer = this.getAttribute("depthBuffer");
		            if (depthBuffer && this._fbo) {
		                this._fbo.update(args.buffers[depthBuffer]);
		            }
		        }
		    }, {
		        key: "$render",
		        value: function $render(args) {
		            var camera = this.camera ? this.camera : args.camera;
		            if (!camera) {
		                return;
		            }
		            if (this._fbo) {
		                this._fbo.bind();
		                this._gl.viewport(0, 0, this._fboSize.width, this._fboSize.height);
		            } else {
		                this._gl.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, null);
		                this._gl.viewport(args.viewport.Left, this._canvas.height - args.viewport.Bottom, args.viewport.Width, args.viewport.Height);
		            }
		            // clear buffer if needed
		            if (this._fbo && this.clearColorEnabled) {
		                this._gl.clearColor(this.clearColor.R, this.clearColor.G, this.clearColor.B, this.clearColor.A);
		                this._gl.clear(WebGLRenderingContext.COLOR_BUFFER_BIT);
		            }
		            if (this.clearDepthEnabled) {
		                this._gl.clearDepth(this.clearDepth);
		                this._gl.clear(WebGLRenderingContext.DEPTH_BUFFER_BIT);
		            }
		            args.camera.updateContainedScene(args.loopIndex);
		            args.camera.renderScene({
		                renderer: this,
		                camera: camera,
		                buffers: args.buffers,
		                layer: this.layer,
		                viewport: args.viewport,
		                loopIndex: args.loopIndex,
		                technique: this.technique
		            });
		        }
		    }]);
		
		    return RenderSceneComponent;
		}(_Component3.default);
		
		exports.default = RenderSceneComponent;
		
		RenderSceneComponent.attributes = {
		    layer: {
		        converter: "String",
		        default: "default"
		    },
		    depthBuffer: {
		        default: null,
		        converter: "String"
		    },
		    out: {
		        converter: "String",
		        default: "default"
		    },
		    clearColor: {
		        default: "#0000",
		        converter: "Color4"
		    },
		    clearColorEnabled: {
		        default: true,
		        converter: "Boolean"
		    },
		    clearDepthEnabled: {
		        default: true,
		        converter: "Boolean"
		    },
		    clearDepth: {
		        default: 1.0,
		        converter: "Number"
		    },
		    camera: {
		        default: null,
		        converter: "Component",
		        target: "Camera"
		    },
		    technique: {
		        default: "default",
		        converter: "String"
		    }
		};
	
	/***/ },
	/* 59 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
		
		var _RenderBuffer = __webpack_require__(60);
		
		var _RenderBuffer2 = _interopRequireDefault(_RenderBuffer);
		
		var _Texture2D = __webpack_require__(47);
		
		var _Texture2D2 = _interopRequireDefault(_Texture2D);
		
		var _ResourceBase2 = __webpack_require__(38);
		
		var _ResourceBase3 = _interopRequireDefault(_ResourceBase2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var FrameBuffer = function (_ResourceBase) {
		    _inherits(FrameBuffer, _ResourceBase);
		
		    function FrameBuffer(gl) {
		        _classCallCheck(this, FrameBuffer);
		
		        var _this = _possibleConstructorReturn(this, (FrameBuffer.__proto__ || Object.getPrototypeOf(FrameBuffer)).call(this, gl));
		
		        _this.fbo = gl.createFramebuffer();
		        return _this;
		    }
		
		    _createClass(FrameBuffer, [{
		        key: "update",
		        value: function update(boundTo, level, bindIndex) {
		            this.gl.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, this.fbo);
		            if (boundTo instanceof _Texture2D2.default) {
		                if (typeof bindIndex === "undefined") {
		                    bindIndex = 0;
		                }
		                if (typeof level === "undefined") {
		                    level = 0;
		                }
		                this.gl.framebufferTexture2D(WebGLRenderingContext.FRAMEBUFFER, WebGLRenderingContext.COLOR_ATTACHMENT0 + bindIndex, WebGLRenderingContext.TEXTURE_2D, boundTo.texture, level);
		                if (this.gl.checkFramebufferStatus(WebGLRenderingContext.FRAMEBUFFER) !== WebGLRenderingContext.FRAMEBUFFER_COMPLETE) {
		                    throw new Error("INCOMPLETE framebuffer");
		                }
		            } else if (boundTo instanceof _RenderBuffer2.default) {
		                var registerTarget = level;
		                if (typeof level === "undefined") {
		                    registerTarget = WebGLRenderingContext.DEPTH_ATTACHMENT;
		                }
		                this.gl.framebufferRenderbuffer(WebGLRenderingContext.FRAMEBUFFER, registerTarget, WebGLRenderingContext.RENDERBUFFER, boundTo.renderBuffer);
		            }
		            this.gl.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, null);
		        }
		    }, {
		        key: "bind",
		        value: function bind() {
		            this.gl.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, this.fbo);
		        }
		    }, {
		        key: "destroy",
		        value: function destroy() {
		            _get(FrameBuffer.prototype.__proto__ || Object.getPrototypeOf(FrameBuffer.prototype), "destroy", this).call(this);
		            this.gl.deleteFramebuffer(this.fbo);
		        }
		    }]);
		
		    return FrameBuffer;
		}(_ResourceBase3.default);
		
		exports.default = FrameBuffer;
	
	/***/ },
	/* 60 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };
		
		var _ResourceBase2 = __webpack_require__(38);
		
		var _ResourceBase3 = _interopRequireDefault(_ResourceBase2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var RenderBuffer = function (_ResourceBase) {
		    _inherits(RenderBuffer, _ResourceBase);
		
		    function RenderBuffer(gl) {
		        _classCallCheck(this, RenderBuffer);
		
		        var _this = _possibleConstructorReturn(this, (RenderBuffer.__proto__ || Object.getPrototypeOf(RenderBuffer)).call(this, gl));
		
		        _this.renderBuffer = gl.createRenderbuffer();
		        return _this;
		    }
		
		    _createClass(RenderBuffer, [{
		        key: "update",
		        value: function update(format, width, height) {
		            this.gl.bindRenderbuffer(WebGLRenderingContext.RENDERBUFFER, this.renderBuffer);
		            this.gl.renderbufferStorage(WebGLRenderingContext.RENDERBUFFER, format, width, height);
		            this.valid = true;
		        }
		    }, {
		        key: "bind",
		        value: function bind() {
		            this.gl.bindRenderbuffer(WebGLRenderingContext.RENDERBUFFER, this.renderBuffer);
		        }
		    }, {
		        key: "destroy",
		        value: function destroy() {
		            this.gl.deleteRenderbuffer(this.renderBuffer);
		            _get(RenderBuffer.prototype.__proto__ || Object.getPrototypeOf(RenderBuffer.prototype), "destroy", this).call(this);
		        }
		    }]);
		
		    return RenderBuffer;
		}(_ResourceBase3.default);
		
		exports.default = RenderBuffer;
	
	/***/ },
	/* 61 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * 全体のループを管理しているコンポーネント。あまり直接ユーザーがいじることはありません。
		 */
		var LoopManagerComponent = function (_Component) {
		    _inherits(LoopManagerComponent, _Component);
		
		    function LoopManagerComponent() {
		        _classCallCheck(this, LoopManagerComponent);
		
		        var _this = _possibleConstructorReturn(this, (LoopManagerComponent.__proto__ || Object.getPrototypeOf(LoopManagerComponent)).apply(this, arguments));
		
		        _this._loopActions = [];
		        _this._loopIndex = 0;
		        return _this;
		    }
		
		    _createClass(LoopManagerComponent, [{
		        key: "$awake",
		        value: function $awake() {
		            var _this2 = this;
		
		            this.getAttributeRaw("loopEnabled").watch(function (attr) {
		                if (attr) {
		                    _this2._begin();
		                }
		            });
		            this._registerNextLoop = window.requestAnimationFrame // if window.requestAnimationFrame is defined or undefined
		            ? function () {
		                window.requestAnimationFrame(_this2._loop.bind(_this2));
		            } : function () {
		                window.setTimeout(_this2._loop.bind(_this2), 1000 / 60);
		            };
		        }
		    }, {
		        key: "register",
		        value: function register(action, priorty) {
		            this._loopActions.push({
		                action: action,
		                priorty: priorty
		            });
		            this._loopActions.sort(function (a, b) {
		                return a.priorty - b.priorty;
		            });
		        }
		    }, {
		        key: "_begin",
		        value: function _begin() {
		            this._registerNextLoop();
		        }
		    }, {
		        key: "_loop",
		        value: function _loop() {
		            var _this3 = this;
		
		            this.node.emit("loop", {
		                loopIndex: this._loopIndex
		            });
		            this._loopActions.forEach(function (a) {
		                return a.action(_this3._loopIndex);
		            });
		            this._loopIndex++;
		            this._registerNextLoop();
		        }
		    }]);
		
		    return LoopManagerComponent;
		}(_Component3.default);
		
		LoopManagerComponent.attributes = {
		    loopEnabled: {
		        default: false,
		        converter: "Boolean"
		    }
		};
		exports.default = LoopManagerComponent;
	
	/***/ },
	/* 62 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
		    return new (P || (P = Promise))(function (resolve, reject) {
		        function fulfilled(value) {
		            try {
		                step(generator.next(value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function rejected(value) {
		            try {
		                step(generator["throw"](value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function step(result) {
		            result.done ? resolve(result.value) : new P(function (resolve) {
		                resolve(result.value);
		            }).then(fulfilled, rejected);
		        }
		        step((generator = generator.apply(thisArg, _arguments || [])).next());
		    });
		};
		
		var MaterialComponent = function (_Component) {
		    _inherits(MaterialComponent, _Component);
		
		    function MaterialComponent() {
		        _classCallCheck(this, MaterialComponent);
		
		        var _this = _possibleConstructorReturn(this, (MaterialComponent.__proto__ || Object.getPrototypeOf(MaterialComponent)).apply(this, arguments));
		
		        _this.materialArgs = {};
		        return _this;
		    }
		
		    _createClass(MaterialComponent, [{
		        key: "$mount",
		        value: function $mount() {
		            var typeName = this.getAttribute("type");
		            if (typeName) {
		                this.materialPromise = this.companion.get("MaterialFactory").instanciate(typeName);
		                this._registerAttributes();
		            }
		        }
		    }, {
		        key: "_registerAttributes",
		        value: function _registerAttributes() {
		            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
		                var _this2 = this;
		
		                var key, _loop, _key;
		
		                return regeneratorRuntime.wrap(function _callee$(_context) {
		                    while (1) {
		                        switch (_context.prev = _context.next) {
		                            case 0:
		                                _context.next = 2;
		                                return this.materialPromise;
		
		                            case 2:
		                                this.material = _context.sent;
		
		                                for (key in this.material.argumentDeclarations) {
		                                    this.__addAtribute(key, this.material.argumentDeclarations[key]);
		                                    this.getAttributeRaw(key).boundTo(key, this.material.arguments);
		                                }
		
		                                _loop = function _loop(_key) {
		                                    _this2.__addAtribute(_key, _this2.material.macroDeclarations[_key]);
		                                    _this2.getAttributeRaw(_key).watch(function (v) {
		                                        _this2.material.setMacroValue(_key, v);
		                                    }, true);
		                                };
		
		                                for (_key in this.material.macroDeclarations) {
		                                    _loop(_key);
		                                }
		                                this.ready = true;
		
		                            case 7:
		                            case "end":
		                                return _context.stop();
		                        }
		                    }
		                }, _callee, this);
		            }));
		        }
		    }]);
		
		    return MaterialComponent;
		}(_Component3.default);
		
		exports.default = MaterialComponent;
		
		MaterialComponent.attributes = {
		    type: {
		        converter: "String",
		        default: null
		    }
		};
	
	/***/ },
	/* 63 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _MaterialFactory = __webpack_require__(21);
		
		var _MaterialFactory2 = _interopRequireDefault(_MaterialFactory);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * マテリアル設定ファイルを読み込むためのコンポーネント
		 */
		var MaterialImporterComponent = function (_Component) {
		    _inherits(MaterialImporterComponent, _Component);
		
		    function MaterialImporterComponent() {
		        _classCallCheck(this, MaterialImporterComponent);
		
		        return _possibleConstructorReturn(this, (MaterialImporterComponent.__proto__ || Object.getPrototypeOf(MaterialImporterComponent)).apply(this, arguments));
		    }
		
		    _createClass(MaterialImporterComponent, [{
		        key: "$awake",
		        value: function $awake() {
		            this.getAttributeRaw("typeName").watch(function (v) {
		                console.warn("Changeing 'typeName' on MaterialImporter makes no sense. This change won't affect anything.");
		            });
		            this.getAttributeRaw("src").watch(function (v) {
		                console.warn("Changeing 'src' on MaterialImporter makes no sense. This change won't affect anything.");
		            });
		            if (!this.getAttribute("typeName") || !this.getAttribute("src")) {
		                throw new Error("type or src cannot be null in material importer");
		            } else {
		                var typeName = this.getAttribute("typeName");
		                if (_MaterialFactory2.default.factories[typeName] !== void 0) {
		                    throw new Error("A material type '" + typeName + "' is already loaded.");
		                }
		                _MaterialFactory2.default.addSORTMaterialFromURL(this.getAttribute("typeName"), this.getAttribute("src"));
		            }
		        }
		    }]);
		
		    return MaterialImporterComponent;
		}(_Component3.default);
		
		exports.default = MaterialImporterComponent;
		
		MaterialImporterComponent.attributes = {
		    /**
		     * マテリアル名として登録される名前
		     */
		    typeName: {
		        default: null,
		        converter: "String"
		    },
		    /**
		     * 読み込み先のファイルパス
		     */
		    src: {
		        default: null,
		        converter: "String"
		    }
		};
	
	/***/ },
	/* 64 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Vector = __webpack_require__(14);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		var _Quaternion = __webpack_require__(65);
		
		var _Quaternion2 = _interopRequireDefault(_Quaternion);
		
		var _Matrix = __webpack_require__(15);
		
		var _Matrix2 = _interopRequireDefault(_Matrix);
		
		var _TransformComponent = __webpack_require__(17);
		
		var _TransformComponent2 = _interopRequireDefault(_TransformComponent);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var MouseCameraControlComponent = function (_Component) {
		    _inherits(MouseCameraControlComponent, _Component);
		
		    function MouseCameraControlComponent() {
		        _classCallCheck(this, MouseCameraControlComponent);
		
		        var _this = _possibleConstructorReturn(this, (MouseCameraControlComponent.__proto__ || Object.getPrototypeOf(MouseCameraControlComponent)).apply(this, arguments));
		
		        _this._updated = false;
		        _this._lastCenter = null;
		        _this._lastScreenPos = null;
		        _this._xsum = 0;
		        _this._ysum = 0;
		        _this._d = _Vector2.default.Zero;
		        return _this;
		    }
		
		    _createClass(MouseCameraControlComponent, [{
		        key: "$awake",
		        value: function $awake() {
		            this.__bindAttributes();
		            this._listeners = {
		                mousemove: this._mouseMove.bind(this),
		                contextmenu: this._contextMenu.bind(this),
		                wheel: this._mouseWheel.bind(this)
		            };
		        }
		    }, {
		        key: "$mount",
		        value: function $mount() {
		            this._transform = this.node.getComponent(_TransformComponent2.default);
		            var canvasElement = this.companion.get("canvasElement");
		            canvasElement.addEventListener("mousemove", this._listeners.mousemove);
		            canvasElement.addEventListener("contextmenu", this._listeners.contextmenu);
		            canvasElement.addEventListener("wheel", this._listeners.wheel);
		            this._lastScreenPos = null;
		            this._xsum = 0;
		            this._ysum = 0;
		        }
		    }, {
		        key: "$unmount",
		        value: function $unmount() {
		            var canvasElement = this.companion.get("canvasElement");
		            canvasElement.removeEventListener("mousemove", this._listeners.mousemove);
		            canvasElement.removeEventListener("contextmenu", this._listeners.contextmenu);
		            canvasElement.removeEventListener("wheel", this._listeners.wheel);
		        }
		    }, {
		        key: "$initialized",
		        value: function $initialized() {
		            var look = _Vector2.default.normalize(this.center.subtractWith(this._transform.localPosition));
		            var g = _Quaternion2.default.fromToRotation(this._transform.forward, look).normalize();
		            this._transform.localRotation = g;
		            this._initialRotation = g;
		            this._initialDirection = _Vector2.default.copy(this._transform.forward.negateThis()).normalized;
		            if (this.distance !== null) {
		                this._transform.localPosition = this.center.addWith(this._initialDirection.multiplyWith(this.distance));
		            } else {
		                this.distance = this._transform.localPosition.subtractWith(this.center).magnitude;
		            }
		        }
		    }, {
		        key: "$update",
		        value: function $update() {
		            if (this._updated || !this._lastCenter || !this.center.equalWith(this._lastCenter)) {
		                this._updated = false;
		                this._lastCenter = this.center;
		                // rotate excution
		                var rotationVartical = _Quaternion2.default.angleAxis(-this._xsum * this.rotateSpeed * 0.01, _Vector2.default.YUnit);
		                var rotationHorizontal = _Quaternion2.default.angleAxis(-this._ysum * this.rotateSpeed * 0.01, _Vector2.default.XUnit);
		                var rotation = _Quaternion2.default.multiply(rotationVartical, rotationHorizontal);
		                var rotationMat = _Matrix2.default.rotationQuaternion(rotation);
		                var direction = _Matrix2.default.transformNormal(rotationMat, this._initialDirection);
		                this._transform.localPosition = this.center.addWith(this._d).addWith(_Vector2.default.normalize(direction).multiplyWith(this.distance));
		                this._transform.localRotation = rotation;
		                this._transform.localRotation = _Quaternion2.default.multiply(rotation, this._initialRotation);
		            }
		        }
		    }, {
		        key: "_contextMenu",
		        value: function _contextMenu(m) {
		            if (!this.isActive) {
		                return;
		            }
		            m.preventDefault();
		        }
		    }, {
		        key: "_mouseMove",
		        value: function _mouseMove(m) {
		            if (!this.isActive) {
		                return;
		            }
		            if (this._lastScreenPos === null) {
		                this._lastScreenPos = {
		                    x: m.screenX,
		                    y: m.screenY
		                };
		                return;
		            }
		            var diffX = m.screenX - this._lastScreenPos.x;
		            var diffY = m.screenY - this._lastScreenPos.y;
		            if (this._checkButtonPress(m, true)) {
		                this._xsum += diffX;
		                this._ysum += diffY;
		                this._ysum = Math.min(Math.PI * 50, this._ysum);
		                this._ysum = Math.max(-Math.PI * 50, this._ysum);
		                this._updated = true;
		            }
		            if (this._checkButtonPress(m, false)) {
		                var moveX = -diffX * this.moveSpeed * 0.01;
		                var moveY = diffY * this.moveSpeed * 0.01;
		                this._d = this._d.addWith(this._transform.right.multiplyWith(moveX)).addWith(this._transform.up.multiplyWith(moveY));
		                this._updated = true;
		            }
		            this._lastScreenPos = {
		                x: m.screenX,
		                y: m.screenY
		            };
		        }
		    }, {
		        key: "_checkButtonPress",
		        value: function _checkButtonPress(m, isRight) {
		            if ("buttons" in m) {
		                if (isRight) {
		                    return (m.buttons & 1) > 0;
		                } else {
		                    return (m.buttons & 2) > 0;
		                }
		            } else {
		                if (isRight) {
		                    return m.which === 1;
		                } else {
		                    return m.which === 3;
		                }
		            }
		        }
		    }, {
		        key: "_mouseWheel",
		        value: function _mouseWheel(m) {
		            if (!this.isActive) {
		                return;
		            }
		            var dir = _Vector2.default.subtract(this._transform.localPosition, this.center).normalized;
		            var moveDist = m.deltaY * this.zoomSpeed * 0.05;
		            this.distance = Math.max(1, this.distance + moveDist);
		            this._transform.localPosition = this.center.addWith(dir.multiplyWith(this.distance));
		            m.preventDefault();
		        }
		    }]);
		
		    return MouseCameraControlComponent;
		}(_Component3.default);
		
		exports.default = MouseCameraControlComponent;
		
		MouseCameraControlComponent.attributes = {
		    rotateSpeed: {
		        default: 1,
		        converter: "Number"
		    },
		    zoomSpeed: {
		        default: 1,
		        converter: "Number"
		    },
		    moveSpeed: {
		        default: 1,
		        converter: "Number"
		    },
		    center: {
		        default: "0,0,0",
		        converter: "Position",
		        lazy: true
		    },
		    distance: {
		        default: null,
		        converter: "Number"
		    }
		};
	
	/***/ },
	/* 65 */
	/***/ function(module, exports) {
	
			Object.defineProperty(exports, "__esModule", {
			    value: true
			});exports.default=window.GrimoireJS.lib.math.Quaternion;
	
	/***/ },
	/* 66 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _RenderBuffer = __webpack_require__(60);
		
		var _RenderBuffer2 = _interopRequireDefault(_RenderBuffer);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		var _TextureSizeCalculator = __webpack_require__(67);
		
		var _TextureSizeCalculator2 = _interopRequireDefault(_TextureSizeCalculator);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var RenderBufferComponent = function (_Component) {
		    _inherits(RenderBufferComponent, _Component);
		
		    function RenderBufferComponent() {
		        _classCallCheck(this, RenderBufferComponent);
		
		        return _possibleConstructorReturn(this, (RenderBufferComponent.__proto__ || Object.getPrototypeOf(RenderBufferComponent)).apply(this, arguments));
		    }
		
		    _createClass(RenderBufferComponent, [{
		        key: "$mount",
		        value: function $mount() {
		            this.buffer = new _RenderBuffer2.default(this.companion.get("gl"));
		        }
		    }, {
		        key: "$unmount",
		        value: function $unmount() {
		            this.buffer.destroy();
		            this.buffer = null;
		        }
		    }, {
		        key: "$resizeBuffer",
		        value: function $resizeBuffer(arg) {
		            var name = this.getAttribute("name");
		            if (!name) {
		                throw new Error("Attribute 'name' must be specified.");
		            }
		            var newSize = _TextureSizeCalculator2.default.getPow2Size(arg.width, arg.height);
		            this.buffer.update(WebGLRenderingContext.DEPTH_COMPONENT16, newSize.width, newSize.height);
		            arg.bufferSizes[name] = { width: newSize.width, height: newSize.height };
		            arg.buffers[name] = this.buffer;
		        }
		    }]);
		
		    return RenderBufferComponent;
		}(_Component3.default);
		
		exports.default = RenderBufferComponent;
		
		RenderBufferComponent.attributes = {
		    name: {
		        converter: "String",
		        default: null
		    }
		};
	
	/***/ },
	/* 67 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var TextureSizeCalculator = function () {
		    function TextureSizeCalculator() {
		        _classCallCheck(this, TextureSizeCalculator);
		    }
		
		    _createClass(TextureSizeCalculator, null, [{
		        key: "getPow2Size",
		        value: function getPow2Size(width, height) {
		            var nw = Math.pow(2, Math.ceil(Math.log2(width))); // largest 2^n integer that does not exceed s
		            var nh = Math.pow(2, Math.ceil(Math.log2(height))); // largest 2^n integer that does not exceed s
		            return {
		                width: nw,
		                height: nh
		            };
		        }
		    }]);
		
		    return TextureSizeCalculator;
		}();
		
		exports.default = TextureSizeCalculator;
	
	/***/ },
	/* 68 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var RendererComponent = function (_Component) {
		    _inherits(RendererComponent, _Component);
		
		    function RendererComponent() {
		        _classCallCheck(this, RendererComponent);
		
		        var _this = _possibleConstructorReturn(this, (RendererComponent.__proto__ || Object.getPrototypeOf(RendererComponent)).apply(this, arguments));
		
		        _this._buffers = {};
		        _this._bufferSizes = {};
		        _this._wasInside = false;
		        return _this;
		    }
		
		    _createClass(RendererComponent, [{
		        key: "$awake",
		        value: function $awake() {
		            var _this2 = this;
		
		            // initializing attributes
		            this.getAttributeRaw("camera").boundTo("camera");
		            this.getAttributeRaw("viewport").watch(function (v) {
		                _this2._viewportSizeGenerator = v;
		                _this2.$resizeCanvas();
		            });
		            this._viewportSizeGenerator = this.getAttribute("viewport");
		            // initializing mouse handlers
		            this._mouseMoveHandler = function (e) {
		                if (_this2._isViewportInside(e)) {
		                    if (!_this2._wasInside) {
		                        _this2.node.emit("mouseenter");
		                        _this2.node.broadcastMessage("mouseenter", _this2._toViewportMouseArgs(e));
		                    }
		                    _this2.node.emit("mousemove");
		                    _this2.node.broadcastMessage("mousemove", _this2._toViewportMouseArgs(e));
		                    _this2._wasInside = true; // Mark as last pointer was inside of viewport
		                } else {
		                    if (_this2._wasInside) {
		                        _this2.node.emit("mouseleave");
		                        _this2.node.broadcastMessage("mouseleave", _this2._toViewportMouseArgs(e));
		                    }
		                    _this2._wasInside = false; // Mark as last pointer was not inside of viewport
		                }
		            };
		            this._mouseEnterHandler = function (e) {
		                if (_this2._isViewportInside(e)) {
		                    _this2.node.emit("mouseenter");
		                    _this2.node.broadcastMessage("mouseenter", _this2._toViewportMouseArgs(e));
		                    _this2._wasInside = true;
		                }
		            };
		            this._mouseLeaveHandler = function (e) {
		                if (_this2._wasInside) {
		                    _this2.node.emit("mouseleave");
		                    _this2.node.broadcastMessage("mouseleave", _this2._toViewportMouseArgs(e));
		                }
		                _this2._wasInside = false;
		            };
		        }
		    }, {
		        key: "$mount",
		        value: function $mount() {
		            var _this3 = this;
		
		            this._gl = this.companion.get("gl");
		            this._canvas = this.companion.get("canvasElement");
		            this.getAttributeRaw("handleMouse").watch(function (a) {
		                if (a) {
		                    _this3._enableMouseHandling();
		                } else {
		                    _this3._disableMouseHandling();
		                }
		            }, true);
		        }
		    }, {
		        key: "$treeInitialized",
		        value: function $treeInitialized() {
		            // This should be called after mounting all of tree nodes in children
		            this.$resizeCanvas();
		        }
		    }, {
		        key: "$resizeCanvas",
		        value: function $resizeCanvas() {
		            this._viewportCache = this._viewportSizeGenerator(this._canvas);
		            if (this.node.children.length === 0) {
		                this.node.addChildByName("render-scene", {});
		            }
		            this.node.broadcastMessage("resizeBuffer", {
		                width: this._viewportCache.Width,
		                height: this._viewportCache.Height,
		                buffers: this._buffers,
		                bufferSizes: this._bufferSizes
		            });
		            this.node.broadcastMessage("bufferUpdated", {
		                buffers: this._buffers,
		                bufferSizes: this._bufferSizes
		            });
		        }
		    }, {
		        key: "$renderViewport",
		        value: function $renderViewport(args) {
		            this.node.broadcastMessage("render", {
		                camera: this.camera,
		                viewport: this._viewportCache,
		                bufferSizes: this._bufferSizes,
		                buffers: this._buffers,
		                loopIndex: args.loopIndex
		            });
		        }
		    }, {
		        key: "_enableMouseHandling",
		        value: function _enableMouseHandling() {
		            this._canvas.addEventListener("mousemove", this._mouseMoveHandler);
		            this._canvas.addEventListener("mouseleave", this._mouseLeaveHandler);
		            this._canvas.addEventListener("mouseenter", this._mouseEnterHandler);
		        }
		    }, {
		        key: "_disableMouseHandling",
		        value: function _disableMouseHandling() {
		            this._canvas.removeEventListener("mousemove", this._mouseMoveHandler);
		            this._canvas.removeEventListener("mouseleave", this._mouseLeaveHandler);
		            this._canvas.removeEventListener("mouseenter", this._mouseEnterHandler);
		        }
		        /**
		         * Check mouse is inside of viewport
		         * @param  {MouseEvent} e [description]
		         * @return {boolean}      [description]
		         */
		
		    }, {
		        key: "_isViewportInside",
		        value: function _isViewportInside(e) {
		            var rc = this._getRelativePosition(e);
		            var n = this._viewportCache.toLocalNormalized(rc[0], rc[1]);
		            return n[0] >= 0 && n[0] <= 1 && n[1] >= 0 && n[1] <= 1;
		        }
		        /**
		         * Obtain mouse point of relative coordinate from element.
		         * @param  {MouseEvent} e [description]
		         * @return {number[]}     [description]
		         */
		
		    }, {
		        key: "_getRelativePosition",
		        value: function _getRelativePosition(e) {
		            var rect = this._canvas.getBoundingClientRect();
		            var positionX = rect.left + window.pageXOffset;
		            var positionY = rect.top + window.pageYOffset;
		            return [e.pageX - positionX, e.pageY - positionY];
		        }
		        /**
		         * Convert mouse args into viewport mouse event
		         * @param  {MouseEvent}         e [description]
		         * @return {ViewportMouseEvent}   [description]
		         */
		
		    }, {
		        key: "_toViewportMouseArgs",
		        value: function _toViewportMouseArgs(e) {
		            var ro = this._getRelativePosition(e);
		            var r = this._viewportCache.toLocal(ro[0], ro[1]);
		            var n = this._viewportCache.toLocalNormalized(ro[0], ro[1]);
		            return Object.assign(e, {
		                viewportX: r[0],
		                viewportY: r[1],
		                viewportNormalizedX: n[0],
		                viewportNormalizedY: n[1]
		            });
		        }
		    }]);
		
		    return RendererComponent;
		}(_Component3.default);
		
		exports.default = RendererComponent;
		
		RendererComponent.attributes = {
		    camera: {
		        converter: "Component",
		        default: "camera",
		        target: "Camera"
		    },
		    viewport: {
		        converter: "Viewport",
		        default: "auto"
		    },
		    handleMouse: {
		        converter: "Boolean",
		        default: true
		    }
		};
	
	/***/ },
	/* 69 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Color = __webpack_require__(70);
		
		var _Color2 = _interopRequireDefault(_Color);
		
		var _LoopManagerComponent = __webpack_require__(61);
		
		var _LoopManagerComponent2 = _interopRequireDefault(_LoopManagerComponent);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		/**
		 * 全レンダラーを管理するためのコンポーネント
		 */
		var RendererManagerComponent = function (_Component) {
		    _inherits(RendererManagerComponent, _Component);
		
		    function RendererManagerComponent() {
		        _classCallCheck(this, RendererManagerComponent);
		
		        return _possibleConstructorReturn(this, (RendererManagerComponent.__proto__ || Object.getPrototypeOf(RendererManagerComponent)).apply(this, arguments));
		    }
		
		    _createClass(RendererManagerComponent, [{
		        key: "$awake",
		        value: function $awake() {
		            this.getAttributeRaw("bgColor").boundTo("_bgColor");
		            this.getAttributeRaw("clearDepth").boundTo("_clearDepth");
		        }
		    }, {
		        key: "$mount",
		        value: function $mount() {
		            this.gl = this.companion.get("gl");
		        }
		    }, {
		        key: "$treeInitialized",
		        value: function $treeInitialized() {
		            this.node.getComponent(_LoopManagerComponent2.default).register(this.onloop.bind(this), 1000);
		            if (this.getAttribute("complementRenderer") && this.node.getChildrenByNodeName("renderer").length === 0) {
		                this.node.addChildByName("renderer", {});
		            }
		        }
		    }, {
		        key: "onloop",
		        value: function onloop(loopIndex) {
		            if (this.enabled) {
		                var c = this._bgColor;
		                this.gl.clearColor(c.R, c.G, c.B, c.A);
		                this.gl.clearDepth(this._clearDepth);
		                this.gl.clear(WebGLRenderingContext.COLOR_BUFFER_BIT | WebGLRenderingContext.DEPTH_BUFFER_BIT);
		                this.node.broadcastMessage(1, "renderViewport", {
		                    loopIndex: loopIndex
		                });
		            }
		        }
		    }]);
		
		    return RendererManagerComponent;
		}(_Component3.default);
		
		exports.default = RendererManagerComponent;
		
		RendererManagerComponent.attributes = {
		    /**
		     * キャンバスの初期化色
		     */
		    bgColor: {
		        default: new _Color2.default(0, 0, 0, 0),
		        converter: "Color4"
		    },
		    /**
		     * キャンバスの初期化深度値
		     */
		    clearDepth: {
		        default: 1.0,
		        converter: "Number"
		    },
		    /**
		     * goml内にrendererが一つもなかった場合に自動的に補完するかどうか
		     */
		    complementRenderer: {
		        default: true,
		        converter: "Boolean"
		    }
		};
	
	/***/ },
	/* 70 */
	/***/ function(module, exports) {
	
			Object.defineProperty(exports, "__esModule", {
			    value: true
			});exports.default=window.GrimoireJS.lib.math.Color4;
	
	/***/ },
	/* 71 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _MeshIndexCalculator = __webpack_require__(72);
		
		var _MeshIndexCalculator2 = _interopRequireDefault(_MeshIndexCalculator);
		
		var _FrameBuffer = __webpack_require__(59);
		
		var _FrameBuffer2 = _interopRequireDefault(_FrameBuffer);
		
		var _Texture2D = __webpack_require__(47);
		
		var _Texture2D2 = _interopRequireDefault(_Texture2D);
		
		var _RenderBuffer = __webpack_require__(60);
		
		var _RenderBuffer2 = _interopRequireDefault(_RenderBuffer);
		
		var _TextureSizeCalculator = __webpack_require__(67);
		
		var _TextureSizeCalculator2 = _interopRequireDefault(_TextureSizeCalculator);
		
		var _RenderSceneComponent = __webpack_require__(58);
		
		var _RenderSceneComponent2 = _interopRequireDefault(_RenderSceneComponent);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var RenderHitareaComponent = function (_Component) {
		    _inherits(RenderHitareaComponent, _Component);
		
		    function RenderHitareaComponent() {
		        _classCallCheck(this, RenderHitareaComponent);
		
		        var _this = _possibleConstructorReturn(this, (RenderHitareaComponent.__proto__ || Object.getPrototypeOf(RenderHitareaComponent)).apply(this, arguments));
		
		        _this._readCache = new Uint8Array(4);
		        return _this;
		    }
		
		    _createClass(RenderHitareaComponent, [{
		        key: "$mount",
		        value: function $mount() {
		            this._sceneRenderer = this.node.getComponent(_RenderSceneComponent2.default);
		            if (!this._sceneRenderer) {
		                throw new Error("The node attaching RenderHitArea should contain RenderScene.");
		            }
		            this._gl = this.companion.get("gl");
		            this._canvas = this.companion.get("canvasElement");
		            this.hitareaTexture = new _Texture2D2.default(this._gl);
		            this.hitareaRenderbuffer = new _RenderBuffer2.default(this._gl);
		            if (this.hitareaFBO) {
		                this.hitareaFBO.destroy();
		                this.hitareaFBO = null;
		            }
		        }
		    }, {
		        key: "$resizeBuffer",
		        value: function $resizeBuffer(args) {
		            var size = _TextureSizeCalculator2.default.getPow2Size(args.width, args.height);
		            this._bufferSize = [size.width, size.height];
		            this.hitareaTexture.update(0, size.width, size.height, 0, WebGLRenderingContext.RGBA, WebGLRenderingContext.UNSIGNED_BYTE);
		            this.hitareaRenderbuffer.update(WebGLRenderingContext.DEPTH_COMPONENT16, size.width, size.height);
		            if (!this.hitareaFBO) {
		                this.hitareaFBO = new _FrameBuffer2.default(this._gl);
		                this.hitareaFBO.update(this.hitareaTexture);
		                this.hitareaFBO.update(this.hitareaRenderbuffer);
		            }
		        }
		    }, {
		        key: "$render",
		        value: function $render(args) {
		            if (!this._mouseInside) {
		                return;
		            }
		            this.hitareaFBO.bind();
		            this._gl.viewport(0, 0, this._bufferSize[0], this._bufferSize[1]);
		            // clear buffer if needed
		            this._gl.clearColor(0, 0, 0, 0);
		            this._gl.clear(WebGLRenderingContext.COLOR_BUFFER_BIT);
		            this._gl.clearDepth(1);
		            this._gl.clear(WebGLRenderingContext.DEPTH_BUFFER_BIT);
		            args.camera.renderScene({
		                renderer: this._sceneRenderer,
		                camera: args.camera,
		                buffers: args.buffers,
		                layer: this._sceneRenderer.layer,
		                viewport: args.viewport,
		                loopIndex: args.loopIndex,
		                technique: "hitarea"
		            });
		            this._gl.flush();
		            this._gl.readPixels(this._lastPosition[0] * this._bufferSize[0], this._lastPosition[1] * this._bufferSize[1], 1, 1, WebGLRenderingContext.RGBA, WebGLRenderingContext.UNSIGNED_BYTE, this._readCache);
		            var index = _MeshIndexCalculator2.default.fromColor(this._readCache);
		            if (index === 0) {
		                if (this._lastRenderable instanceof _Component3.default) {
		                    this._lastRenderable.node.emit("mouseleave", this._lastRenderable);
		                }
		                this._lastRenderable = null;
		            } else {
		                var r = args.camera.containedScene.queueRegistory.getByIndex(index - 1);
		                if (this._lastRenderable !== r) {
		                    if (this._lastRenderable instanceof _Component3.default) {
		                        this._lastRenderable.node.emit("mouseleave", this._lastRenderable);
		                    }
		                    if (r instanceof _Component3.default) {
		                        r.node.emit("mouseenter", r);
		                    }
		                } else {
		                    if (r instanceof _Component3.default) {
		                        if (this._mouseMoved) {
		                            r.node.emit("mousemove", r);
		                        } else {
		                            r.node.emit("mouseon", r);
		                        }
		                    }
		                }
		                this._lastRenderable = r;
		            }
		            this._gl.bindFramebuffer(this._gl.FRAMEBUFFER, null);
		        }
		    }, {
		        key: "$mousemove",
		        value: function $mousemove(v) {
		            this._lastPosition = [v.viewportNormalizedX, 1.0 - v.viewportNormalizedY];
		            this._mouseMoved = true;
		        }
		    }, {
		        key: "$mouseenter",
		        value: function $mouseenter(v) {
		            this._mouseInside = true;
		            this._lastPosition = [v.viewportNormalizedX, 1.0 - v.viewportNormalizedY];
		            this._mouseMoved = true;
		        }
		    }, {
		        key: "$mouseleave",
		        value: function $mouseleave(v) {
		            this._mouseInside = false;
		            this._lastPosition = [v.viewportNormalizedX, 1.0 - v.viewportNormalizedY];
		            this._mouseMoved = true;
		            if (this._lastRenderable instanceof _Component3.default) {
		                this._lastRenderable.node.emit("mouseleave", this._lastRenderable);
		            }
		            this._lastRenderable = null;
		        }
		    }]);
		
		    return RenderHitareaComponent;
		}(_Component3.default);
		
		exports.default = RenderHitareaComponent;
		
		RenderHitareaComponent.attributes = {};
	
	/***/ },
	/* 72 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Vector = __webpack_require__(13);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var rc = 511;
		var gc = rc << 8;
		var bc = gc << 8;
		var ac = bc << 8;
		
		var MeshIndexCalculator = function () {
		    function MeshIndexCalculator() {
		        _classCallCheck(this, MeshIndexCalculator);
		    }
		
		    _createClass(MeshIndexCalculator, null, [{
		        key: "fromIndex",
		        value: function fromIndex(index) {
		            return new _Vector2.default((index & rc) / 255, ((index & gc) >> 8) / 255, ((index & bc) >> 16) / 255, ((index & ac) >> 24) / 255);
		        }
		    }, {
		        key: "fromColor",
		        value: function fromColor(color) {
		            return color[0] + (color[1] << 8) + (color[2] << 16) + (color[3] << 24);
		        }
		    }]);
		
		    return MeshIndexCalculator;
		}();
		
		exports.default = MeshIndexCalculator;
	
	/***/ },
	/* 73 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _MaterialContainerComponent = __webpack_require__(51);
		
		var _MaterialContainerComponent2 = _interopRequireDefault(_MaterialContainerComponent);
		
		var _FrameBuffer = __webpack_require__(59);
		
		var _FrameBuffer2 = _interopRequireDefault(_FrameBuffer);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var RenderQuadComponent = function (_Component) {
		    _inherits(RenderQuadComponent, _Component);
		
		    function RenderQuadComponent() {
		        _classCallCheck(this, RenderQuadComponent);
		
		        return _possibleConstructorReturn(this, (RenderQuadComponent.__proto__ || Object.getPrototypeOf(RenderQuadComponent)).apply(this, arguments));
		    }
		
		    _createClass(RenderQuadComponent, [{
		        key: "$awake",
		        value: function $awake() {
		            this.getAttributeRaw("targetBuffer").boundTo("_targetBuffer");
		            this.getAttributeRaw("clearColor").boundTo("_clearColor");
		            this.getAttributeRaw("clearColorEnabled").boundTo("_clearColorEnabled");
		            this.getAttributeRaw("clearDepthEnabled").boundTo("_clearDepthEnabled");
		            this.getAttributeRaw("clearDepth").boundTo("_clearDepth");
		            this.getAttributeRaw("technique").boundTo("_technique");
		        }
		    }, {
		        key: "$mount",
		        value: function $mount() {
		            this._gl = this.companion.get("gl");
		            this._canvas = this.companion.get("canvasElement");
		            var gr = this.companion.get("GeometryRegistory");
		            this._geom = gr.getGeometry("quad");
		            this._materialContainer = this.node.getComponent(_MaterialContainerComponent2.default);
		        }
		    }, {
		        key: "$bufferUpdated",
		        value: function $bufferUpdated(args) {
		            var out = this.getAttribute("out");
		            if (out !== "default") {
		                this._fbo = new _FrameBuffer2.default(this.companion.get("gl"));
		                this._fbo.update(args.buffers[out]);
		                this._fboSize = args.bufferSizes[out];
		            }
		            var depthBuffer = this.getAttribute("depthBuffer");
		            if (depthBuffer && this._fbo) {
		                this._fbo.update(args.buffers[depthBuffer]);
		            }
		        }
		    }, {
		        key: "$render",
		        value: function $render(args) {
		            if (!this._materialContainer.materialReady) {
		                return;
		            }
		            // bound render target
		            if (this._fbo) {
		                this._fbo.bind();
		                this._gl.viewport(0, 0, this._fboSize.width, this._fboSize.height);
		            } else {
		                this._gl.bindFramebuffer(WebGLRenderingContext.FRAMEBUFFER, null);
		                this._gl.viewport(args.viewport.Left, this._canvas.height - args.viewport.Bottom, args.viewport.Width, args.viewport.Height);
		            }
		            // clear buffer if needed
		            if (this._fbo && this._clearColorEnabled) {
		                this._gl.clearColor(this._clearColor.R, this._clearColor.G, this._clearColor.B, this._clearColor.A);
		                this._gl.clear(WebGLRenderingContext.COLOR_BUFFER_BIT);
		            }
		            if (this._clearDepthEnabled) {
		                this._gl.clearDepth(this._clearDepth);
		                this._gl.clear(WebGLRenderingContext.DEPTH_BUFFER_BIT);
		            }
		            // make rendering argument
		            var renderArgs = {
		                targetBuffer: this._targetBuffer,
		                geometry: this._geom,
		                attributeValues: {},
		                camera: null,
		                transform: null,
		                buffers: args.buffers,
		                viewport: args.viewport,
		                technique: this._technique
		            };
		            renderArgs.attributeValues = this._materialContainer.materialArgs;
		            // do render
		            this._materialContainer.material.draw(renderArgs);
		            this._gl.flush();
		        }
		    }]);
		
		    return RenderQuadComponent;
		}(_Component3.default);
		
		exports.default = RenderQuadComponent;
		
		RenderQuadComponent.attributes = {
		    out: {
		        default: "default",
		        converter: "String"
		    },
		    depthBuffer: {
		        default: null,
		        converter: "String"
		    },
		    targetBuffer: {
		        default: "default",
		        converter: "String"
		    },
		    clearColor: {
		        default: "#0000",
		        converter: "Color4"
		    },
		    clearColorEnabled: {
		        default: true,
		        converter: "Boolean"
		    },
		    clearDepthEnabled: {
		        default: true,
		        converter: "Boolean"
		    },
		    clearDepth: {
		        default: 1.0,
		        converter: "Number"
		    },
		    technique: {
		        default: "default",
		        converter: "String"
		    }
		};
	
	/***/ },
	/* 74 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Texture2D = __webpack_require__(47);
		
		var _Texture2D2 = _interopRequireDefault(_Texture2D);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		var _TextureSizeCalculator = __webpack_require__(67);
		
		var _TextureSizeCalculator2 = _interopRequireDefault(_TextureSizeCalculator);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var TextureBufferComponent = function (_Component) {
		    _inherits(TextureBufferComponent, _Component);
		
		    function TextureBufferComponent() {
		        _classCallCheck(this, TextureBufferComponent);
		
		        return _possibleConstructorReturn(this, (TextureBufferComponent.__proto__ || Object.getPrototypeOf(TextureBufferComponent)).apply(this, arguments));
		    }
		
		    _createClass(TextureBufferComponent, [{
		        key: "$mount",
		        value: function $mount() {
		            this.buffer = new _Texture2D2.default(this.companion.get("gl"));
		        }
		    }, {
		        key: "$unmount",
		        value: function $unmount() {
		            this.buffer.destroy();
		            this.buffer = null;
		        }
		    }, {
		        key: "$resizeBuffer",
		        value: function $resizeBuffer(arg) {
		            var bufferName = this.getAttribute("name");
		            if (!bufferName) {
		                throw new Error("Attribute 'name' must be specified.");
		            }
		            var format = this.getAttribute("format");
		            var type = this.getAttribute("type");
		            var newSize = _TextureSizeCalculator2.default.getPow2Size(arg.width, arg.height);
		            this.buffer.update(0, newSize.width, newSize.height, 0, format, type, null);
		            arg.bufferSizes[bufferName] = { width: newSize.width, height: newSize.height };
		            arg.buffers[bufferName] = this.buffer;
		        }
		    }]);
		
		    return TextureBufferComponent;
		}(_Component3.default);
		
		exports.default = TextureBufferComponent;
		
		TextureBufferComponent.attributes = {
		    name: {
		        converter: "String",
		        default: null
		    },
		    format: {
		        converter: "Enum",
		        default: WebGLRenderingContext.RGBA,
		        table: {
		            RGBA: WebGLRenderingContext.RGBA,
		            RGB: WebGLRenderingContext.RGB,
		            ALPHA: WebGLRenderingContext.ALPHA,
		            LUMINANCE: WebGLRenderingContext.LUMINANCE,
		            LUMINANCE_ALPHA: WebGLRenderingContext.LUMINANCE_ALPHA,
		            SRGB_EXT: WebGLRenderingContext["SRGB_EXT"],
		            SRGB_ALPHA_EXT: WebGLRenderingContext["SRGB_ALPHA_EXT"],
		            DEPTH_COMPONENT: WebGLRenderingContext["DEPTH_COMPONENT"],
		            DEPTH_STENCIL: WebGLRenderingContext["DEPTH_STENCIL"]
		        }
		    },
		    type: {
		        converter: "Enum",
		        default: WebGLRenderingContext.UNSIGNED_BYTE,
		        table: {
		            UNSIGNED_BYTE: WebGLRenderingContext.UNSIGNED_BYTE,
		            UNSIGNED_SHORT_5_6_5: WebGLRenderingContext.UNSIGNED_SHORT_5_6_5,
		            UNSIGNED_SHORT_4_4_4_4: WebGLRenderingContext.UNSIGNED_SHORT_4_4_4_4,
		            UNSIGNED_SHORT_5_5_5_1: WebGLRenderingContext.UNSIGNED_SHORT_5_5_5_1,
		            UNSIGNED_SHORT: WebGLRenderingContext.UNSIGNED_SHORT,
		            UNSIGNED_INT: WebGLRenderingContext.UNSIGNED_INT,
		            FLOAT: WebGLRenderingContext.FLOAT
		        }
		    }
		};
	
	/***/ },
	/* 75 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Texture2D = __webpack_require__(47);
		
		var _Texture2D2 = _interopRequireDefault(_Texture2D);
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		var _ImageResolver = __webpack_require__(5);
		
		var _ImageResolver2 = _interopRequireDefault(_ImageResolver);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
		    return new (P || (P = Promise))(function (resolve, reject) {
		        function fulfilled(value) {
		            try {
		                step(generator.next(value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function rejected(value) {
		            try {
		                step(generator["throw"](value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function step(result) {
		            result.done ? resolve(result.value) : new P(function (resolve) {
		                resolve(result.value);
		            }).then(fulfilled, rejected);
		        }
		        step((generator = generator.apply(thisArg, _arguments || [])).next());
		    });
		};
		
		var TextureComponent = function (_Component) {
		    _inherits(TextureComponent, _Component);
		
		    function TextureComponent() {
		        _classCallCheck(this, TextureComponent);
		
		        return _possibleConstructorReturn(this, (TextureComponent.__proto__ || Object.getPrototypeOf(TextureComponent)).apply(this, arguments));
		    }
		
		    _createClass(TextureComponent, [{
		        key: "$mount",
		        value: function $mount() {
		            var _this2 = this;
		
		            var src = this.getAttribute("src");
		            this.texture = new _Texture2D2.default(this.companion.get("gl"));
		            this.texture.magFilter = this.getAttribute("magFilter");
		            this.texture.minFilter = this.getAttribute("minFilter");
		            this.texture.wrapT = this.getAttribute("wrapT");
		            this.texture.wrapS = this.getAttribute("wrapS");
		            this.getAttributeRaw("magFilter").watch(function (v) {
		                return _this2.texture.magFilter = v;
		            });
		            this.getAttributeRaw("minFilter").watch(function (v) {
		                return _this2.texture.minFilter = v;
		            });
		            this.getAttributeRaw("wrapS").watch(function (v) {
		                return _this2.texture.wrapS = v;
		            });
		            this.getAttributeRaw("wrapT").watch(function (v) {
		                return _this2.texture.wrapT = v;
		            });
		            if (src) {
		                this._loadTask(src);
		            }
		        }
		    }, {
		        key: "_loadTask",
		        value: function _loadTask(src) {
		            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
		                var img;
		                return regeneratorRuntime.wrap(function _callee$(_context) {
		                    while (1) {
		                        switch (_context.prev = _context.next) {
		                            case 0:
		                                _context.next = 2;
		                                return _ImageResolver2.default.resolve(src);
		
		                            case 2:
		                                img = _context.sent;
		
		                                this.texture.update(img);
		
		                            case 4:
		                            case "end":
		                                return _context.stop();
		                        }
		                    }
		                }, _callee, this);
		            }));
		        }
		    }]);
		
		    return TextureComponent;
		}(_Component3.default);
		
		exports.default = TextureComponent;
		
		TextureComponent.attributes = {
		    src: {
		        converter: "String",
		        default: null
		    },
		    minFilter: {
		        converter: "Enum",
		        default: "LINEAR",
		        table: {
		            LINEAR: WebGLRenderingContext.LINEAR,
		            NEAREST: WebGLRenderingContext.NEAREST,
		            NEAREST_MIPMAP_NEAREST: WebGLRenderingContext.NEAREST_MIPMAP_NEAREST,
		            NEAREST_MIPMAP_LINEAR: WebGLRenderingContext.NEAREST_MIPMAP_LINEAR,
		            LINEAR_MIPMAP_NEAREST: WebGLRenderingContext.LINEAR_MIPMAP_NEAREST,
		            LINEAR_MIPMAP_LINEAR: WebGLRenderingContext.LINEAR_MIPMAP_LINEAR
		        }
		    },
		    magFilter: {
		        converter: "Enum",
		        default: "LINEAR",
		        table: {
		            LINEAR: WebGLRenderingContext.LINEAR,
		            NEAREST: WebGLRenderingContext.NEAREST
		        }
		    },
		    wrapS: {
		        converter: "Enum",
		        default: "REPEAT",
		        table: {
		            REPEAT: WebGLRenderingContext.REPEAT,
		            MIRRORED_REPEAT: WebGLRenderingContext.MIRRORED_REPEAT,
		            CLAMP_TO_EDGE: WebGLRenderingContext.CLAMP_TO_EDGE
		        }
		    },
		    wrapT: {
		        converter: "Enum",
		        default: "REPEAT",
		        table: {
		            REPEAT: WebGLRenderingContext.REPEAT,
		            MIRRORED_REPEAT: WebGLRenderingContext.MIRRORED_REPEAT,
		            CLAMP_TO_EDGE: WebGLRenderingContext.CLAMP_TO_EDGE
		        }
		    }
		};
	
	/***/ },
	/* 76 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Component2 = __webpack_require__(9);
		
		var _Component3 = _interopRequireDefault(_Component2);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var TimeComponent = function (_Component) {
		    _inherits(TimeComponent, _Component);
		
		    function TimeComponent() {
		        _classCallCheck(this, TimeComponent);
		
		        var _this = _possibleConstructorReturn(this, (TimeComponent.__proto__ || Object.getPrototypeOf(TimeComponent)).apply(this, arguments));
		
		        _this._time = 0;
		        _this._startTime = 0;
		        _this._lastFrame = 0;
		        return _this;
		    }
		
		    _createClass(TimeComponent, [{
		        key: "$awake",
		        value: function $awake() {
		            this._time = 0;
		            this._lastFrame = 0;
		            this._startTime = Date.now();
		        }
		    }, {
		        key: "$update",
		        value: function $update() {
		            var now = Date.now();
		            var total = now - this._startTime;
		            this.setAttribute("time", now);
		            this.setAttribute("timeDelta", now - this._lastFrame);
		            this._lastFrame = now;
		        }
		    }]);
		
		    return TimeComponent;
		}(_Component3.default);
		
		exports.default = TimeComponent;
		
		TimeComponent.attributes = {
		    time: {
		        default: 0,
		        converter: "Number"
		    },
		    timeDelta: {
		        default: 0,
		        converter: "Number"
		    }
		};
	
	/***/ },
	/* 77 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.default = CanvasSizeConverter;
		function CanvasSizeConverter(val) {
		    if (val === "fit") {
		        return {
		            mode: "fit"
		        };
		    }
		    if (typeof val === "string") {
		        var matched = /aspect\(([\d+(?.\d*)?]+)\)/.exec(val);
		        if (matched) {
		            return {
		                mode: "aspect",
		                aspect: Number.parseFloat(matched[1])
		            };
		        }
		    }
		    return {
		        mode: "manual",
		        size: Number.parseFloat(val)
		    };
		}
	
	/***/ },
	/* 78 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.default = GeometryConverter;
		
		var _Geometry = __webpack_require__(41);
		
		var _Geometry2 = _interopRequireDefault(_Geometry);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function GeometryConverter(val, attr) {
		    if (typeof val === "string") {
		        return attr.companion.get("GeometryRegistory").getGeometry(val);
		    } else if (val instanceof _Geometry2.default) {
		        return val;
		    }
		    throw new Error("Specified geometry \"" + val + "\" is not supported for converting into geometry.");
		}
	
	/***/ },
	/* 79 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.default = MaterialConverter;
		
		var _MaterialComponent = __webpack_require__(62);
		
		var _MaterialComponent2 = _interopRequireDefault(_MaterialComponent);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function MaterialConverter(val, attr) {
		    if (typeof val === "string") {
		        var regex = /\s*new\s*\(\s*([a-zA-Z\d\-]+)\s*\)/;
		        var regexResult = void 0;
		        if (regexResult = regex.exec(val)) {
		            attr.component[attr.declaration["componentBoundTo"]] = null;
		            return attr.companion.get("MaterialFactory").instanciate(regexResult[1]);
		        } else {
		            var node = attr.tree(val).first();
		            if (node) {
		                var mc = node.getComponent(_MaterialComponent2.default);
		                attr.component[attr.declaration["componentBoundTo"]] = mc;
		                return mc.materialPromise;
		            } else {
		                console.warn("There was no matching material component filtered by '" + val + "'");
		                return null;
		            }
		        }
		    }
		    return null; // TODO ??
		}
	
	/***/ },
	/* 80 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.default = NodeConverter;
		
		var _GomlNode = __webpack_require__(81);
		
		var _GomlNode2 = _interopRequireDefault(_GomlNode);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function NodeConverter(val, attr) {
		    if (val === null) {
		        return null;
		    }
		    if (val instanceof _GomlNode2.default) {
		        return val;
		    } else if (typeof val === "string") {
		        return attr.component.node.tree(val).first();
		    }
		}
	
	/***/ },
	/* 81 */
	/***/ function(module, exports) {
	
			Object.defineProperty(exports, "__esModule", {
			    value: true
			});exports.default=window.GrimoireJS.Node.GomlNode;
	
	/***/ },
	/* 82 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _Attribute = __webpack_require__(83);
		
		var _Attribute2 = _interopRequireDefault(_Attribute);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		var _lastVal = void 0;
		var _node = void 0;
		exports.default = {
		    name: "Position",
		    lazy: true,
		    verify: function verify(attr) {
		        return true;
		    },
		    convert: function convert(val, attr) {
		        if (val === null) {
		            return null;
		        }
		        if (attr.convertContext._lastVal === val) {
		            return attr.convertContext._node.getAttribute("position");
		        } else {
		            attr.convertContext._lastVal = null;
		            try {
		                var vec = _Attribute2.default.convert("Vector3", attr, val);
		                if (vec) {
		                    return vec;
		                }
		            } catch (e) {
		                ;
		            }
		            attr.convertContext._node = _Attribute2.default.convert("Node", attr, val);
		            if (attr.convertContext._node) {
		                attr.convertContext._lastVal = val;
		                return attr.convertContext._node.getAttribute("position");
		            }
		        }
		    }
		};
	
	/***/ },
	/* 83 */
	/***/ function(module, exports) {
	
			Object.defineProperty(exports, "__esModule", {
			    value: true
			});exports.default=window.GrimoireJS.Node.Attribute;
	
	/***/ },
	/* 84 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		exports.default = TextureConverter;
		
		var _TextureComponent = __webpack_require__(75);
		
		var _TextureComponent2 = _interopRequireDefault(_TextureComponent);
		
		var _TextureReference = __webpack_require__(85);
		
		var _TextureReference2 = _interopRequireDefault(_TextureReference);
		
		var _Texture2D = __webpack_require__(47);
		
		var _Texture2D2 = _interopRequireDefault(_Texture2D);
		
		var _ImageResolver = __webpack_require__(5);
		
		var _ImageResolver2 = _interopRequireDefault(_ImageResolver);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function updateVideo(tex, video) {
		    tex.update(video);
		    requestAnimationFrame(function () {
		        return updateVideo(tex, video);
		    });
		}
		function _parseQuery(query) {
		    var regex = /(query|backbuffer|video)\((.+)\)[^\)]*$/;
		    var regexResult = void 0;
		    if (regexResult = regex.exec(query)) {
		        return {
		            type: regexResult[1],
		            param: regexResult[2]
		        };
		    }
		    return null;
		}
		function generateVideoTag(src) {
		    var vTag = document.createElement("video");
		    vTag.src = src;
		    return vTag;
		}
		function fromVideoTexture(gl, val) {
		    var tex = new _Texture2D2.default(gl);
		    val.play();
		    tex.update(val);
		    updateVideo(tex, val);
		    return tex;
		}
		function TextureConverter(val, attr) {
		    if (val instanceof _Texture2D2.default) {
		        return new _TextureReference2.default(val);
		    }
		    if (typeof val === "string") {
		        var parseResult = _parseQuery(val);
		        if (parseResult) {
		            var _ret = function () {
		                var param = parseResult.param;
		
		                var _ret2 = function () {
		                    switch (parseResult.type) {
		                        case "backbuffer":
		                            return {
		                                v: {
		                                    v: new _TextureReference2.default(function (buffers) {
		                                        return buffers[param];
		                                    })
		                                }
		                            };
		                        case "video":
		                            return {
		                                v: {
		                                    v: new _TextureReference2.default(fromVideoTexture(attr.companion.get("gl"), generateVideoTag(param)))
		                                }
		                            };
		                        case "query":
		                            var obtainedTag = attr.tree(param);
		                            var texture = obtainedTag.first().getComponent(_TextureComponent2.default);
		                            return {
		                                v: {
		                                    v: new _TextureReference2.default(function () {
		                                        return texture.texture;
		                                    })
		                                }
		                            };
		                    }
		                }();
		
		                if ((typeof _ret2 === "undefined" ? "undefined" : _typeof(_ret2)) === "object") return _ret2.v;
		            }();
		
		            if ((typeof _ret === "undefined" ? "undefined" : _typeof(_ret)) === "object") return _ret.v;
		        } else {
		            var _ret3 = function () {
		                var tex = new _Texture2D2.default(attr.companion.get("gl"));
		                _ImageResolver2.default.resolve(val).then(function (t) {
		                    tex.update(t);
		                });
		                attr.companion.get("loader").register(tex.validPromise);
		                return {
		                    v: new _TextureReference2.default(tex)
		                };
		            }();
		
		            if ((typeof _ret3 === "undefined" ? "undefined" : _typeof(_ret3)) === "object") return _ret3.v;
		        }
		    }
		    if ((typeof val === "undefined" ? "undefined" : _typeof(val)) === "object") {
		        if (val instanceof HTMLImageElement) {
		            var _ret4 = function () {
		                var tex = new _Texture2D2.default(attr.companion.get("gl"));
		                if (val.complete && val.naturalWidth) {
		                    tex.update(val);
		                } else {
		                    val.onload = function () {
		                        tex.update(val);
		                    };
		                }
		                return {
		                    v: new _TextureReference2.default(tex)
		                };
		            }();
		
		            if ((typeof _ret4 === "undefined" ? "undefined" : _typeof(_ret4)) === "object") return _ret4.v;
		        } else if (val instanceof HTMLCanvasElement) {
		            var tex = new _Texture2D2.default(attr.companion.get("gl"));
		            tex.update(val);
		            return new _TextureReference2.default(tex);
		        } else if (val instanceof HTMLVideoElement) {
		            return new _TextureReference2.default(fromVideoTexture(attr.companion.get("gl"), val));
		        }
		    }
		    return null;
		}
	
	/***/ },
	/* 85 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		/**
		 * Proxy of texture reference
		 */
		var TextureReference = function () {
		    function TextureReference(rawResource) {
		        _classCallCheck(this, TextureReference);
		
		        this.rawResource = rawResource;
		        this._isFunctionalProxy = typeof rawResource === "function";
		    }
		
		    _createClass(TextureReference, [{
		        key: "get",
		        value: function get(buffers) {
		            if (!this._isFunctionalProxy) {
		                return this.rawResource;
		            } else {
		                return this.rawResource(buffers);
		            }
		        }
		    }]);
		
		    return TextureReference;
		}();
		
		exports.default = TextureReference;
	
	/***/ },
	/* 86 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
		
		exports.default = ViewportConverter;
		
		var _Rectangle = __webpack_require__(87);
		
		var _Rectangle2 = _interopRequireDefault(_Rectangle);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _toPixel(parentSize, rep) {
		    var regex = /(\d+)\s*%/;
		    var regexResult = void 0;
		    if (regexResult = regex.exec(rep)) {
		        var percentage = Number.parseFloat(regexResult[1]);
		        return Math.floor(parentSize * percentage * 0.01);
		    } else {
		        return Math.floor(Number.parseFloat(rep));
		    }
		}
		function ViewportConverter(val) {
		    if (val instanceof _Rectangle2.default) {
		        return function () {
		            return val;
		        };
		    }
		    if (typeof val === "string") {
		        if (val === "auto") {
		            return function (canvas) {
		                return new _Rectangle2.default(0, 0, canvas.width, canvas.height);
		            };
		        } else {
		            var _ret = function () {
		                var sizes = val.split(",");
		                if (sizes.length !== 4) {
		                    throw new Error("Invalid viewport size was specified.");
		                } else {
		                    return {
		                        v: function v(canvas) {
		                            return new _Rectangle2.default(_toPixel(canvas.width, sizes[0]), _toPixel(canvas.height, sizes[1]), _toPixel(canvas.width, sizes[2]), _toPixel(canvas.height, sizes[3]));
		                        }
		                    };
		                }
		            }();
		
		            if ((typeof _ret === "undefined" ? "undefined" : _typeof(_ret)) === "object") return _ret.v;
		        }
		    }
		    throw new Error(val + " could not be parsed");
		}
	
	/***/ },
	/* 87 */
	/***/ function(module, exports) {
	
			Object.defineProperty(exports, "__esModule", {
			    value: true
			});exports.default=window.GrimoireJS.lib.math.Rectangle;
	
	/***/ },
	/* 88 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _Geometry = __webpack_require__(41);
		
		var _Geometry2 = _interopRequireDefault(_Geometry);
		
		var _AABB = __webpack_require__(42);
		
		var _AABB2 = _interopRequireDefault(_AABB);
		
		var _Vector = __webpack_require__(14);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		var _GeometryUtility = __webpack_require__(89);
		
		var _GeometryUtility2 = _interopRequireDefault(_GeometryUtility);
		
		var _GeometryFactory = __webpack_require__(55);
		
		var _GeometryFactory2 = _interopRequireDefault(_GeometryFactory);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var unitBox = new _AABB2.default();
		unitBox.expand(new _Vector2.default(-1, -1, -1));
		unitBox.expand(new _Vector2.default(1, 1, 1));
		var primitiveLayout = {
		    POSITION: {
		        size: 3,
		        stride: 32
		    },
		    NORMAL: {
		        size: 3,
		        stride: 32,
		        offset: 12
		    },
		    TEXCOORD: {
		        size: 2,
		        stride: 32,
		        offset: 24
		    }
		};
		
		var DefaultPrimitives = function () {
		    function DefaultPrimitives() {
		        _classCallCheck(this, DefaultPrimitives);
		    }
		
		    _createClass(DefaultPrimitives, null, [{
		        key: "register",
		        value: function register() {
		            DefaultPrimitives._registerQuad();
		            DefaultPrimitives._registerCube();
		            DefaultPrimitives._registerSphere();
		            DefaultPrimitives._registerCircle();
		            DefaultPrimitives._registerCylinder();
		            DefaultPrimitives._registerCone();
		            DefaultPrimitives._registerPlane();
		            DefaultPrimitives._registerTriangle();
		            DefaultPrimitives._registerCapsule();
		        }
		    }, {
		        key: "_registerQuad",
		        value: function _registerQuad() {
		            _GeometryFactory2.default.addType("quad", {}, function (gl, attrs) {
		                var geometry = new _Geometry2.default(gl);
		                geometry.addAttributes(_GeometryUtility2.default.plane([0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], 1, 1), primitiveLayout);
		                geometry.addIndex("default", _GeometryUtility2.default.planeIndex(0, 1, 1));
		                geometry.addIndex("wireframe", _GeometryUtility2.default.linesFromTriangles(_GeometryUtility2.default.planeIndex(0, 1, 1)), WebGLRenderingContext.LINES);
		                return geometry;
		            });
		        }
		    }, {
		        key: "_registerTriangle",
		        value: function _registerTriangle() {
		            _GeometryFactory2.default.addType("triangle", {}, function (gl, attrs) {
		                var geometry = new _Geometry2.default(gl);
		                geometry.addAttributes(_GeometryUtility2.default.triangle([0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0]), primitiveLayout);
		                geometry.addIndex("default", _GeometryUtility2.default.triangleIndex(0));
		                geometry.addIndex("wireframe", _GeometryUtility2.default.linesFromTriangles(_GeometryUtility2.default.triangleIndex(0)), WebGLRenderingContext.LINES);
		                return geometry;
		            });
		        }
		    }, {
		        key: "_registerCone",
		        value: function _registerCone() {
		            _GeometryFactory2.default.addType("cone", {
		                divide: {
		                    converter: "Number",
		                    default: 50
		                }
		            }, function (gl, attrs) {
		                var div = attrs["divide"];
		                var geometry = new _Geometry2.default(gl);
		                var theta = div % 2 != 0 ? Math.PI / div : 0;
		                var vertices = [].concat.apply([], [_GeometryUtility2.default.circle([0, -0.5, 0], [0, -1, 0], [-Math.sin(theta), 0, Math.cos(theta)], [Math.cos(theta), 0, Math.sin(theta)], div)]);
		                var g = Math.cos(Math.PI / div) / 3;
		                var length = Math.sin(Math.PI / div) / Math.pow(3, 0.5) * 2;
		                var radius = Math.cos(Math.PI / div) - g;
		                var s = Math.PI / div;
		                for (var i = 0; i < div; i++) {
		                    var step = s * (i * 2 + 1);
		                    Array.prototype.push.apply(vertices, _GeometryUtility2.default.coneTriangle([-Math.sin(step) * radius, 0, -Math.cos(step) * radius], [-Math.cos(Math.PI / 2 - step), 1, -Math.sin(Math.PI / 2 - step)], [Math.sin(step) * radius, 1, Math.cos(step) * radius], [-Math.cos(step) * length, 0, Math.sin(step) * length], div, i));
		                }
		                geometry.addAttributes(vertices, primitiveLayout);
		                var os = div + 2;
		                var indices = [].concat.apply([], [_GeometryUtility2.default.circleIndex(0, div)]);
		                for (var _i = 0; _i < div; _i++) {
		                    Array.prototype.push.apply(indices, _GeometryUtility2.default.triangleIndex(os + _i * 3));
		                }
		                geometry.addIndex("default", indices);
		                geometry.addIndex("wireframe", _GeometryUtility2.default.linesFromTriangles(indices), WebGLRenderingContext.LINES);
		                return geometry;
		            });
		        }
		    }, {
		        key: "_registerCylinder",
		        value: function _registerCylinder() {
		            _GeometryFactory2.default.addType("cylinder", {
		                divide: {
		                    converter: "Number",
		                    default: 50
		                }
		            }, function (gl, attrs) {
		                var div = attrs["divide"];
		                var geometry = new _Geometry2.default(gl);
		                var theta = div % 2 != 0 ? Math.PI / div : 0;
		                var vertices = [].concat.apply([], [_GeometryUtility2.default.circle([0, 1, 0], [0, 1, 0], [0, 0, -1], [1, 0, 0], div), _GeometryUtility2.default.circle([0, -1, 0], [0, -1, 0], [-Math.sin(theta), 0, Math.cos(theta)], [Math.cos(theta), 0, Math.sin(theta)], div)]);
		                var length = Math.sin(Math.PI / div);
		                var radius = Math.cos(Math.PI / div);
		                var s = Math.PI / div;
		                for (var i = 0; i < div; i++) {
		                    var step = s * (i * 2 + 1);
		                    Array.prototype.push.apply(vertices, _GeometryUtility2.default.cylinderPlane([-Math.sin(step) * radius, 0, -Math.cos(step) * radius], [-Math.sin(step), 0, -Math.cos(step)], [0, 1, 0], [-Math.cos(step) * length, 0, Math.sin(step) * length], div, i));
		                }
		                geometry.addAttributes(vertices, primitiveLayout);
		                var os = div + 2;
		                var indices = [].concat.apply([], [_GeometryUtility2.default.circleIndex(0, div), _GeometryUtility2.default.circleIndex(os, div)]);
		                for (var _i2 = 0; _i2 < div; _i2++) {
		                    Array.prototype.push.apply(indices, _GeometryUtility2.default.planeIndex(os * 2 + _i2 * 4, 1, 1));
		                }
		                geometry.addIndex("default", indices);
		                geometry.addIndex("wireframe", _GeometryUtility2.default.linesFromTriangles(indices), WebGLRenderingContext.LINES);
		                return geometry;
		            });
		        }
		    }, {
		        key: "_registerCube",
		        value: function _registerCube() {
		            _GeometryFactory2.default.addType("cube", {
		                divHorizontal: {
		                    converter: "Number",
		                    default: 1
		                },
		                divVertical: {
		                    converter: "Number",
		                    default: 1
		                }
		            }, function (gl, attrs) {
		                var hdiv = attrs["divHorizontal"];
		                var vdiv = attrs["divVertical"];
		                var geometry = new _Geometry2.default(gl);
		                var vertices = [].concat.apply([], [_GeometryUtility2.default.plane([0, 0, 1], [0, 0, 1], [0, 1, 0], [1, 0, 0], hdiv, vdiv), _GeometryUtility2.default.plane([0, 0, -1], [0, 0, -1], [0, 1, 0], [-1, 0, 0], hdiv, vdiv), _GeometryUtility2.default.plane([0, 1, 0], [0, 1, 0], [0, 0, -1], [1, 0, 0], hdiv, vdiv), _GeometryUtility2.default.plane([0, -1, 0], [0, -1, 0], [0, 0, -1], [-1, 0, 0], hdiv, vdiv), _GeometryUtility2.default.plane([1, 0, 0], [1, 0, 0], [0, 1, 0], [0, 0, -1], hdiv, vdiv), _GeometryUtility2.default.plane([-1, 0, 0], [-1, 0, 0], [0, 1, 0], [0, 0, 1], hdiv, vdiv)]);
		                geometry.addAttributes(vertices, primitiveLayout);
		                var os = (hdiv + 1) * (vdiv + 1);
		                var indices = [].concat.apply([], [_GeometryUtility2.default.planeIndex(0, hdiv, vdiv), _GeometryUtility2.default.planeIndex(os, hdiv, vdiv), _GeometryUtility2.default.planeIndex(2 * os, hdiv, vdiv), _GeometryUtility2.default.planeIndex(3 * os, hdiv, vdiv), _GeometryUtility2.default.planeIndex(4 * os, hdiv, vdiv), _GeometryUtility2.default.planeIndex(5 * os, hdiv, vdiv)]);
		                geometry.addIndex("default", indices);
		                geometry.addIndex("wireframe", _GeometryUtility2.default.linesFromTriangles(indices), WebGLRenderingContext.LINES);
		                return geometry;
		            });
		        }
		    }, {
		        key: "_registerSphere",
		        value: function _registerSphere() {
		            _GeometryFactory2.default.addType("sphere", {
		                divVertical: {
		                    converter: "Number",
		                    default: 50
		                },
		                divHorizontal: {
		                    converter: "Number",
		                    default: 50
		                }
		            }, function (gl, attrs) {
		                var dH = attrs["divHorizontal"];
		                var dV = attrs["divVertical"];
		                var geometry = new _Geometry2.default(gl);
		                geometry.addAttributes(_GeometryUtility2.default.sphere([0, 0, 0], [0, 1, 0], [1, 0, 0], [0, 0, -1], dV, dH), primitiveLayout);
		                geometry.addIndex("default", _GeometryUtility2.default.sphereIndex(0, dV, dH));
		                geometry.addIndex("wireframe", _GeometryUtility2.default.linesFromTriangles(_GeometryUtility2.default.sphereIndex(0, dV, dH)), WebGLRenderingContext.LINES);
		                return geometry;
		            });
		        }
		    }, {
		        key: "_registerCapsule",
		        value: function _registerCapsule() {
		            _GeometryFactory2.default.addType("capsule", {
		                divide: {
		                    converter: "Number",
		                    default: 50
		                }
		            }, function (gl, attrs) {
		                var dH = attrs["divide"];
		                var dV = attrs["divide"] % 2 == 1 ? attrs["divide"] + 1 : attrs["divide"];
		                var geometry = new _Geometry2.default(gl);
		                geometry.addAttributes(_GeometryUtility2.default.capsule([0, 0, 0], [0, 1, 0], [1, 0, 0], [0, 0, -1], dV, dH), primitiveLayout);
		                geometry.addIndex("default", _GeometryUtility2.default.sphereIndex(0, dV, dH));
		                geometry.addIndex("wireframe", _GeometryUtility2.default.linesFromTriangles(_GeometryUtility2.default.sphereIndex(0, dV, dH)), WebGLRenderingContext.LINES);
		                return geometry;
		            });
		        }
		    }, {
		        key: "_registerCircle",
		        value: function _registerCircle() {
		            _GeometryFactory2.default.addType("circle", {
		                divide: {
		                    converter: "Number",
		                    default: 30
		                }
		            }, function (gl, attrs) {
		                var div = attrs["divide"];
		                var geometry = new _Geometry2.default(gl);
		                geometry.addAttributes(_GeometryUtility2.default.circle([0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], div), primitiveLayout);
		                geometry.addIndex("default", _GeometryUtility2.default.circleIndex(0, div));
		                geometry.addIndex("wireframe", _GeometryUtility2.default.linesFromTriangles(_GeometryUtility2.default.circleIndex(0, div)), WebGLRenderingContext.LINES);
		                return geometry;
		            });
		        }
		    }, {
		        key: "_registerPlane",
		        value: function _registerPlane() {
		            _GeometryFactory2.default.addType("plane", {
		                divide: {
		                    converter: "Number",
		                    default: 10
		                }
		            }, function (gl, attrs) {
		                var hdiv = attrs["divide"];
		                var vdiv = attrs["divide"];
		                var geometry = new _Geometry2.default(gl);
		                var vertices = [].concat.apply([], [_GeometryUtility2.default.plane([0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], hdiv, vdiv), _GeometryUtility2.default.plane([0, 0, 0], [0, 0, -1], [0, 1, 0], [-1, 0, 0], hdiv, vdiv)]);
		                geometry.addAttributes(vertices, primitiveLayout);
		                var indices = [].concat.apply([], [_GeometryUtility2.default.planeIndex(0, hdiv, vdiv), _GeometryUtility2.default.planeIndex((hdiv + 1) * (vdiv + 1), hdiv, vdiv)]);
		                geometry.addIndex("default", indices);
		                geometry.addIndex("wireframe", _GeometryUtility2.default.linesFromTriangles(indices), WebGLRenderingContext.LINES);
		                return geometry;
		            });
		        }
		    }]);
		
		    return DefaultPrimitives;
		}();
		
		exports.default = DefaultPrimitives;
	
	/***/ },
	/* 89 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var GeometryUtility = function () {
		    function GeometryUtility() {
		        _classCallCheck(this, GeometryUtility);
		    }
		
		    _createClass(GeometryUtility, null, [{
		        key: "linesFromTriangles",
		        value: function linesFromTriangles(indices) {
		            var ret = [];
		            var ic = new Array(3);
		            var i = 0;
		            var _iteratorNormalCompletion = true;
		            var _didIteratorError = false;
		            var _iteratorError = undefined;
		
		            try {
		                for (var _iterator = indices[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
		                    var index = _step.value;
		
		                    ic[i % 3] = index;
		                    if (i % 3 === 2) {
		                        var a = ic[0],
		                            b = ic[1],
		                            c = ic[2];
		                        Array.prototype.push.apply(ret, [a, b, b, c, c, a]);
		                    }
		                    i++;
		                }
		            } catch (err) {
		                _didIteratorError = true;
		                _iteratorError = err;
		            } finally {
		                try {
		                    if (!_iteratorNormalCompletion && _iterator.return) {
		                        _iterator.return();
		                    }
		                } finally {
		                    if (_didIteratorError) {
		                        throw _iteratorError;
		                    }
		                }
		            }
		
		            return ret;
		        }
		    }, {
		        key: "plane",
		        value: function plane(center, normal, up, right) {
		            var hdiv = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;
		            var vdiv = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;
		
		            var ret = new Array(8 * (hdiv + 1) * (vdiv + 1));
		            var sp = [center[0] - up[0] - right[0], center[1] - up[1] - right[1], center[2] - up[2] - right[2]];
		            var sr = [right[0] / hdiv * 2, right[1] / hdiv * 2, right[2] / hdiv * 2];
		            var su = [up[0] / vdiv * 2, up[1] / vdiv * 2, up[2] / vdiv * 2];
		            for (var v = 0; v < vdiv + 1; v++) {
		                for (var h = 0; h < hdiv + 1; h++) {
		                    var fi = ((hdiv + 1) * v + h) * 8;
		                    ret[fi + 0] = sp[0] + sr[0] * h + su[0] * v;
		                    ret[fi + 1] = sp[1] + sr[1] * h + su[1] * v;
		                    ret[fi + 2] = sp[2] + sr[2] * h + su[2] * v;
		                    ret[fi + 3] = normal[0];
		                    ret[fi + 4] = normal[1];
		                    ret[fi + 5] = normal[2];
		                    ret[fi + 6] = 1 / hdiv * h;
		                    ret[fi + 7] = 1 - 1 / vdiv * v;
		                }
		            }
		            return ret;
		        }
		    }, {
		        key: "cylinderPlane",
		        value: function cylinderPlane(center, normal, up, right, divide, order) {
		            var ret = new Array(32);
		            var sp = [center[0] - up[0] - right[0], center[1] - up[1] - right[1], center[2] - up[2] - right[2]];
		            var sr = [right[0] * 2, right[1] * 2, right[2] * 2];
		            var su = [up[0] * 2, up[1] * 2, up[2] * 2];
		            for (var v = 0; v < 2; v++) {
		                for (var h = 0; h < 2; h++) {
		                    var fi = (2 * v + h) * 8;
		                    ret[fi + 0] = sp[0] + sr[0] * h + su[0] * v;
		                    ret[fi + 1] = sp[1] + sr[1] * h + su[1] * v;
		                    ret[fi + 2] = sp[2] + sr[2] * h + su[2] * v;
		                    var l = Math.tan(Math.PI / divide) / Math.sin(Math.PI / divide);
		                    if (h == 0) {
		                        ret[fi + 3] = normal[0] - l * right[0];
		                        ret[fi + 4] = normal[1] - l * right[1];
		                        ret[fi + 5] = normal[2] - l * right[2];
		                    } else {
		                        ret[fi + 3] = normal[0] + l * right[0];
		                        ret[fi + 4] = normal[1] + l * right[1];
		                        ret[fi + 5] = normal[2] + l * right[2];
		                    }
		                    ret[fi + 6] = 1 / divide * (order + 1 + h);
		                    ret[fi + 7] = v == 0 ? 1 : 0;
		                }
		            }
		            return ret;
		        }
		    }, {
		        key: "triangle",
		        value: function triangle(center, normal, up, right) {
		            var ret = new Array(24);
		            var delta = 2 * Math.PI / 3;
		            for (var i = 0; i < 3; i++) {
		                var s = Math.sin(delta * i);
		                var c = Math.cos(delta * i);
		                ret[0 + 8 * i] = center[0] + c * up[0] + s * right[0];
		                ret[1 + 8 * i] = center[1] + c * up[1] + s * right[1];
		                ret[2 + 8 * i] = center[2] + c * up[2] + s * right[2];
		                ret[3 + 8 * i] = normal[0];
		                ret[4 + 8 * i] = normal[1];
		                ret[5 + 8 * i] = normal[2];
		                ret[6 + 8 * i] = 0.5 + (c * up[0] + s * right[0]) / 2;
		                ret[7 + 8 * i] = 0.5 + (c * up[1] + s * right[1]) / 2;
		            }
		            return ret;
		        }
		    }, {
		        key: "coneTriangle",
		        value: function coneTriangle(center, normal, up, right, divide, order) {
		            var ret = new Array(24);
		            var delta = 2 * Math.PI / 3;
		            for (var i = 0; i < 3; i++) {
		                var s = Math.sin(delta * i);
		                var c = Math.cos(delta * i);
		                ret[0 + 8 * i] = center[0] + c * up[0] + s * right[0];
		                ret[1 + 8 * i] = center[1] + c * up[1] + s * right[1];
		                ret[2 + 8 * i] = center[2] + c * up[2] + s * right[2];
		                ret[3 + 8 * i] = normal[0];
		                ret[4 + 8 * i] = normal[1];
		                ret[5 + 8 * i] = normal[2];
		                var k = Math.pow(2, 0.5);
		                var l = Math.tan(Math.PI / divide) / Math.sin(Math.PI / divide) / Math.pow(3, 0.5) * 2;
		                if (i == 0) {
		                    ret[3 + 8 * i] = normal[0];
		                    ret[4 + 8 * i] = normal[1];
		                    ret[5 + 8 * i] = normal[2];
		                    ret[6 + 8 * i] = 0;
		                    ret[7 + 8 * i] = 0;
		                } else if (i == 1) {
		                    ret[3 + 8 * i] = normal[0] / k + l * right[0];
		                    ret[4 + 8 * i] = normal[1] / k + l * right[1];
		                    ret[5 + 8 * i] = normal[2] / k + l * right[2];
		                    ret[6 + 8 * i] = Math.cos(-Math.PI / divide / 2 * (order + 1));
		                    ret[7 + 8 * i] = Math.sin(-Math.PI / divide / 2 * (order + 1));
		                } else {
		                    ret[3 + 8 * i] = normal[0] / k - l * right[0];
		                    ret[4 + 8 * i] = normal[1] / k - l * right[1];
		                    ret[5 + 8 * i] = normal[2] / k - l * right[2];
		                    ret[6 + 8 * i] = Math.cos(-Math.PI / divide / 2 * order);
		                    ret[7 + 8 * i] = Math.sin(-Math.PI / divide / 2 * order);
		                }
		            }
		            return ret;
		        }
		    }, {
		        key: "triangleIndex",
		        value: function triangleIndex(offset) {
		            var ret = new Array(3);
		            ret[0] = offset;
		            ret[1] = offset + 2;
		            ret[2] = offset + 1;
		            return ret;
		        }
		    }, {
		        key: "planeIndex",
		        value: function planeIndex() {
		            var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
		            var hdiv = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
		            var vdiv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
		
		            var ret = new Array(6 * hdiv * vdiv);
		            for (var v = 0; v < vdiv; v++) {
		                for (var h = 0; h < hdiv; h++) {
		                    var fi = (hdiv * v + h) * 6;
		                    var ld = offset + (hdiv + 1) * v + h;
		                    var lu = offset + (hdiv + 1) * (v + 1) + h;
		                    ret[fi + 0] = ld;
		                    ret[fi + 1] = ld + 1;
		                    ret[fi + 2] = lu;
		                    ret[fi + 3] = lu;
		                    ret[fi + 4] = ld + 1;
		                    ret[fi + 5] = lu + 1;
		                }
		            }
		            return ret;
		        }
		    }, {
		        key: "circle",
		        value: function circle(center, normal, up, right) {
		            var divide = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 5;
		
		            var ret = new Array((3 + divide) * 6);
		            // center
		            ret[0] = center[0];
		            ret[1] = center[1];
		            ret[2] = center[2];
		            ret[3] = normal[0];
		            ret[4] = normal[1];
		            ret[5] = normal[2];
		            ret[6] = 0.5;
		            ret[7] = 0.5;
		            var delta = 2 * Math.PI / divide;
		            for (var v = 0; v < divide + 1; v++) {
		                var fi = 8 + v * 8;
		                var s = Math.sin(delta * v);
		                var c = Math.cos(delta * v);
		                ret[fi + 0] = center[0] + c * up[0] + s * right[0];
		                ret[fi + 1] = center[1] + c * up[1] + s * right[1];
		                ret[fi + 2] = center[2] + c * up[2] + s * right[2];
		                ret[fi + 3] = normal[0];
		                ret[fi + 4] = normal[1];
		                ret[fi + 5] = normal[2];
		                ret[fi + 6] = 0.5 + 0.5 * s;
		                ret[fi + 7] = 0.5 - 0.5 * c;
		            }
		            return ret;
		        }
		    }, {
		        key: "circleIndex",
		        value: function circleIndex(offset, divide) {
		            var ret = new Array(3 * divide);
		            for (var i = 0; i < divide; i++) {
		                ret[3 * i + 0] = offset;
		                ret[3 * i + 1] = offset + (i + 2);
		                ret[3 * i + 2] = offset + (i + 1);
		            }
		            return ret;
		        }
		    }, {
		        key: "capsule",
		        value: function capsule(center, up, right, forward) {
		            var vdiv = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 3;
		            var hdiv = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 3;
		
		            var ret = new Array((vdiv * hdiv + 2) * 8);
		            //top(0)
		            ret[0] = center[0] + 2 * up[0];
		            ret[1] = center[1] + 2 * up[1];
		            ret[2] = center[2] + 2 * up[2];
		            ret[3] = up[0];
		            ret[4] = up[1];
		            ret[5] = up[2];
		            ret[6] = 0;
		            ret[7] = 0;
		            // bottom(1)
		            ret[8] = center[0] - 2 * up[0];
		            ret[9] = center[1] - 2 * up[1];
		            ret[10] = center[2] - 2 * up[2];
		            ret[11] = -up[0];
		            ret[12] = -up[1];
		            ret[13] = -up[2];
		            ret[14] = 0;
		            ret[15] = 1;
		            var vDelta = Math.PI / (vdiv + 1);
		            var hDelta = Math.PI * 2 / hdiv;
		            for (var v = 0; v < vdiv; v++) {
		                var vc = Math.cos((v + 1) * vDelta);
		                var vs = Math.sin((v + 1) * vDelta);
		                var phi = vDelta * v;
		                for (var h = 0; h < hdiv + 1; h++) {
		                    var hc = Math.cos(h * hDelta);
		                    var hs = Math.sin(h * hDelta);
		                    var fi = 16 + (v * (hdiv + 1) + h) * 8;
		                    ret[fi + 0] = center[0] + vc * up[0] + vs * (forward[0] * hc + right[0] * hs);
		                    ret[fi + 1] = center[1] + vc * up[1] + vs * (forward[1] * hc + right[1] * hs);
		                    ret[fi + 2] = center[2] + vc * up[2] + vs * (forward[2] * hc + right[2] * hs);
		                    ret[fi + 3] = center[0] + vc * up[0] + vs * (forward[0] * hc + right[0] * hs);
		                    ret[fi + 4] = center[1] + vc * up[1] + vs * (forward[1] * hc + right[1] * hs);
		                    ret[fi + 5] = center[2] + vc * up[2] + vs * (forward[2] * hc + right[2] * hs);
		                    var theta = hDelta * h;
		                    ret[fi + 6] = theta / Math.PI / 2;
		                    ret[fi + 7] = phi / Math.PI;
		                    ret[fi + 0] = ret[fi + 0] > 0 ? ret[fi + 0] + up[0] : ret[fi + 0] - up[0];
		                    ret[fi + 1] = ret[fi + 1] > 0 ? ret[fi + 1] + up[1] : ret[fi + 1] - up[1];
		                    ret[fi + 2] = ret[fi + 2] > 0 ? ret[fi + 2] + up[2] : ret[fi + 2] - up[2];
		                }
		            }
		            return ret;
		        }
		    }, {
		        key: "sphere",
		        value: function sphere(center, up, right, forward) {
		            var vdiv = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 3;
		            var hdiv = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 3;
		
		            var ret = new Array((vdiv * hdiv + 2) * 8);
		            //top(0)
		            ret[0] = center[0] + up[0];
		            ret[1] = center[1] + up[1];
		            ret[2] = center[2] + up[2];
		            ret[3] = up[0];
		            ret[4] = up[1];
		            ret[5] = up[2];
		            ret[6] = 0;
		            ret[7] = 0;
		            // bottom(1)
		            ret[8] = center[0] - up[0];
		            ret[9] = center[1] - up[1];
		            ret[10] = center[2] - up[2];
		            ret[11] = -up[0];
		            ret[12] = -up[1];
		            ret[13] = -up[2];
		            ret[14] = 0;
		            ret[15] = 1;
		            var vDelta = Math.PI / (vdiv + 1);
		            var hDelta = Math.PI * 2 / hdiv;
		            for (var v = 0; v < vdiv; v++) {
		                var vc = Math.cos((v + 1) * vDelta);
		                var vs = Math.sin((v + 1) * vDelta);
		                var phi = vDelta * v;
		                for (var h = 0; h < hdiv + 1; h++) {
		                    var hc = Math.cos(h * hDelta);
		                    var hs = Math.sin(h * hDelta);
		                    var fi = 16 + (v * (hdiv + 1) + h) * 8;
		                    ret[fi + 0] = center[0] + vc * up[0] + vs * (forward[0] * hc + right[0] * hs);
		                    ret[fi + 1] = center[1] + vc * up[1] + vs * (forward[1] * hc + right[1] * hs);
		                    ret[fi + 2] = center[2] + vc * up[2] + vs * (forward[2] * hc + right[2] * hs);
		                    ret[fi + 3] = center[0] + vc * up[0] + vs * (forward[0] * hc + right[0] * hs);
		                    ret[fi + 4] = center[1] + vc * up[1] + vs * (forward[1] * hc + right[1] * hs);
		                    ret[fi + 5] = center[2] + vc * up[2] + vs * (forward[2] * hc + right[2] * hs);
		                    var theta = hDelta * h;
		                    ret[fi + 6] = theta / Math.PI / 2;
		                    ret[fi + 7] = phi / Math.PI;
		                }
		            }
		            return ret;
		        }
		    }, {
		        key: "sphereIndex",
		        value: function sphereIndex(offset) {
		            var vdiv = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;
		            var hdiv = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 3;
		
		            var ret = new Array(hdiv * vdiv * 6);
		            var getIndex = function getIndex(i, j) {
		                return offset + (hdiv + 1) * j + 2 + i;
		            };
		            var top = offset;
		            var bottom = offset + 1;
		            // upper side
		            for (var i = 0; i < hdiv; i++) {
		                ret[3 * i + 0] = top;
		                ret[3 * i + 1] = getIndex(i + 1, 0);
		                ret[3 * i + 2] = getIndex(i, 0);
		            }
		            var k = 3 * hdiv;
		            // middle
		            for (var j = 0; j < vdiv - 1; j++) {
		                for (var _i = 0; _i < hdiv; _i++) {
		                    ret[(hdiv * j + _i) * 6 + k] = getIndex(_i, j);
		                    ret[(hdiv * j + _i) * 6 + k + 1] = getIndex(_i + 1, j);
		                    ret[(hdiv * j + _i) * 6 + k + 2] = getIndex(_i, j + 1);
		                    ret[(hdiv * j + _i) * 6 + k + 3] = getIndex(_i, j + 1);
		                    ret[(hdiv * j + _i) * 6 + k + 4] = getIndex(_i + 1, j);
		                    ret[(hdiv * j + _i) * 6 + k + 5] = getIndex(_i + 1, j + 1);
		                }
		            }
		            var l = hdiv * (vdiv - 1) * 6 + k;
		            // lower side
		            for (var _i2 = 0; _i2 < hdiv; _i2++) {
		                ret[3 * _i2 + l + 0] = bottom;
		                ret[3 * _i2 + l + 1] = getIndex(_i2, vdiv - 1);
		                ret[3 * _i2 + l + 2] = getIndex(_i2 + 1, vdiv - 1);
		            }
		            return ret;
		        }
		    }]);
		
		    return GeometryUtility;
		}();
		
		exports.default = GeometryUtility;
	
	/***/ },
	/* 90 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _MaterialFactory = __webpack_require__(21);
		
		var _MaterialFactory2 = _interopRequireDefault(_MaterialFactory);
		
		var _Unlit = __webpack_require__(91);
		
		var _Unlit2 = _interopRequireDefault(_Unlit);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		var DefaultMaterial = function () {
		    function DefaultMaterial() {
		        _classCallCheck(this, DefaultMaterial);
		    }
		
		    _createClass(DefaultMaterial, null, [{
		        key: "register",
		        value: function register() {
		            _MaterialFactory2.default.addSORTMaterial("unlit", _Unlit2.default);
		        }
		    }]);
		
		    return DefaultMaterial;
		}();
		
		exports.default = DefaultMaterial;
	
	/***/ },
	/* 91 */
	/***/ function(module, exports) {
	
		module.exports = "@Technique default{\n@Pass{\n  @BlendFunc(SRC_ALPHA,ONE_MINUS_SRC_ALPHA)\n  FS_PREC(mediump,float)\n  varying vec2 vTexCoord;\n  #ifdef VS\n\n  attribute vec3 position;\n  attribute vec2 texCoord;\n  @MODELVIEWPROJECTION\n  uniform mat4 _matPVM;\n  void main()\n  {\n    gl_Position = _matPVM * vec4(position,1.0);\n    vTexCoord = texCoord;\n  }\n  #endif\n  #ifdef FS\n  @{type:\"color\",default:\"white\"}\n  uniform vec4 color;\n\n  uniform sampler2D texture;\n  @HAS_TEXTURE{sampler:\"texture\"}\n  uniform bool _textureUsed;\n\n  uniform float _time;\n  void main(void)\n  {\n    if(_textureUsed){\n      gl_FragColor = color * texture2D(texture,vTexCoord);\n    }else{\n      gl_FragColor = color;\n   }\n  }\n  #endif\n}\n}\n"
	
	/***/ },
	/* 92 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _Matrix = __webpack_require__(15);
		
		var _Matrix2 = _interopRequireDefault(_Matrix);
		
		var _UniformResolverRegistry = __webpack_require__(44);
		
		var _UniformResolverRegistry2 = _interopRequireDefault(_UniformResolverRegistry);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		_UniformResolverRegistry2.default.add("MODELVIEWPROJECTION", function (valInfo) {
		    return function (proxy, args) {
		        proxy.uniformMatrix(valInfo.name, args.transform.calcPVM(args.camera));
		    };
		});
		_UniformResolverRegistry2.default.add("LOCAL", function (valInfo) {
		    return function (proxy, args) {
		        proxy.uniformMatrix(valInfo.name, args.transform.localTransform);
		    };
		});
		_UniformResolverRegistry2.default.add("MODEL", function (valInfo) {
		    return function (proxy, args) {
		        proxy.uniformMatrix(valInfo.name, args.transform.globalTransform);
		    };
		});
		_UniformResolverRegistry2.default.add("MODELVIEW", function (valInfo) {
		    return function (proxy, args) {
		        proxy.uniformMatrix(valInfo.name, args.camera.ViewMatrix.multiplyWith(args.transform.globalTransform));
		    };
		});
		_UniformResolverRegistry2.default.add("VIEW", function (valInfo) {
		    return function (proxy, args) {
		        proxy.uniformMatrix(valInfo.name, args.camera.ViewMatrix);
		    };
		});
		_UniformResolverRegistry2.default.add("PROJECTION", function (valInfo) {
		    return function (proxy, args) {
		        proxy.uniformMatrix(valInfo.name, args.camera.ProjectionMatrix);
		    };
		});
		_UniformResolverRegistry2.default.add("MODELINVERSE", function (valInfo) {
		    return function (proxy, args) {
		        proxy.uniformMatrix(valInfo.name, _Matrix2.default.inverse(args.transform.globalTransform));
		    };
		});
		_UniformResolverRegistry2.default.add("VIEWINVERSE", function (valInfo) {
		    return function (proxy, args) {
		        proxy.uniformMatrix(valInfo.name, _Matrix2.default.inverse(args.camera.ViewMatrix));
		    };
		});
		_UniformResolverRegistry2.default.add("PROJECTIONINVERSE", function (valInfo) {
		    return function (proxy, args) {
		        proxy.uniformMatrix(valInfo.name, args.camera.InvProjectionMatrix);
		    };
		});
		_UniformResolverRegistry2.default.add("MODELVIEWINVERSE", function (valInfo) {
		    return function (proxy, args) {
		        proxy.uniformMatrix(valInfo.name, _Matrix2.default.inverse(args.transform.calcVM(args.camera)));
		    };
		});
		_UniformResolverRegistry2.default.add("MODELVIEWPROJECTIONINVERSE", function (valInfo) {
		    return function (proxy, args) {
		        proxy.uniformMatrix(valInfo.name, _Matrix2.default.inverse(args.transform.calcPVM(args.camera)));
		    };
		});
		_UniformResolverRegistry2.default.add("MODELINVERSETRANSPOSE", function (valInfo) {
		    return function (proxy, args) {
		        proxy.uniformMatrix(valInfo.name, _Matrix2.default.transpose(_Matrix2.default.inverse(args.transform.globalTransform)));
		    };
		});
		_UniformResolverRegistry2.default.add("MODELVIEWINVERSETRANSPOSE", function (valInfo) {
		    return function (proxy, args) {
		        proxy.uniformMatrix3(valInfo.name, _Matrix2.default.transpose(_Matrix2.default.inverse(args.transform.calcVM(args.camera))));
		    };
		});
		exports.default = null;
	
	/***/ },
	/* 93 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _MeshIndexCalculator = __webpack_require__(72);
		
		var _MeshIndexCalculator2 = _interopRequireDefault(_MeshIndexCalculator);
		
		var _Vector = __webpack_require__(94);
		
		var _Vector2 = _interopRequireDefault(_Vector);
		
		var _Vector3 = __webpack_require__(13);
		
		var _Vector4 = _interopRequireDefault(_Vector3);
		
		var _UniformResolverRegistry = __webpack_require__(44);
		
		var _UniformResolverRegistry2 = _interopRequireDefault(_UniformResolverRegistry);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		_UniformResolverRegistry2.default.add("VIEWPORT", function (valInfo) {
		    return function (proxy, args) {
		        var vp = args.viewport;
		        proxy.uniformVector4(valInfo.name, new _Vector4.default(vp.Left, vp.Top, vp.Width, vp.Height));
		    };
		});
		_UniformResolverRegistry2.default.add("VIEWPORT_SIZE", function (valInfo) {
		    return function (proxy, args) {
		        var vp = args.viewport;
		        proxy.uniformVector2(valInfo.name, new _Vector2.default(vp.Width, vp.Height));
		    };
		});
		_UniformResolverRegistry2.default.add("TIME", function (valInfo) {
		    return function (proxy, args) {
		        proxy.uniformFloat(valInfo.name, Date.now() % 1.0e7);
		    };
		});
		_UniformResolverRegistry2.default.add("HAS_TEXTURE", function (valInfo, material) {
		    var sampler = valInfo.attributes["sampler"];
		    if (!sampler) {
		        throw new Error("The variable having HAS_TEXTURE as semantics must have sampler attribute");
		    }
		    return function (proxy, args) {
		        var hasTexture = !!material.arguments[sampler] && !!material.arguments[sampler].get(args.buffers);
		        proxy.uniformBool(valInfo.name, hasTexture);
		    };
		});
		_UniformResolverRegistry2.default.add("CAMERA_POSITION", function (valInfo) {
		    return function (proxy, args) {
		        proxy.uniformVector3(valInfo.name, args.camera.transform.globalPosition);
		    };
		});
		_UniformResolverRegistry2.default.add("CAMERA_DIRECTION", function (valInfo) {
		    return function (proxy, args) {
		        proxy.uniformVector3(valInfo.name, args.camera.transform.forward);
		    };
		});
		_UniformResolverRegistry2.default.add("MESH_INDEX", function (valInfo) {
		    return function (proxy, args) {
		        var index = args.renderable.index;
		        proxy.uniformVector4(valInfo.name, _MeshIndexCalculator2.default.fromIndex(index));
		    };
		});
		exports.default = null;
	
	/***/ },
	/* 94 */
	/***/ function(module, exports) {
	
			Object.defineProperty(exports, "__esModule", {
			    value: true
			});exports.default=window.GrimoireJS.lib.math.Vector2;
	
	/***/ },
	/* 95 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _Texture2D = __webpack_require__(47);
		
		var _Texture2D2 = _interopRequireDefault(_Texture2D);
		
		var _UniformResolverRegistry = __webpack_require__(44);
		
		var _UniformResolverRegistry2 = _interopRequireDefault(_UniformResolverRegistry);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		var gl = WebGLRenderingContext;
		var _userValueRegisterers = {
		    array: {},
		    single: {}
		};
		_UniformResolverRegistry2.default.add("USER_VALUE", function (valInfo, material) {
		    var register = void 0;
		    if (valInfo.count) {
		        register = _userValueRegisterers.array[valInfo.type];
		        if (!register) {
		            throw new Error("No user_value registerer was registered for " + valInfo.type + "[]");
		        }
		    } else {
		        register = _userValueRegisterers.single[valInfo.type];
		        if (!register) {
		            throw new Error("No user_value registerer was registered for " + valInfo.type);
		        }
		    }
		    return register(valInfo, material);
		});
		function basicRegister(type, isArray, converter, defaultValue, _register) {
		    var registerTarget = void 0;
		    if (isArray) {
		        registerTarget = _userValueRegisterers.array;
		    } else {
		        registerTarget = _userValueRegisterers.single;
		    }
		    registerTarget[type] = function (valInfo, material) {
		        material.addArgument(valInfo.name, {
		            converter: converter,
		            default: valInfo.attributes["default"] ? valInfo.attributes["default"] : defaultValue
		        });
		        return {
		            register: function register(proxy, args) {
		                _register(proxy, valInfo.name, material.arguments[valInfo.name], args);
		            },
		            dispose: function dispose() {
		                material.deleteArgument(valInfo.name);
		            }
		        };
		    };
		}
		basicRegister(gl.FLOAT, false, "Number", 0, function (proxy, name, value) {
		    return proxy.uniformFloat(name, value);
		});
		basicRegister(gl.INT, false, "Number", 0, function (proxy, name, value) {
		    return proxy.uniformInt(name, value);
		});
		basicRegister(gl.BOOL, false, "Boolean", false, function (proxy, name, value) {
		    return proxy.uniformBool(name, value);
		});
		basicRegister(gl.INT_VEC2, false, "Vector2", [0, 0], function (proxy, name, value) {
		    return proxy.uniformVector2(name, value);
		});
		basicRegister(gl.INT_VEC3, false, "Vector3", [0, 0, 0], function (proxy, name, value) {
		    return proxy.uniformVector3(name, value);
		});
		basicRegister(gl.INT_VEC4, false, "Vector4", [0, 0, 0, 0], function (proxy, name, value) {
		    return proxy.uniformVector4(name, value);
		});
		basicRegister(gl.FLOAT_VEC2, false, "Vector2", [0, 0], function (proxy, name, value) {
		    return proxy.uniformVector2(name, value);
		});
		basicRegister(gl.FLOAT_MAT4, true, "Object", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], function (proxy, name, value) {
		    return proxy.uniformMatrixArray(name, value);
		});
		basicRegister(gl.SAMPLER_2D, false, "Texture", null, function (proxy, name, value, args) {
		    var texture = void 0;
		    if (value && (texture = value.get(args.buffers))) {
		        proxy.uniformTexture2D(name, texture);
		    } else {
		        proxy.uniformTexture2D(name, _Texture2D2.default.defaultTextures.get(proxy.program.gl));
		    }
		});
		_userValueRegisterers.single[gl.FLOAT_VEC3] = function (valInfo, material) {
		    var isColor = valInfo.attributes["type"] === "color";
		    var attrDefault = valInfo.attributes["default"];
		    var defaultValue = attrDefault ? attrDefault : isColor ? [1, 1, 1] : [0, 0, 0];
		    material.addArgument(valInfo.name, {
		        converter: isColor ? "Color3" : "Vector3",
		        default: defaultValue
		    });
		    return {
		        register: isColor ? function (proxy, args) {
		            proxy.uniformColor3(valInfo.name, material.arguments[valInfo.name]);
		        } : function (proxy, args) {
		            proxy.uniformVector3(valInfo.name, material.arguments[valInfo.name]);
		        },
		        dispose: function dispose() {
		            material.deleteArgument(valInfo.name);
		        }
		    };
		};
		_userValueRegisterers.single[gl.FLOAT_VEC4] = function (valInfo, material) {
		    var isColor = valInfo.attributes["type"] === "color";
		    var attrDefault = valInfo.attributes["default"];
		    var defaultValue = attrDefault ? attrDefault : isColor ? [1, 1, 1, 1] : [0, 0, 0, 0];
		    material.addArgument(valInfo.name, {
		        converter: isColor ? "Color4" : "Vector4",
		        default: defaultValue
		    });
		    return {
		        register: isColor ? function (proxy, args) {
		            proxy.uniformColor4(valInfo.name, material.arguments[valInfo.name]);
		        } : function (proxy, args) {
		            proxy.uniformVector4(valInfo.name, material.arguments[valInfo.name]);
		        },
		        dispose: function dispose() {
		            material.deleteArgument(valInfo.name);
		        }
		    };
		};
		exports.default = null;
	
	/***/ },
	/* 96 */
	/***/ function(module, exports) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		exports.default = {
		    /**
		     * GOMLファイルのルートノード
		     *
		     * ツリーに唯一一つ必要なコンポーネントなどをつけておくためのノード。
		     * 特に、`<canvas>`の初期化やループの管理など、最初の初期化時のパラメーターを受け取るためのコンポーネントとともに、
		     * `<canvas>`の設定(`width`や`height`)またはフルスクリーンなどのコンポーネントを含む。
		     */
		    goml: {
		        components: ["CanvasInitializer", "LoopManager", "AssetLoadingManager", "GeometryRegistory", "RendererManager", "Fullscreen"]
		    },
		    /**
		     * ある3D空間上のモデルの配置やカメラの設定などの場面の設定を含むためのノード
		     *
		     * カメラや、ライト、メッシュなど空間に配置するためのノードです。
		     * 全ての場面に存在する座標を持ちうるノード(`TransformComponent`を含むノード)は必ずこのノードの子ノードのとして存在する必要があります。
		     */
		    scene: {
		        components: ["Scene"]
		    },
		    /**
		     * 3D空間上の物体を意味するノード
		     *
		     * メッシュやカメラなどのベースとなるノードです。このノードの子要素には親要素の変型量(`position`や`rotation`)などが伝搬します。
		     * 詳しくは`TransformComponent`を参照すると良いでしょう。
		     */
		    object: {
		        components: ["Transform"]
		    },
		    /**
		     * 3D空間を撮影するためのカメラのノード
		     *
		     * 3D空間を撮影するためのカメラを意味するノードです。シーンをレンダリングするには最低一つのカメラがシーンに属していなければなりません。
		     */
		    camera: {
		        components: ["Camera"],
		        default: {
		            position: [0, 0, 10]
		        },
		        super: "object"
		    },
		    /**
		     * 3D空間上のモデルなど、 **映るもの** を表すためのノード
		     *
		     * 3D空間上に存在する映るものを意味するノードです。シーンに何かを写すには最低一つのメッシュがシーンに属していなければなりません。
		     *
		     * メッシュは、マテリアル(材質)とジオメトリ(形状)からなります。この2つの指定を変えることで、様々な表現が3D空間上で可能になります。
		     */
		    mesh: {
		        components: ["MaterialContainer", "MeshRenderer"],
		        super: "object"
		    },
		    /**
		     * キャンバスの描画手法を指定するためのノード
		     *
		     * キャンバス上の領域をどのように描画するかを示すためのノードです。gomlの読み込み時に一つも存在しない場合は、自動的にgoml直下に生成されます。
		     *
		     * 1つ以上のレンダラーを含むことで、キャンバスの複数の領域をレンダリングしたりすることができるようになります。
		     * また、この子要素に指定する`<render-XXX>`ノードなどによって、どのようにその領域を描画するかが決定されます。
		     *
		     * 通常、`<renderer>`の子ノードに何も存在しない場合、自動的に`<render-scene>`タグが生成されます。
		     */
		    renderer: {
		        components: ["Renderer"]
		    },
		    /**
		     * 新しい形状を生成するためのノード
		     *
		     * 単純な変形(`scale`、`position`、`rotation`だけで表せない)、例えば円の分割数などを指定したい別の形状を明示的に生成するためのノードです。
		     */
		    geometry: {
		        components: ["Geometry"]
		    },
		    /**
		     * テクスチャを明示的に読み込むためのノード
		     *
		     * テクスチャを読み込むためのノードです。通常、テクスチャはurlをマテリアルに指定するなどして読み込まれますが、
		     * サンプラの指定などをしたい場合、このタグで明示的に読み込むことにより読み込むことができます。
		     *
		     */
		    texture: {
		        components: ["Texture"]
		    },
		    /**
		     * マテリアルを明示的に読み込むためのノード
		     *
		     * マテリアルを生成するためのノードです。メッシュからこのノードを参照して利用することにより、複数のメッシュで共通のマテリアルのインスタンスを参照させることができます。
		     *
		     * これは、同時にマテリアルの値が編集できるだけでなく、パフォーマンス的にも大きな利点をもたらします。
		     */
		    material: {
		        components: ["Material"]
		    },
		    /**
		     * 新しいマテリアルを外部から読み込むためのノード
		     *
		     * Grimoire.jsのマテリアルファイル(*.sort)から新しい種類のマテリアルを読み込むためのノードです。
		     */
		    "import-material": {
		        components: ["MaterialImporter"]
		    },
		    /**
		     * カラーバッファ用のテクスチャを生成するためのノード
		     *
		     * `<renderer>`ノードの直下に含まれうるノードの一つです。
		     *
		     * このノードによってレンダリングに用いるカラーバッファを生成することができます。
		     * カラーバッファはオフスクリーンレンダリングなどへの利用など様々な面で利用することができます。
		     */
		    "texture-buffer": {
		        components: ["TextureBuffer"]
		    },
		    /**
		     * 深度バッファ/ステンシルバッファ用の`renderbuffer`を生成するためのノード``
		     *
		     * `<renderer>`ノードの直下に含まれうるノードの一つです。
		     *
		     * このノードによってレンダリングに用いる深度バッファやステンシルバッファを生成することができます。
		     */
		    "render-buffer": {
		        components: ["RenderBuffer"]
		    },
		    /**
		     *
		     * シーンを描画するレンダリング手順を表すためのノード``
		     *
		     * `<renderer>`ノードの直下に含まれうるノードの一つです。
		     *
		     * このノードは`out`に指定されたテクスチャ(デフォルトではキャンバス自身)に対して、シーンの内容を描画します。
		     */
		    "render-scene": {
		        components: ["RenderScene"],
		        default: {
		            material: null
		        }
		    },
		    /**
		     * 四角形単体を特定のマテリアルで描画するためのノード``
		     *
		     * `<renderer>`ノードの直下に含まれうるノードの一つです。
		     *
		     * このノードは`out`に指定されたテクスチャ(デフォルトではキャンバス自身)に対して、単純な四角形(`quad`)を指定されたマテリアルで描画します。
		     */
		    "render-quad": {
		        components: ["MaterialContainer", "RenderQuad"],
		        default: {
		            material: null
		        }
		    }
		};
	
	/***/ },
	/* 97 */
	/***/ function(module, exports, __webpack_require__) {
	
		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		    value: true
		});
		
		var _TimeComponent = __webpack_require__(76);
		
		var _TimeComponent2 = _interopRequireDefault(_TimeComponent);
		
		var _RenderHitareaComponent = __webpack_require__(71);
		
		var _RenderHitareaComponent2 = _interopRequireDefault(_RenderHitareaComponent);
		
		var _PositionConverter = __webpack_require__(82);
		
		var _PositionConverter2 = _interopRequireDefault(_PositionConverter);
		
		var _NodeConverter = __webpack_require__(80);
		
		var _NodeConverter2 = _interopRequireDefault(_NodeConverter);
		
		var _DefaultMaterial = __webpack_require__(90);
		
		var _DefaultMaterial2 = _interopRequireDefault(_DefaultMaterial);
		
		var _DefaultPrimitives = __webpack_require__(88);
		
		var _DefaultPrimitives2 = _interopRequireDefault(_DefaultPrimitives);
		
		var _grimoirejs = __webpack_require__(8);
		
		var _grimoirejs2 = _interopRequireDefault(_grimoirejs);
		
		var _AssetLoadingManagerComponent = __webpack_require__(7);
		
		var _AssetLoadingManagerComponent2 = _interopRequireDefault(_AssetLoadingManagerComponent);
		
		var _CameraComponent = __webpack_require__(11);
		
		var _CameraComponent2 = _interopRequireDefault(_CameraComponent);
		
		var _CanvasInitializerComponent = __webpack_require__(20);
		
		var _CanvasInitializerComponent2 = _interopRequireDefault(_CanvasInitializerComponent);
		
		var _FullscreenComponent = __webpack_require__(53);
		
		var _FullscreenComponent2 = _interopRequireDefault(_FullscreenComponent);
		
		var _GeometryComponent = __webpack_require__(54);
		
		var _GeometryComponent2 = _interopRequireDefault(_GeometryComponent);
		
		var _GeometryRegistoryComponent = __webpack_require__(56);
		
		var _GeometryRegistoryComponent2 = _interopRequireDefault(_GeometryRegistoryComponent);
		
		var _HTMLBinderComponent = __webpack_require__(57);
		
		var _HTMLBinderComponent2 = _interopRequireDefault(_HTMLBinderComponent);
		
		var _LoopManagerComponent = __webpack_require__(61);
		
		var _LoopManagerComponent2 = _interopRequireDefault(_LoopManagerComponent);
		
		var _MaterialComponent = __webpack_require__(62);
		
		var _MaterialComponent2 = _interopRequireDefault(_MaterialComponent);
		
		var _MaterialContainerComponent = __webpack_require__(51);
		
		var _MaterialContainerComponent2 = _interopRequireDefault(_MaterialContainerComponent);
		
		var _MaterialImporterComponent = __webpack_require__(63);
		
		var _MaterialImporterComponent2 = _interopRequireDefault(_MaterialImporterComponent);
		
		var _MeshRendererComponent = __webpack_require__(50);
		
		var _MeshRendererComponent2 = _interopRequireDefault(_MeshRendererComponent);
		
		var _MouseCameraControlComponent = __webpack_require__(64);
		
		var _MouseCameraControlComponent2 = _interopRequireDefault(_MouseCameraControlComponent);
		
		var _RenderBufferComponent = __webpack_require__(66);
		
		var _RenderBufferComponent2 = _interopRequireDefault(_RenderBufferComponent);
		
		var _RendererComponent = __webpack_require__(68);
		
		var _RendererComponent2 = _interopRequireDefault(_RendererComponent);
		
		var _RendererManagerComponent = __webpack_require__(69);
		
		var _RendererManagerComponent2 = _interopRequireDefault(_RendererManagerComponent);
		
		var _RenderQuadComponent = __webpack_require__(73);
		
		var _RenderQuadComponent2 = _interopRequireDefault(_RenderQuadComponent);
		
		var _RenderSceneComponent = __webpack_require__(58);
		
		var _RenderSceneComponent2 = _interopRequireDefault(_RenderSceneComponent);
		
		var _SceneComponent = __webpack_require__(18);
		
		var _SceneComponent2 = _interopRequireDefault(_SceneComponent);
		
		var _TextureBufferComponent = __webpack_require__(74);
		
		var _TextureBufferComponent2 = _interopRequireDefault(_TextureBufferComponent);
		
		var _TextureComponent = __webpack_require__(75);
		
		var _TextureComponent2 = _interopRequireDefault(_TextureComponent);
		
		var _TransformComponent = __webpack_require__(17);
		
		var _TransformComponent2 = _interopRequireDefault(_TransformComponent);
		
		var _CanvasSizeConverter = __webpack_require__(77);
		
		var _CanvasSizeConverter2 = _interopRequireDefault(_CanvasSizeConverter);
		
		var _GeometryConverter = __webpack_require__(78);
		
		var _GeometryConverter2 = _interopRequireDefault(_GeometryConverter);
		
		var _MaterialConverter = __webpack_require__(79);
		
		var _MaterialConverter2 = _interopRequireDefault(_MaterialConverter);
		
		var _TextureConverter = __webpack_require__(84);
		
		var _TextureConverter2 = _interopRequireDefault(_TextureConverter);
		
		var _ViewportConverter = __webpack_require__(86);
		
		var _ViewportConverter2 = _interopRequireDefault(_ViewportConverter);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
		    return new (P || (P = Promise))(function (resolve, reject) {
		        function fulfilled(value) {
		            try {
		                step(generator.next(value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function rejected(value) {
		            try {
		                step(generator["throw"](value));
		            } catch (e) {
		                reject(e);
		            }
		        }
		        function step(result) {
		            result.done ? resolve(result.value) : new P(function (resolve) {
		                resolve(result.value);
		            }).then(fulfilled, rejected);
		        }
		        step((generator = generator.apply(thisArg, _arguments || [])).next());
		    });
		};
		//
		// DO NOT REMOVE THE LINE BELOW.
		//
		
		exports.default = function () {
		    _grimoirejs2.default.register(function () {
		        return __awaiter(undefined, void 0, void 0, regeneratorRuntime.mark(function _callee() {
		            var _$ns;
		
		            return regeneratorRuntime.wrap(function _callee$(_context) {
		                while (1) {
		                    switch (_context.prev = _context.next) {
		                        case 0:
		                            _$ns = _grimoirejs2.default.ns("HTTP://GRIMOIRE.GL/NS/DEFAULT");
		
		                            _grimoirejs2.default.registerComponent(_$ns("AssetLoadingManager"), _AssetLoadingManagerComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("Camera"), _CameraComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("CanvasInitializer"), _CanvasInitializerComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("Fullscreen"), _FullscreenComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("Geometry"), _GeometryComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("GeometryRegistory"), _GeometryRegistoryComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("HTMLBinder"), _HTMLBinderComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("LoopManager"), _LoopManagerComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("Material"), _MaterialComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("MaterialContainer"), _MaterialContainerComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("MaterialImporter"), _MaterialImporterComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("MeshRenderer"), _MeshRendererComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("MouseCameraControl"), _MouseCameraControlComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("RenderBuffer"), _RenderBufferComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("Renderer"), _RendererComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("RendererManager"), _RendererManagerComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("RenderQuad"), _RenderQuadComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("RenderScene"), _RenderSceneComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("Scene"), _SceneComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("TextureBuffer"), _TextureBufferComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("Texture"), _TextureComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("Transform"), _TransformComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("RenderHitArea"), _RenderHitareaComponent2.default);
		                            _grimoirejs2.default.registerComponent(_$ns("Time"), _TimeComponent2.default);
		                            _grimoirejs2.default.registerConverter(_$ns("CanvasSize"), _CanvasSizeConverter2.default);
		                            _grimoirejs2.default.registerConverter(_$ns("Geometry"), _GeometryConverter2.default);
		                            _grimoirejs2.default.registerConverter(_$ns("Material"), _MaterialConverter2.default);
		                            _grimoirejs2.default.registerConverter(_$ns("Texture"), _TextureConverter2.default);
		                            _grimoirejs2.default.registerConverter(_$ns("Texture2D"), _TextureConverter2.default);
		                            _grimoirejs2.default.registerConverter(_$ns("Viewport"), _ViewportConverter2.default);
		                            _grimoirejs2.default.registerConverter(_$ns("Node"), _NodeConverter2.default);
		                            _grimoirejs2.default.registerConverter(_PositionConverter2.default);
		                            _grimoirejs2.default.registerNode("goml", ["CanvasInitializer", "LoopManager", "AssetLoadingManager", "GeometryRegistory", "RendererManager", "Fullscreen"]);
		                            _grimoirejs2.default.registerNode("scene", ["Scene"]);
		                            _grimoirejs2.default.registerNode("object", ["Transform"]);
		                            _grimoirejs2.default.registerNode("camera", ["Camera"], { position: "0,0,10" }, "object");
		                            _grimoirejs2.default.registerNode("mesh", ["MaterialContainer", "MeshRenderer"], {}, "object");
		                            _grimoirejs2.default.registerNode("renderer", ["Renderer"]);
		                            _grimoirejs2.default.registerNode("geometry", ["Geometry"]);
		                            _grimoirejs2.default.registerNode("texture", ["Texture"]);
		                            _grimoirejs2.default.registerNode("material", ["Material"]);
		                            _grimoirejs2.default.registerNode("import-material", ["MaterialImporter"]);
		                            _grimoirejs2.default.registerNode("texture-buffer", ["TextureBuffer"]);
		                            _grimoirejs2.default.registerNode("render-buffer", ["RenderBuffer"]);
		                            _grimoirejs2.default.registerNode("render-scene", ["RenderScene", "RenderHitArea"], {
		                                material: null
		                            });
		                            _grimoirejs2.default.registerNode("render-quad", ["MaterialContainer", "RenderQuad"], {
		                                material: null
		                            });
		                            _DefaultPrimitives2.default.register();
		                            _DefaultMaterial2.default.register();
		
		                        case 49:
		                        case "end":
		                            return _context.stop();
		                    }
		                }
		            }, _callee, this);
		        }));
		    });
		};
	
	/***/ }
	/******/ ])
	});
	;
	//# sourceMappingURL=index.js.map

/***/ }
/******/ ])
});
;
//# sourceMappingURL=grimoire-preset-basic.js.map